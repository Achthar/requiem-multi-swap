{
	"compiler": {
		"version": "0.8.13+commit.abaa5c0e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_symbol",
						"type": "string"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "burn",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "burnFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "subtractedValue",
						"type": "uint256"
					}
				],
				"name": "decreaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "addedValue",
						"type": "uint256"
					}
				],
				"name": "increaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "mint",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "swap",
				"outputs": [
					{
						"internalType": "contract IRequiemStableSwap",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"allowance(address,address)": {
					"details": "See {IERC20-allowance}."
				},
				"approve(address,uint256)": {
					"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
				},
				"balanceOf(address)": {
					"details": "See {IERC20-balanceOf}."
				},
				"burn(uint256)": {
					"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
				},
				"burnFrom(address,uint256)": {
					"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
				},
				"decimals()": {
					"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
				},
				"decreaseAllowance(address,uint256)": {
					"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
				},
				"increaseAllowance(address,uint256)": {
					"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
				},
				"name()": {
					"details": "Returns the name of the token."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"symbol()": {
					"details": "Returns the symbol of the token, usually a shorter version of the name."
				},
				"totalSupply()": {
					"details": "See {IERC20-totalSupply}."
				},
				"transfer(address,uint256)": {
					"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
				},
				"transferFrom(address,address,uint256)": {
					"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/tokens/LPToken.sol": "LPToken"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 999999
		},
		"remappings": []
	},
	"sources": {
		"contracts/interfaces/ERC20/IERC20.sol": {
			"keccak256": "0xab442747ba7fbbe95ce3e26fac7ff53c7ed1f2ddb11ee665905bcd85593ac42e",
			"license": "MIT",
			"urls": [
				"bzz-raw://b86351952ad85ae3a5fa653bc36fc5c4607d542b6da8283adafbb02ff88f9f34",
				"dweb:/ipfs/QmWQRs64h3wgEqAnceJ7M1YUohzbG84rvmZAp6Zp2FiaM7"
			]
		},
		"contracts/interfaces/ERC20/IERC20Metadata.sol": {
			"keccak256": "0xec988a6ff5da4cdef6378a3f8320e39027f557912ba73c92004a467d8a6cd5fe",
			"license": "MIT",
			"urls": [
				"bzz-raw://a5a291b902a40ae071bec000dcd9ecce0a4e047d3f4e279b576ab2c4dca15ef3",
				"dweb:/ipfs/QmZ9meuRP8a12z42MREUBDdkQtLicuSteVx37muuSX7CtC"
			]
		},
		"contracts/interfaces/IRequiemStableSwap.sol": {
			"keccak256": "0x699faceb516d73bd6ec94e84dab80e2a755df1422ec4e37b203d308a2e33c3ea",
			"license": "MIT",
			"urls": [
				"bzz-raw://686b86544cef6a49c8dde08bc12528ab1b329268f2611bb96266c66aa3355177",
				"dweb:/ipfs/QmdGidvjBV2JD2aZw4TKjzq1UHGQZVJ5zymGk5w9RekLZw"
			]
		},
		"contracts/interfaces/flashLoan/IFlashLoanRecipient.sol": {
			"keccak256": "0x6e51896ba8316e9de142499734defcf0ece312bdfcba2045e4bfadff3ed5dbc9",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://d58d99dd468e13595ba23f268449df6bd3f393b58788797d01c65d0269f574ec",
				"dweb:/ipfs/QmYXNsEiXNciouQZVaT2VtZJH7A8tJ324k55Fm5bw2k5oi"
			]
		},
		"contracts/libraries/Context.sol": {
			"keccak256": "0x1e37be1406d40b13daaba8dd730eab1303311bb780625d791f8d3f724f3153f6",
			"license": "MIT",
			"urls": [
				"bzz-raw://3f6057f216bd35d13a8c53b9f42cb2abcec182a03a15078aa84d7822d7147678",
				"dweb:/ipfs/QmXYgXRAsU22fURBqZnMd3F34ZBP8o5y6QSi4BA5dP4WGn"
			]
		},
		"contracts/libraries/ERC20.sol": {
			"keccak256": "0xa7312d13ed0bf9af9bba19440f46e5312bc354760295075580cc6e497c29092c",
			"license": "MIT",
			"urls": [
				"bzz-raw://5376eb19caeb2f05f95f905ac40efa7a9b7bd96b989333f4e9b45bec5c9eee72",
				"dweb:/ipfs/QmaQymWEby1nAxqqtwfvSqYYuSD8j8vzZYsrWhKTsx4n3d"
			]
		},
		"contracts/libraries/ERC20Burnable.sol": {
			"keccak256": "0x165c521f87ff6c50d700da5dca7e8ff9a1432b8528369c9fe7e50668f381773c",
			"license": "MIT",
			"urls": [
				"bzz-raw://49ccaa08fb4af7df6a2037d0ce9ecfb75c34332b78b348e9595d185eebc4c37f",
				"dweb:/ipfs/QmPVZgAWaSXUJ3WZ6CZUhh2Un9jzfgcSCvSHokMPndAHEt"
			]
		},
		"contracts/libraries/Ownable.sol": {
			"keccak256": "0xf65378dbd07bb0ad967fa83e97dc41e9bc9e9148aad564c7cd994b81a98fbc2b",
			"license": "MIT",
			"urls": [
				"bzz-raw://eaa4327b4e24b0210076d7250afb20699fd16a60d1ae149b8baa1347a61715cd",
				"dweb:/ipfs/Qmb7P6tZJCgDV8ynKUQT9eWisUsAc5ymVfnMwVJfkiJThT"
			]
		},
		"contracts/tokens/LPToken.sol": {
			"keccak256": "0xa7bd02e0facd203261af070460eea2e89e0f5ee0f7096a7116a2992bfc8036d2",
			"license": "MIT",
			"urls": [
				"bzz-raw://881da84e4e39808be73e44eb40b50aa7e9f610b206e50173f53113f4a97f54ef",
				"dweb:/ipfs/QmTgJ9abfLeiZUkhN9uifQLG5zojD71HeeiUAtWPVYWp4c"
			]
		}
	},
	"version": 1
}