{
	"compiler": {
		"version": "0.8.11+commit.d7f03943"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_symbol",
						"type": "string"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "burn",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "burnFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "subtractedValue",
						"type": "uint256"
					}
				],
				"name": "decreaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "addedValue",
						"type": "uint256"
					}
				],
				"name": "increaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "mint",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "swap",
				"outputs": [
					{
						"internalType": "contract IRequiemStableSwap",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"allowance(address,address)": {
					"details": "See {IERC20-allowance}."
				},
				"approve(address,uint256)": {
					"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
				},
				"balanceOf(address)": {
					"details": "See {IERC20-balanceOf}."
				},
				"burn(uint256)": {
					"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
				},
				"burnFrom(address,uint256)": {
					"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
				},
				"decimals()": {
					"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
				},
				"decreaseAllowance(address,uint256)": {
					"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
				},
				"increaseAllowance(address,uint256)": {
					"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
				},
				"name()": {
					"details": "Returns the name of the token."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"symbol()": {
					"details": "Returns the symbol of the token, usually a shorter version of the name."
				},
				"totalSupply()": {
					"details": "See {IERC20-totalSupply}."
				},
				"transfer(address,uint256)": {
					"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
				},
				"transferFrom(address,address,uint256)": {
					"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/tokens/LPToken.sol": "LPToken"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/interfaces/ERC20/IERC20.sol": {
			"keccak256": "0x53949e9a0715f73387ca0d7df5e6f858708953f8dd671225ca5a8bbf8198fd60",
			"license": "MIT",
			"urls": [
				"bzz-raw://f567149edb25e31ed99d9c27fdae68da5a6706b86e2a827b60a020e46408ab2a",
				"dweb:/ipfs/QmTioyqdgbqWLJCyYkPpzPMP7ETojoPdzLizY6wBUhhBM5"
			]
		},
		"contracts/interfaces/ERC20/IERC20Metadata.sol": {
			"keccak256": "0x3d72d15f7e28feae0afcbffa0dc27e2a4b44828f414cd08be32ba130fbd8c1dc",
			"license": "MIT",
			"urls": [
				"bzz-raw://452da8721c1f964cbddfe2cae27050092d974cada737d36fa2b6b5198fa6e31c",
				"dweb:/ipfs/QmbZhamDaG9wTsKc197TwAMeLNxgq6aiuEAwWshqLnghAq"
			]
		},
		"contracts/interfaces/IFlashLoanRecipient.sol": {
			"keccak256": "0x22f039855f27fa60f41ff2a5590b87a610cefdd0cf3f9b061e8c3b5f6c38c45b",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://c6619eb26d8633af2635e3504eef843fc756c19aa490ed83fbd1cff6cc25a5d1",
				"dweb:/ipfs/QmapiUazV3gGLMajrh1im8xuUXpfJf4a83g3xZSYovgKJe"
			]
		},
		"contracts/interfaces/IRequiemStableSwap.sol": {
			"keccak256": "0xb36852aa7fd09252306bde9af5ad98c5ca6b32c3b04115b410b0767d804ffcab",
			"license": "MIT",
			"urls": [
				"bzz-raw://34183174fa860811e8089c0c4a7830ff5ade33e2ad4dc5652458f6068e896586",
				"dweb:/ipfs/QmZqtTwcZyUphb3JjrVaqcm331Ysm4gfZX33aKimvLUSgr"
			]
		},
		"contracts/libraries/Context.sol": {
			"keccak256": "0x335d40e877d75f1696355fdb0cf7dd0641b6507f98b1b13519630c87329233c8",
			"license": "MIT",
			"urls": [
				"bzz-raw://196f02d3296d6977c10a9d7a0dd1f48b2df3e1f7341bf99eefe6f8467f476de3",
				"dweb:/ipfs/QmeSrvwrbA6aotqWBJUyH3ZyMcqTgzgq54nFDpm1QGpkrZ"
			]
		},
		"contracts/libraries/ERC20.sol": {
			"keccak256": "0xa3e528fa4df0f07132c9d77d3532d6511275b0e63575496faf48957f93f73997",
			"license": "MIT",
			"urls": [
				"bzz-raw://260d2d5fc0437d9184bebaa2c5164bf0c28cb92af5fbea0cebcb6bc97822aecd",
				"dweb:/ipfs/QmWrcaDTHFUMUCKJQt4yV9R3bhNvuATjTBEB6wtopCtUCy"
			]
		},
		"contracts/libraries/ERC20Burnable.sol": {
			"keccak256": "0xab8012a73a9d6792f7ba40615ea2e679c3f53d0713735f4c7fe0d2c81e40ed0c",
			"license": "MIT",
			"urls": [
				"bzz-raw://1b37ba5380885674a405a651828a4f9a2e7794d40f2ae50ab5eb0f23a18f48f7",
				"dweb:/ipfs/QmZvRF4uGmfafnRbT1p4tGPwvHSuCT5rSqf1XFtj2L6hXa"
			]
		},
		"contracts/libraries/Ownable.sol": {
			"keccak256": "0xf56aec80815d8035201f7f36a8a0852dbd987b1bfcdbbae385a23027f1088d6f",
			"license": "MIT",
			"urls": [
				"bzz-raw://26f33ae612df78f2557699036bd540f4f947e0491868b9c5744a78fe6be015ab",
				"dweb:/ipfs/QmYHwW38YaVA6wyb55i1UyAPx3M5G9XwkbrVMR5iE3YoBY"
			]
		},
		"contracts/tokens/LPToken.sol": {
			"keccak256": "0x60ccc35373a4c789928503c0287dfc34c90f683e5bf1c9c16b484b04386db7ec",
			"license": "MIT",
			"urls": [
				"bzz-raw://dbb90573139fd35f0061eb87e632dd8679fc72cc2d69a9ca753d06b4f543a22f",
				"dweb:/ipfs/QmWTuaRMLMwARpYhZK6RmqCRyQcVCtzHEmDKgUSVoSHcDi"
			]
		}
	},
	"version": 1
}