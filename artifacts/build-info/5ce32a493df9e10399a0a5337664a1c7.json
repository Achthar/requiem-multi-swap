{
  "id": "5ce32a493df9e10399a0a5337664a1c7",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.10",
  "solcLongVersion": "0.8.10+commit.fc410830",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/libraries/helpers/BaseSplitCodeFactory.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.10;\npragma experimental ABIEncoderV2;\n\nimport \"./CodeDeployer.sol\";\n\n/**\n * @dev Base factory for contracts whose creation code is so large that the factory cannot hold it. This happens when\n * the contract's creation code grows close to 24kB.\n *\n * Note that this factory cannot help with contracts that have a *runtime* (deployed) bytecode larger than 24kB.\n */\nabstract contract BaseSplitCodeFactory {\n    // The contract's creation code is stored as code in two separate addresses, and retrieved via `extcodecopy`. This\n    // means this factory supports contracts with creation code of up to 48kB.\n    // We rely on inline-assembly to achieve this, both to make the entire operation highly gas efficient, and because\n    // `extcodecopy` is not available in Solidity.\n\n    // solhint-disable no-inline-assembly\n\n    address private immutable _creationCodeContractA;\n    uint256 private immutable _creationCodeSizeA;\n\n    address private immutable _creationCodeContractB;\n    uint256 private immutable _creationCodeSizeB;\n\n    /**\n     * @dev The creation code of a contract Foo can be obtained inside Solidity with `type(Foo).creationCode`.\n     */\n    constructor(bytes memory creationCode) {\n        uint256 creationCodeSize = creationCode.length;\n\n        // We are going to deploy two contracts: one with approximately the first half of `creationCode`'s contents\n        // (A), and another with the remaining half (B).\n        // We store the lengths in both immutable and stack variables, since immutable variables cannot be read during\n        // construction.\n        uint256 creationCodeSizeA = creationCodeSize / 2;\n        _creationCodeSizeA = creationCodeSizeA;\n\n        uint256 creationCodeSizeB = creationCodeSize - creationCodeSizeA;\n        _creationCodeSizeB = creationCodeSizeB;\n\n        // To deploy the contracts, we're going to use `CodeDeployer.deploy()`, which expects a memory array with\n        // the code to deploy. Note that we cannot simply create arrays for A and B's code by copying or moving\n        // `creationCode`'s contents as they are expected to be very large (> 24kB), so we must operate in-place.\n\n        // Memory: [ code length ] [ A.data ] [ B.data ]\n\n        // Creating A's array is simple: we simply replace `creationCode`'s length with A's length. We'll later restore\n        // the original length.\n\n        bytes memory creationCodeA;\n        assembly {\n            creationCodeA := creationCode\n            mstore(creationCodeA, creationCodeSizeA)\n        }\n\n        // Memory: [ A.length ] [ A.data ] [ B.data ]\n        //         ^ creationCodeA\n\n        _creationCodeContractA = CodeDeployer.deploy(creationCodeA);\n\n        // Creating B's array is a bit more involved: since we cannot move B's contents, we are going to create a 'new'\n        // memory array starting at A's last 32 bytes, which will be replaced with B's length. We'll back-up this last\n        // byte to later restore it.\n\n        bytes memory creationCodeB;\n        bytes32 lastByteA;\n\n        assembly {\n            // `creationCode` points to the array's length, not data, so by adding A's length to it we arrive at A's\n            // last 32 bytes.\n            creationCodeB := add(creationCode, creationCodeSizeA)\n            lastByteA := mload(creationCodeB)\n            mstore(creationCodeB, creationCodeSizeB)\n        }\n\n        // Memory: [ A.length ] [ A.data[ : -1] ] [ B.length ][ B.data ]\n        //         ^ creationCodeA                ^ creationCodeB\n\n        _creationCodeContractB = CodeDeployer.deploy(creationCodeB);\n\n        // We now restore the original contents of `creationCode` by writing back the original length and A's last byte.\n        assembly {\n            mstore(creationCodeA, creationCodeSize)\n            mstore(creationCodeB, lastByteA)\n        }\n    }\n\n    /**\n     * @dev Returns the two addresses where the creation code of the contract crated by this factory is stored.\n     */\n    function getCreationCodeContracts() public view returns (address contractA, address contractB) {\n        return (_creationCodeContractA, _creationCodeContractB);\n    }\n\n    /**\n     * @dev Returns the creation code of the contract this factory creates.\n     */\n    function getCreationCode() public view returns (bytes memory) {\n        return _getCreationCodeWithArgs(\"\");\n    }\n\n    /**\n     * @dev Returns the creation code that will result in a contract being deployed with `constructorArgs`.\n     */\n    function _getCreationCodeWithArgs(bytes memory constructorArgs) private view returns (bytes memory code) {\n        // This function exists because `abi.encode()` cannot be instructed to place its result at a specific address.\n        // We need for the ABI-encoded constructor arguments to be located immediately after the creation code, but\n        // cannot rely on `abi.encodePacked()` to perform concatenation as that would involve copying the creation code,\n        // which would be prohibitively expensive.\n        // Instead, we compute the creation code in a pre-allocated array that is large enough to hold *both* the\n        // creation code and the constructor arguments, and then copy the ABI-encoded arguments (which should not be\n        // overly long) right after the end of the creation code.\n\n        // Immutable variables cannot be used in assembly, so we store them in the stack first.\n        address creationCodeContractA = _creationCodeContractA;\n        uint256 creationCodeSizeA = _creationCodeSizeA;\n        address creationCodeContractB = _creationCodeContractB;\n        uint256 creationCodeSizeB = _creationCodeSizeB;\n\n        uint256 creationCodeSize = creationCodeSizeA + creationCodeSizeB;\n        uint256 constructorArgsSize = constructorArgs.length;\n\n        uint256 codeSize = creationCodeSize + constructorArgsSize;\n\n        assembly {\n            // First, we allocate memory for `code` by retrieving the free memory pointer and then moving it ahead of\n            // `code` by the size of the creation code plus constructor arguments, and 32 bytes for the array length.\n            code := mload(0x40)\n            mstore(0x40, add(code, add(codeSize, 32)))\n\n            // We now store the length of the code plus constructor arguments.\n            mstore(code, codeSize)\n\n            // Next, we concatenate the creation code stored in A and B.\n            let dataStart := add(code, 32)\n            extcodecopy(creationCodeContractA, dataStart, 0, creationCodeSizeA)\n            extcodecopy(creationCodeContractB, add(dataStart, creationCodeSizeA), 0, creationCodeSizeB)\n        }\n\n        // Finally, we copy the constructorArgs to the end of the array. Unfortunately there is no way to avoid this\n        // copy, as it is not possible to tell Solidity where to store the result of `abi.encode()`.\n        uint256 constructorArgsDataPtr;\n        uint256 constructorArgsCodeDataPtr;\n        assembly {\n            constructorArgsDataPtr := add(constructorArgs, 32)\n            constructorArgsCodeDataPtr := add(add(code, 32), creationCodeSize)\n        }\n\n        _memcpy(constructorArgsCodeDataPtr, constructorArgsDataPtr, constructorArgsSize);\n    }\n\n    /**\n     * @dev Deploys a contract with constructor arguments. To create `constructorArgs`, call `abi.encode()` with the\n     * contract's constructor arguments, in order.\n     */\n    function _create(bytes memory constructorArgs) internal virtual returns (address) {\n        bytes memory creationCode = _getCreationCodeWithArgs(constructorArgs);\n\n        address destination;\n        assembly {\n            destination := create(0, add(creationCode, 32), mload(creationCode))\n        }\n\n        if (destination == address(0)) {\n            // Bubble up inner revert reason\n            // solhint-disable-next-line no-inline-assembly\n            assembly {\n                returndatacopy(0, 0, returndatasize())\n                revert(0, returndatasize())\n            }\n        }\n\n        return destination;\n    }\n\n    // From\n    // https://github.com/Arachnid/solidity-stringutils/blob/b9a6f6615cf18a87a823cbc461ce9e140a61c305/src/strings.sol\n    function _memcpy(\n        uint256 dest,\n        uint256 src,\n        uint256 len\n    ) private pure {\n        // Copy word-length chunks while possible\n        for (; len >= 32; len -= 32) {\n            assembly {\n                mstore(dest, mload(src))\n            }\n            dest += 32;\n            src += 32;\n        }\n\n        // Copy remaining bytes\n        uint256 mask = 256**(32 - len) - 1;\n        assembly {\n            let srcpart := and(mload(src), not(mask))\n            let destpart := and(mload(dest), mask)\n            mstore(dest, or(destpart, srcpart))\n        }\n    }\n}\n"
      },
      "contracts/libraries/helpers/CodeDeployer.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.10;\n\n/**\n * @dev Library used to deploy contracts with specific code. This can be used for long-term storage of immutable data as\n * contract code, which can be retrieved via the `extcodecopy` opcode.\n */\nlibrary CodeDeployer {\n    // During contract construction, the full code supplied exists as code, and can be accessed via `codesize` and\n    // `codecopy`. This is not the contract's final code however: whatever the constructor returns is what will be\n    // stored as its code.\n    //\n    // We use this mechanism to have a simple constructor that stores whatever is appended to it. The following opcode\n    // sequence corresponds to the creation code of the following equivalent Solidity contract, plus padding to make the\n    // full code 32 bytes long:\n    //\n    // contract CodeDeployer {\n    //     constructor() payable {\n    //         uint256 size;\n    //         assembly {\n    //             size := sub(codesize(), 32) // size of appended data, as constructor is 32 bytes long\n    //             codecopy(0, 32, size) // copy all appended data to memory at position 0\n    //             return(0, size) // return appended data for it to be stored as code\n    //         }\n    //     }\n    // }\n    //\n    // More specifically, it is composed of the following opcodes (plus padding):\n    //\n    // [1] PUSH1 0x20\n    // [2] CODESIZE\n    // [3] SUB\n    // [4] DUP1\n    // [6] PUSH1 0x20\n    // [8] PUSH1 0x00\n    // [9] CODECOPY\n    // [11] PUSH1 0x00\n    // [12] RETURN\n    //\n    // The padding is just the 0xfe sequence (invalid opcode).\n    bytes32 private constant _DEPLOYER_CREATION_CODE = 0x602038038060206000396000f3fefefefefefefefefefefefefefefefefefefe;\n\n    /**\n     * @dev Deploys a contract with `code` as its code, returning the destination address.\n     *\n     * Reverts if deployment fails.\n     */\n    function deploy(bytes memory code) internal returns (address destination) {\n        bytes32 deployerCreationCode = _DEPLOYER_CREATION_CODE;\n\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            let codeLength := mload(code)\n\n            // `code` is composed of length and data. We've already stored its length in `codeLength`, so we simply\n            // replace it with the deployer creation code (which is exactly 32 bytes long).\n            mstore(code, deployerCreationCode)\n\n            // At this point, `code` now points to the deployer creation code immediately followed by `code`'s data\n            // contents. This is exactly what the deployer expects to receive when created.\n            destination := create(0, code, add(codeLength, 32))\n\n            // Finally, we restore the original length in order to not mutate `code`.\n            mstore(code, codeLength)\n        }\n\n        // The create opcode returns the zero address when contract creation fails, so we revert if this happens.\n        require(destination != address(0), \"CODE_DEPLOYMENT_FAILED\");\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "evmVersion": "london",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/libraries/helpers/BaseSplitCodeFactory.sol": {
        "BaseSplitCodeFactory": {
          "abi": [
            {
              "inputs": [],
              "name": "getCreationCode",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getCreationCodeContracts",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "contractA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "contractB",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Base factory for contracts whose creation code is so large that the factory cannot hold it. This happens when the contract's creation code grows close to 24kB. Note that this factory cannot help with contracts that have a *runtime* (deployed) bytecode larger than 24kB.",
            "kind": "dev",
            "methods": {
              "constructor": {
                "details": "The creation code of a contract Foo can be obtained inside Solidity with `type(Foo).creationCode`."
              },
              "getCreationCode()": {
                "details": "Returns the creation code of the contract this factory creates."
              },
              "getCreationCodeContracts()": {
                "details": "Returns the two addresses where the creation code of the contract crated by this factory is stored."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "getCreationCode()": "00c194db",
              "getCreationCodeContracts()": "174481fa"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getCreationCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCreationCodeContracts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contractA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractB\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Base factory for contracts whose creation code is so large that the factory cannot hold it. This happens when the contract's creation code grows close to 24kB. Note that this factory cannot help with contracts that have a *runtime* (deployed) bytecode larger than 24kB.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"The creation code of a contract Foo can be obtained inside Solidity with `type(Foo).creationCode`.\"},\"getCreationCode()\":{\"details\":\"Returns the creation code of the contract this factory creates.\"},\"getCreationCodeContracts()\":{\"details\":\"Returns the two addresses where the creation code of the contract crated by this factory is stored.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/helpers/BaseSplitCodeFactory.sol\":\"BaseSplitCodeFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/helpers/BaseSplitCodeFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n// This program is free software: you can redistribute it and/or modify\\n// it under the terms of the GNU General Public License as published by\\n// the Free Software Foundation, either version 3 of the License, or\\n// (at your option) any later version.\\n\\n// This program is distributed in the hope that it will be useful,\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n// GNU General Public License for more details.\\n\\n// You should have received a copy of the GNU General Public License\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\npragma solidity ^0.8.10;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"./CodeDeployer.sol\\\";\\n\\n/**\\n * @dev Base factory for contracts whose creation code is so large that the factory cannot hold it. This happens when\\n * the contract's creation code grows close to 24kB.\\n *\\n * Note that this factory cannot help with contracts that have a *runtime* (deployed) bytecode larger than 24kB.\\n */\\nabstract contract BaseSplitCodeFactory {\\n    // The contract's creation code is stored as code in two separate addresses, and retrieved via `extcodecopy`. This\\n    // means this factory supports contracts with creation code of up to 48kB.\\n    // We rely on inline-assembly to achieve this, both to make the entire operation highly gas efficient, and because\\n    // `extcodecopy` is not available in Solidity.\\n\\n    // solhint-disable no-inline-assembly\\n\\n    address private immutable _creationCodeContractA;\\n    uint256 private immutable _creationCodeSizeA;\\n\\n    address private immutable _creationCodeContractB;\\n    uint256 private immutable _creationCodeSizeB;\\n\\n    /**\\n     * @dev The creation code of a contract Foo can be obtained inside Solidity with `type(Foo).creationCode`.\\n     */\\n    constructor(bytes memory creationCode) {\\n        uint256 creationCodeSize = creationCode.length;\\n\\n        // We are going to deploy two contracts: one with approximately the first half of `creationCode`'s contents\\n        // (A), and another with the remaining half (B).\\n        // We store the lengths in both immutable and stack variables, since immutable variables cannot be read during\\n        // construction.\\n        uint256 creationCodeSizeA = creationCodeSize / 2;\\n        _creationCodeSizeA = creationCodeSizeA;\\n\\n        uint256 creationCodeSizeB = creationCodeSize - creationCodeSizeA;\\n        _creationCodeSizeB = creationCodeSizeB;\\n\\n        // To deploy the contracts, we're going to use `CodeDeployer.deploy()`, which expects a memory array with\\n        // the code to deploy. Note that we cannot simply create arrays for A and B's code by copying or moving\\n        // `creationCode`'s contents as they are expected to be very large (> 24kB), so we must operate in-place.\\n\\n        // Memory: [ code length ] [ A.data ] [ B.data ]\\n\\n        // Creating A's array is simple: we simply replace `creationCode`'s length with A's length. We'll later restore\\n        // the original length.\\n\\n        bytes memory creationCodeA;\\n        assembly {\\n            creationCodeA := creationCode\\n            mstore(creationCodeA, creationCodeSizeA)\\n        }\\n\\n        // Memory: [ A.length ] [ A.data ] [ B.data ]\\n        //         ^ creationCodeA\\n\\n        _creationCodeContractA = CodeDeployer.deploy(creationCodeA);\\n\\n        // Creating B's array is a bit more involved: since we cannot move B's contents, we are going to create a 'new'\\n        // memory array starting at A's last 32 bytes, which will be replaced with B's length. We'll back-up this last\\n        // byte to later restore it.\\n\\n        bytes memory creationCodeB;\\n        bytes32 lastByteA;\\n\\n        assembly {\\n            // `creationCode` points to the array's length, not data, so by adding A's length to it we arrive at A's\\n            // last 32 bytes.\\n            creationCodeB := add(creationCode, creationCodeSizeA)\\n            lastByteA := mload(creationCodeB)\\n            mstore(creationCodeB, creationCodeSizeB)\\n        }\\n\\n        // Memory: [ A.length ] [ A.data[ : -1] ] [ B.length ][ B.data ]\\n        //         ^ creationCodeA                ^ creationCodeB\\n\\n        _creationCodeContractB = CodeDeployer.deploy(creationCodeB);\\n\\n        // We now restore the original contents of `creationCode` by writing back the original length and A's last byte.\\n        assembly {\\n            mstore(creationCodeA, creationCodeSize)\\n            mstore(creationCodeB, lastByteA)\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the two addresses where the creation code of the contract crated by this factory is stored.\\n     */\\n    function getCreationCodeContracts() public view returns (address contractA, address contractB) {\\n        return (_creationCodeContractA, _creationCodeContractB);\\n    }\\n\\n    /**\\n     * @dev Returns the creation code of the contract this factory creates.\\n     */\\n    function getCreationCode() public view returns (bytes memory) {\\n        return _getCreationCodeWithArgs(\\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the creation code that will result in a contract being deployed with `constructorArgs`.\\n     */\\n    function _getCreationCodeWithArgs(bytes memory constructorArgs) private view returns (bytes memory code) {\\n        // This function exists because `abi.encode()` cannot be instructed to place its result at a specific address.\\n        // We need for the ABI-encoded constructor arguments to be located immediately after the creation code, but\\n        // cannot rely on `abi.encodePacked()` to perform concatenation as that would involve copying the creation code,\\n        // which would be prohibitively expensive.\\n        // Instead, we compute the creation code in a pre-allocated array that is large enough to hold *both* the\\n        // creation code and the constructor arguments, and then copy the ABI-encoded arguments (which should not be\\n        // overly long) right after the end of the creation code.\\n\\n        // Immutable variables cannot be used in assembly, so we store them in the stack first.\\n        address creationCodeContractA = _creationCodeContractA;\\n        uint256 creationCodeSizeA = _creationCodeSizeA;\\n        address creationCodeContractB = _creationCodeContractB;\\n        uint256 creationCodeSizeB = _creationCodeSizeB;\\n\\n        uint256 creationCodeSize = creationCodeSizeA + creationCodeSizeB;\\n        uint256 constructorArgsSize = constructorArgs.length;\\n\\n        uint256 codeSize = creationCodeSize + constructorArgsSize;\\n\\n        assembly {\\n            // First, we allocate memory for `code` by retrieving the free memory pointer and then moving it ahead of\\n            // `code` by the size of the creation code plus constructor arguments, and 32 bytes for the array length.\\n            code := mload(0x40)\\n            mstore(0x40, add(code, add(codeSize, 32)))\\n\\n            // We now store the length of the code plus constructor arguments.\\n            mstore(code, codeSize)\\n\\n            // Next, we concatenate the creation code stored in A and B.\\n            let dataStart := add(code, 32)\\n            extcodecopy(creationCodeContractA, dataStart, 0, creationCodeSizeA)\\n            extcodecopy(creationCodeContractB, add(dataStart, creationCodeSizeA), 0, creationCodeSizeB)\\n        }\\n\\n        // Finally, we copy the constructorArgs to the end of the array. Unfortunately there is no way to avoid this\\n        // copy, as it is not possible to tell Solidity where to store the result of `abi.encode()`.\\n        uint256 constructorArgsDataPtr;\\n        uint256 constructorArgsCodeDataPtr;\\n        assembly {\\n            constructorArgsDataPtr := add(constructorArgs, 32)\\n            constructorArgsCodeDataPtr := add(add(code, 32), creationCodeSize)\\n        }\\n\\n        _memcpy(constructorArgsCodeDataPtr, constructorArgsDataPtr, constructorArgsSize);\\n    }\\n\\n    /**\\n     * @dev Deploys a contract with constructor arguments. To create `constructorArgs`, call `abi.encode()` with the\\n     * contract's constructor arguments, in order.\\n     */\\n    function _create(bytes memory constructorArgs) internal virtual returns (address) {\\n        bytes memory creationCode = _getCreationCodeWithArgs(constructorArgs);\\n\\n        address destination;\\n        assembly {\\n            destination := create(0, add(creationCode, 32), mload(creationCode))\\n        }\\n\\n        if (destination == address(0)) {\\n            // Bubble up inner revert reason\\n            // solhint-disable-next-line no-inline-assembly\\n            assembly {\\n                returndatacopy(0, 0, returndatasize())\\n                revert(0, returndatasize())\\n            }\\n        }\\n\\n        return destination;\\n    }\\n\\n    // From\\n    // https://github.com/Arachnid/solidity-stringutils/blob/b9a6f6615cf18a87a823cbc461ce9e140a61c305/src/strings.sol\\n    function _memcpy(\\n        uint256 dest,\\n        uint256 src,\\n        uint256 len\\n    ) private pure {\\n        // Copy word-length chunks while possible\\n        for (; len >= 32; len -= 32) {\\n            assembly {\\n                mstore(dest, mload(src))\\n            }\\n            dest += 32;\\n            src += 32;\\n        }\\n\\n        // Copy remaining bytes\\n        uint256 mask = 256**(32 - len) - 1;\\n        assembly {\\n            let srcpart := and(mload(src), not(mask))\\n            let destpart := and(mload(dest), mask)\\n            mstore(dest, or(destpart, srcpart))\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x7cd8930f0b8069f3f62f9f3dfc5dd79b4ef88246c5ee35235a95f693850c1052\",\"license\":\"GPL-3.0-or-later\"},\"contracts/libraries/helpers/CodeDeployer.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n// This program is free software: you can redistribute it and/or modify\\n// it under the terms of the GNU General Public License as published by\\n// the Free Software Foundation, either version 3 of the License, or\\n// (at your option) any later version.\\n\\n// This program is distributed in the hope that it will be useful,\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n// GNU General Public License for more details.\\n\\n// You should have received a copy of the GNU General Public License\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\npragma solidity ^0.8.10;\\n\\n/**\\n * @dev Library used to deploy contracts with specific code. This can be used for long-term storage of immutable data as\\n * contract code, which can be retrieved via the `extcodecopy` opcode.\\n */\\nlibrary CodeDeployer {\\n    // During contract construction, the full code supplied exists as code, and can be accessed via `codesize` and\\n    // `codecopy`. This is not the contract's final code however: whatever the constructor returns is what will be\\n    // stored as its code.\\n    //\\n    // We use this mechanism to have a simple constructor that stores whatever is appended to it. The following opcode\\n    // sequence corresponds to the creation code of the following equivalent Solidity contract, plus padding to make the\\n    // full code 32 bytes long:\\n    //\\n    // contract CodeDeployer {\\n    //     constructor() payable {\\n    //         uint256 size;\\n    //         assembly {\\n    //             size := sub(codesize(), 32) // size of appended data, as constructor is 32 bytes long\\n    //             codecopy(0, 32, size) // copy all appended data to memory at position 0\\n    //             return(0, size) // return appended data for it to be stored as code\\n    //         }\\n    //     }\\n    // }\\n    //\\n    // More specifically, it is composed of the following opcodes (plus padding):\\n    //\\n    // [1] PUSH1 0x20\\n    // [2] CODESIZE\\n    // [3] SUB\\n    // [4] DUP1\\n    // [6] PUSH1 0x20\\n    // [8] PUSH1 0x00\\n    // [9] CODECOPY\\n    // [11] PUSH1 0x00\\n    // [12] RETURN\\n    //\\n    // The padding is just the 0xfe sequence (invalid opcode).\\n    bytes32 private constant _DEPLOYER_CREATION_CODE = 0x602038038060206000396000f3fefefefefefefefefefefefefefefefefefefe;\\n\\n    /**\\n     * @dev Deploys a contract with `code` as its code, returning the destination address.\\n     *\\n     * Reverts if deployment fails.\\n     */\\n    function deploy(bytes memory code) internal returns (address destination) {\\n        bytes32 deployerCreationCode = _DEPLOYER_CREATION_CODE;\\n\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            let codeLength := mload(code)\\n\\n            // `code` is composed of length and data. We've already stored its length in `codeLength`, so we simply\\n            // replace it with the deployer creation code (which is exactly 32 bytes long).\\n            mstore(code, deployerCreationCode)\\n\\n            // At this point, `code` now points to the deployer creation code immediately followed by `code`'s data\\n            // contents. This is exactly what the deployer expects to receive when created.\\n            destination := create(0, code, add(codeLength, 32))\\n\\n            // Finally, we restore the original length in order to not mutate `code`.\\n            mstore(code, codeLength)\\n        }\\n\\n        // The create opcode returns the zero address when contract creation fails, so we revert if this happens.\\n        require(destination != address(0), \\\"CODE_DEPLOYMENT_FAILED\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x9047bab500aab8bf55975944cb4adec582bbc5214a347a3823b18f22d207f249\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/libraries/helpers/CodeDeployer.sol": {
        "CodeDeployer": {
          "abi": [],
          "devdoc": {
            "details": "Library used to deploy contracts with specific code. This can be used for long-term storage of immutable data as contract code, which can be retrieved via the `extcodecopy` opcode.",
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bdf55c61c95068af02800baedb8ea0433207fd50bc2bc66995109c47ee97201464736f6c634300080a0033",
              "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD CREATE2 0x5C PUSH2 0xC950 PUSH9 0xAF02800BAEDB8EA043 ORIGIN SMOD REVERT POP 0xBC 0x2B 0xC6 PUSH10 0x95109C47EE9720146473 PUSH16 0x6C634300080A00330000000000000000 ",
              "sourceMap": "914:2745:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;914:2745:1;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bdf55c61c95068af02800baedb8ea0433207fd50bc2bc66995109c47ee97201464736f6c634300080a0033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD CREATE2 0x5C PUSH2 0xC950 PUSH9 0xAF02800BAEDB8EA043 ORIGIN SMOD REVERT POP 0xBC 0x2B 0xC6 PUSH10 0x95109C47EE9720146473 PUSH16 0x6C634300080A00330000000000000000 ",
              "sourceMap": "914:2745:1:-:0;;;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "17200",
                "executionCost": "103",
                "totalCost": "17303"
              },
              "internal": {
                "deploy(bytes memory)": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library used to deploy contracts with specific code. This can be used for long-term storage of immutable data as contract code, which can be retrieved via the `extcodecopy` opcode.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/helpers/CodeDeployer.sol\":\"CodeDeployer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/helpers/CodeDeployer.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n// This program is free software: you can redistribute it and/or modify\\n// it under the terms of the GNU General Public License as published by\\n// the Free Software Foundation, either version 3 of the License, or\\n// (at your option) any later version.\\n\\n// This program is distributed in the hope that it will be useful,\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n// GNU General Public License for more details.\\n\\n// You should have received a copy of the GNU General Public License\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\npragma solidity ^0.8.10;\\n\\n/**\\n * @dev Library used to deploy contracts with specific code. This can be used for long-term storage of immutable data as\\n * contract code, which can be retrieved via the `extcodecopy` opcode.\\n */\\nlibrary CodeDeployer {\\n    // During contract construction, the full code supplied exists as code, and can be accessed via `codesize` and\\n    // `codecopy`. This is not the contract's final code however: whatever the constructor returns is what will be\\n    // stored as its code.\\n    //\\n    // We use this mechanism to have a simple constructor that stores whatever is appended to it. The following opcode\\n    // sequence corresponds to the creation code of the following equivalent Solidity contract, plus padding to make the\\n    // full code 32 bytes long:\\n    //\\n    // contract CodeDeployer {\\n    //     constructor() payable {\\n    //         uint256 size;\\n    //         assembly {\\n    //             size := sub(codesize(), 32) // size of appended data, as constructor is 32 bytes long\\n    //             codecopy(0, 32, size) // copy all appended data to memory at position 0\\n    //             return(0, size) // return appended data for it to be stored as code\\n    //         }\\n    //     }\\n    // }\\n    //\\n    // More specifically, it is composed of the following opcodes (plus padding):\\n    //\\n    // [1] PUSH1 0x20\\n    // [2] CODESIZE\\n    // [3] SUB\\n    // [4] DUP1\\n    // [6] PUSH1 0x20\\n    // [8] PUSH1 0x00\\n    // [9] CODECOPY\\n    // [11] PUSH1 0x00\\n    // [12] RETURN\\n    //\\n    // The padding is just the 0xfe sequence (invalid opcode).\\n    bytes32 private constant _DEPLOYER_CREATION_CODE = 0x602038038060206000396000f3fefefefefefefefefefefefefefefefefefefe;\\n\\n    /**\\n     * @dev Deploys a contract with `code` as its code, returning the destination address.\\n     *\\n     * Reverts if deployment fails.\\n     */\\n    function deploy(bytes memory code) internal returns (address destination) {\\n        bytes32 deployerCreationCode = _DEPLOYER_CREATION_CODE;\\n\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            let codeLength := mload(code)\\n\\n            // `code` is composed of length and data. We've already stored its length in `codeLength`, so we simply\\n            // replace it with the deployer creation code (which is exactly 32 bytes long).\\n            mstore(code, deployerCreationCode)\\n\\n            // At this point, `code` now points to the deployer creation code immediately followed by `code`'s data\\n            // contents. This is exactly what the deployer expects to receive when created.\\n            destination := create(0, code, add(codeLength, 32))\\n\\n            // Finally, we restore the original length in order to not mutate `code`.\\n            mstore(code, codeLength)\\n        }\\n\\n        // The create opcode returns the zero address when contract creation fails, so we revert if this happens.\\n        require(destination != address(0), \\\"CODE_DEPLOYMENT_FAILED\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x9047bab500aab8bf55975944cb4adec582bbc5214a347a3823b18f22d207f249\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      }
    },
    "sources": {
      "contracts/libraries/helpers/BaseSplitCodeFactory.sol": {
        "ast": {
          "absolutePath": "contracts/libraries/helpers/BaseSplitCodeFactory.sol",
          "exportedSymbols": {
            "BaseSplitCodeFactory": [
              221
            ],
            "CodeDeployer": [
              252
            ]
          },
          "id": 222,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:24:0"
            },
            {
              "id": 2,
              "literals": [
                "experimental",
                "ABIEncoderV2"
              ],
              "nodeType": "PragmaDirective",
              "src": "713:33:0"
            },
            {
              "absolutePath": "contracts/libraries/helpers/CodeDeployer.sol",
              "file": "./CodeDeployer.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 222,
              "sourceUnit": 253,
              "src": "748:28:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "BaseSplitCodeFactory",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 4,
                "nodeType": "StructuredDocumentation",
                "src": "778:294:0",
                "text": " @dev Base factory for contracts whose creation code is so large that the factory cannot hold it. This happens when\n the contract's creation code grows close to 24kB.\n Note that this factory cannot help with contracts that have a *runtime* (deployed) bytecode larger than 24kB."
              },
              "fullyImplemented": true,
              "id": 221,
              "linearizedBaseContracts": [
                221
              ],
              "name": "BaseSplitCodeFactory",
              "nameLocation": "1091:20:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 6,
                  "mutability": "immutable",
                  "name": "_creationCodeContractA",
                  "nameLocation": "1556:22:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "1530:48:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1530:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "immutable",
                  "name": "_creationCodeSizeA",
                  "nameLocation": "1610:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "1584:44:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1584:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 10,
                  "mutability": "immutable",
                  "name": "_creationCodeContractB",
                  "nameLocation": "1661:22:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "1635:48:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1635:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 12,
                  "mutability": "immutable",
                  "name": "_creationCodeSizeB",
                  "nameLocation": "1715:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "1689:44:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1689:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 69,
                    "nodeType": "Block",
                    "src": "1906:2624:0",
                    "statements": [
                      {
                        "assignments": [
                          19
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 19,
                            "mutability": "mutable",
                            "name": "creationCodeSize",
                            "nameLocation": "1924:16:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 69,
                            "src": "1916:24:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 18,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1916:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 22,
                        "initialValue": {
                          "expression": {
                            "id": 20,
                            "name": "creationCode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "1943:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 21,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1943:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1916:46:0"
                      },
                      {
                        "assignments": [
                          24
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 24,
                            "mutability": "mutable",
                            "name": "creationCodeSizeA",
                            "nameLocation": "2298:17:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 69,
                            "src": "2290:25:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 23,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2290:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 28,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 27,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 25,
                            "name": "creationCodeSize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19,
                            "src": "2318:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 26,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2337:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "2318:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2290:48:0"
                      },
                      {
                        "expression": {
                          "id": 31,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 29,
                            "name": "_creationCodeSizeA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "2348:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 30,
                            "name": "creationCodeSizeA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "2369:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2348:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 32,
                        "nodeType": "ExpressionStatement",
                        "src": "2348:38:0"
                      },
                      {
                        "assignments": [
                          34
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 34,
                            "mutability": "mutable",
                            "name": "creationCodeSizeB",
                            "nameLocation": "2405:17:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 69,
                            "src": "2397:25:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2397:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 38,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 37,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 35,
                            "name": "creationCodeSize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19,
                            "src": "2425:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 36,
                            "name": "creationCodeSizeA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "2444:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2425:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2397:64:0"
                      },
                      {
                        "expression": {
                          "id": 41,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 39,
                            "name": "_creationCodeSizeB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "2471:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 40,
                            "name": "creationCodeSizeB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "2492:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2471:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 42,
                        "nodeType": "ExpressionStatement",
                        "src": "2471:38:0"
                      },
                      {
                        "assignments": [
                          44
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 44,
                            "mutability": "mutable",
                            "name": "creationCodeA",
                            "nameLocation": "3085:13:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 69,
                            "src": "3072:26:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 43,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3072:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 45,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3072:26:0"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "3117:106:0",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3131:29:0",
                              "value": {
                                "name": "creationCode",
                                "nodeType": "YulIdentifier",
                                "src": "3148:12:0"
                              },
                              "variableNames": [
                                {
                                  "name": "creationCodeA",
                                  "nodeType": "YulIdentifier",
                                  "src": "3131:13:0"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "creationCodeA",
                                    "nodeType": "YulIdentifier",
                                    "src": "3180:13:0"
                                  },
                                  {
                                    "name": "creationCodeSizeA",
                                    "nodeType": "YulIdentifier",
                                    "src": "3195:17:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3173:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3173:40:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3173:40:0"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 15,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3148:12:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 44,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3131:13:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 44,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3180:13:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 24,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3195:17:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 46,
                        "nodeType": "InlineAssembly",
                        "src": "3108:115:0"
                      },
                      {
                        "expression": {
                          "id": 52,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 47,
                            "name": "_creationCodeContractA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6,
                            "src": "3323:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 50,
                                "name": "creationCodeA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44,
                                "src": "3368:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 48,
                                "name": "CodeDeployer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 252,
                                "src": "3348:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_CodeDeployer_$252_$",
                                  "typeString": "type(library CodeDeployer)"
                                }
                              },
                              "id": 49,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "deploy",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 251,
                              "src": "3348:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$_t_address_$",
                                "typeString": "function (bytes memory) returns (address)"
                              }
                            },
                            "id": 51,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3348:34:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3323:59:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 53,
                        "nodeType": "ExpressionStatement",
                        "src": "3323:59:0"
                      },
                      {
                        "assignments": [
                          55
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 55,
                            "mutability": "mutable",
                            "name": "creationCodeB",
                            "nameLocation": "3683:13:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 69,
                            "src": "3670:26:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 54,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3670:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 56,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3670:26:0"
                      },
                      {
                        "assignments": [
                          58
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 58,
                            "mutability": "mutable",
                            "name": "lastByteA",
                            "nameLocation": "3714:9:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 69,
                            "src": "3706:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 57,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "3706:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 59,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3706:17:0"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "3743:323:0",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3904:53:0",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "creationCode",
                                    "nodeType": "YulIdentifier",
                                    "src": "3925:12:0"
                                  },
                                  {
                                    "name": "creationCodeSizeA",
                                    "nodeType": "YulIdentifier",
                                    "src": "3939:17:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3921:3:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3921:36:0"
                              },
                              "variableNames": [
                                {
                                  "name": "creationCodeB",
                                  "nodeType": "YulIdentifier",
                                  "src": "3904:13:0"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3970:33:0",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "creationCodeB",
                                    "nodeType": "YulIdentifier",
                                    "src": "3989:13:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3983:5:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3983:20:0"
                              },
                              "variableNames": [
                                {
                                  "name": "lastByteA",
                                  "nodeType": "YulIdentifier",
                                  "src": "3970:9:0"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "creationCodeB",
                                    "nodeType": "YulIdentifier",
                                    "src": "4023:13:0"
                                  },
                                  {
                                    "name": "creationCodeSizeB",
                                    "nodeType": "YulIdentifier",
                                    "src": "4038:17:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4016:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4016:40:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4016:40:0"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 15,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3925:12:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 55,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3904:13:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 55,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3989:13:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 55,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "4023:13:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 24,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3939:17:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 34,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "4038:17:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 58,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3970:9:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 60,
                        "nodeType": "InlineAssembly",
                        "src": "3734:332:0"
                      },
                      {
                        "expression": {
                          "id": 66,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 61,
                            "name": "_creationCodeContractB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "4216:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 64,
                                "name": "creationCodeB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55,
                                "src": "4261:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 62,
                                "name": "CodeDeployer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 252,
                                "src": "4241:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_CodeDeployer_$252_$",
                                  "typeString": "type(library CodeDeployer)"
                                }
                              },
                              "id": 63,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "deploy",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 251,
                              "src": "4241:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$_t_address_$",
                                "typeString": "function (bytes memory) returns (address)"
                              }
                            },
                            "id": 65,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4241:34:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4216:59:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 67,
                        "nodeType": "ExpressionStatement",
                        "src": "4216:59:0"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "4416:108:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "creationCodeA",
                                    "nodeType": "YulIdentifier",
                                    "src": "4437:13:0"
                                  },
                                  {
                                    "name": "creationCodeSize",
                                    "nodeType": "YulIdentifier",
                                    "src": "4452:16:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4430:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4430:39:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4430:39:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "creationCodeB",
                                    "nodeType": "YulIdentifier",
                                    "src": "4489:13:0"
                                  },
                                  {
                                    "name": "lastByteA",
                                    "nodeType": "YulIdentifier",
                                    "src": "4504:9:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4482:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4482:32:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4482:32:0"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 44,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "4437:13:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 55,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "4489:13:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 19,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "4452:16:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 58,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "4504:9:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 68,
                        "nodeType": "InlineAssembly",
                        "src": "4407:117:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 13,
                    "nodeType": "StructuredDocumentation",
                    "src": "1740:122:0",
                    "text": " @dev The creation code of a contract Foo can be obtained inside Solidity with `type(Foo).creationCode`."
                  },
                  "id": 70,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 16,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 15,
                        "mutability": "mutable",
                        "name": "creationCode",
                        "nameLocation": "1892:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 70,
                        "src": "1879:25:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 14,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1879:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1878:27:0"
                  },
                  "returnParameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1906:0:0"
                  },
                  "scope": 221,
                  "src": "1867:2663:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 82,
                    "nodeType": "Block",
                    "src": "4759:72:0",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 78,
                              "name": "_creationCodeContractA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6,
                              "src": "4777:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 79,
                              "name": "_creationCodeContractB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "4801:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "id": 80,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4776:48:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                            "typeString": "tuple(address,address)"
                          }
                        },
                        "functionReturnParameters": 77,
                        "id": 81,
                        "nodeType": "Return",
                        "src": "4769:55:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 71,
                    "nodeType": "StructuredDocumentation",
                    "src": "4536:123:0",
                    "text": " @dev Returns the two addresses where the creation code of the contract crated by this factory is stored."
                  },
                  "functionSelector": "174481fa",
                  "id": 83,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getCreationCodeContracts",
                  "nameLocation": "4673:24:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 72,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4697:2:0"
                  },
                  "returnParameters": {
                    "id": 77,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 74,
                        "mutability": "mutable",
                        "name": "contractA",
                        "nameLocation": "4729:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 83,
                        "src": "4721:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 73,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4721:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 76,
                        "mutability": "mutable",
                        "name": "contractB",
                        "nameLocation": "4748:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 83,
                        "src": "4740:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 75,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4740:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4720:38:0"
                  },
                  "scope": 221,
                  "src": "4664:167:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 93,
                    "nodeType": "Block",
                    "src": "4991:52:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 90,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5033:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "id": 89,
                            "name": "_getCreationCodeWithArgs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 150,
                            "src": "5008:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) view returns (bytes memory)"
                            }
                          },
                          "id": 91,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5008:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 88,
                        "id": 92,
                        "nodeType": "Return",
                        "src": "5001:35:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 84,
                    "nodeType": "StructuredDocumentation",
                    "src": "4837:87:0",
                    "text": " @dev Returns the creation code of the contract this factory creates."
                  },
                  "functionSelector": "00c194db",
                  "id": 94,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getCreationCode",
                  "nameLocation": "4938:15:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 85,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4953:2:0"
                  },
                  "returnParameters": {
                    "id": 88,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 87,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 94,
                        "src": "4977:12:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 86,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4977:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4976:14:0"
                  },
                  "scope": 221,
                  "src": "4929:114:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 149,
                    "nodeType": "Block",
                    "src": "5278:2587:0",
                    "statements": [
                      {
                        "assignments": [
                          103
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 103,
                            "mutability": "mutable",
                            "name": "creationCodeContractA",
                            "nameLocation": "6097:21:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 149,
                            "src": "6089:29:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 102,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6089:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 105,
                        "initialValue": {
                          "id": 104,
                          "name": "_creationCodeContractA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "6121:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6089:54:0"
                      },
                      {
                        "assignments": [
                          107
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 107,
                            "mutability": "mutable",
                            "name": "creationCodeSizeA",
                            "nameLocation": "6161:17:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 149,
                            "src": "6153:25:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 106,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6153:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 109,
                        "initialValue": {
                          "id": 108,
                          "name": "_creationCodeSizeA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "6181:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6153:46:0"
                      },
                      {
                        "assignments": [
                          111
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 111,
                            "mutability": "mutable",
                            "name": "creationCodeContractB",
                            "nameLocation": "6217:21:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 149,
                            "src": "6209:29:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 110,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6209:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 113,
                        "initialValue": {
                          "id": 112,
                          "name": "_creationCodeContractB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "6241:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6209:54:0"
                      },
                      {
                        "assignments": [
                          115
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 115,
                            "mutability": "mutable",
                            "name": "creationCodeSizeB",
                            "nameLocation": "6281:17:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 149,
                            "src": "6273:25:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 114,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6273:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 117,
                        "initialValue": {
                          "id": 116,
                          "name": "_creationCodeSizeB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "6301:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6273:46:0"
                      },
                      {
                        "assignments": [
                          119
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 119,
                            "mutability": "mutable",
                            "name": "creationCodeSize",
                            "nameLocation": "6338:16:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 149,
                            "src": "6330:24:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 118,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6330:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 123,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 120,
                            "name": "creationCodeSizeA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 107,
                            "src": "6357:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 121,
                            "name": "creationCodeSizeB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "6377:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6357:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6330:64:0"
                      },
                      {
                        "assignments": [
                          125
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 125,
                            "mutability": "mutable",
                            "name": "constructorArgsSize",
                            "nameLocation": "6412:19:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 149,
                            "src": "6404:27:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 124,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6404:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 128,
                        "initialValue": {
                          "expression": {
                            "id": 126,
                            "name": "constructorArgs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97,
                            "src": "6434:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6434:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6404:52:0"
                      },
                      {
                        "assignments": [
                          130
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 130,
                            "mutability": "mutable",
                            "name": "codeSize",
                            "nameLocation": "6475:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 149,
                            "src": "6467:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 129,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6467:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 134,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 131,
                            "name": "creationCodeSize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 119,
                            "src": "6486:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 132,
                            "name": "constructorArgsSize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 125,
                            "src": "6505:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6486:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6467:57:0"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "6544:750:0",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6794:19:0",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6808:4:0",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "6802:5:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6802:11:0"
                              },
                              "variableNames": [
                                {
                                  "name": "code",
                                  "nodeType": "YulIdentifier",
                                  "src": "6794:4:0"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6833:4:0",
                                    "type": "",
                                    "value": "0x40"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "code",
                                        "nodeType": "YulIdentifier",
                                        "src": "6843:4:0"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "codeSize",
                                            "nodeType": "YulIdentifier",
                                            "src": "6853:8:0"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6863:2:0",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6849:3:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6849:17:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6839:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6839:28:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6826:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6826:42:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6826:42:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "code",
                                    "nodeType": "YulIdentifier",
                                    "src": "6968:4:0"
                                  },
                                  {
                                    "name": "codeSize",
                                    "nodeType": "YulIdentifier",
                                    "src": "6974:8:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6961:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6961:22:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6961:22:0"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7070:30:0",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "code",
                                    "nodeType": "YulIdentifier",
                                    "src": "7091:4:0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7097:2:0",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7087:3:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7087:13:0"
                              },
                              "variables": [
                                {
                                  "name": "dataStart",
                                  "nodeType": "YulTypedName",
                                  "src": "7074:9:0",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "creationCodeContractA",
                                    "nodeType": "YulIdentifier",
                                    "src": "7125:21:0"
                                  },
                                  {
                                    "name": "dataStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7148:9:0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7159:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "creationCodeSizeA",
                                    "nodeType": "YulIdentifier",
                                    "src": "7162:17:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "extcodecopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "7113:11:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7113:67:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7113:67:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "creationCodeContractB",
                                    "nodeType": "YulIdentifier",
                                    "src": "7205:21:0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7232:9:0"
                                      },
                                      {
                                        "name": "creationCodeSizeA",
                                        "nodeType": "YulIdentifier",
                                        "src": "7243:17:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7228:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7228:33:0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7263:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "creationCodeSizeB",
                                    "nodeType": "YulIdentifier",
                                    "src": "7266:17:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "extcodecopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "7193:11:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7193:91:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7193:91:0"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 100,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6794:4:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 100,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6843:4:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 100,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6968:4:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 100,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7091:4:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 130,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6853:8:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 130,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6974:8:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 103,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7125:21:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 111,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7205:21:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 107,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7162:17:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 107,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7243:17:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 115,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7266:17:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 135,
                        "nodeType": "InlineAssembly",
                        "src": "6535:759:0"
                      },
                      {
                        "assignments": [
                          137
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 137,
                            "mutability": "mutable",
                            "name": "constructorArgsDataPtr",
                            "nameLocation": "7530:22:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 149,
                            "src": "7522:30:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 136,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7522:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 138,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7522:30:0"
                      },
                      {
                        "assignments": [
                          140
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 140,
                            "mutability": "mutable",
                            "name": "constructorArgsCodeDataPtr",
                            "nameLocation": "7570:26:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 149,
                            "src": "7562:34:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 139,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7562:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 141,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7562:34:0"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "7615:153:0",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7629:50:0",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "constructorArgs",
                                    "nodeType": "YulIdentifier",
                                    "src": "7659:15:0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7676:2:0",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7655:3:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7655:24:0"
                              },
                              "variableNames": [
                                {
                                  "name": "constructorArgsDataPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "7629:22:0"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7692:66:0",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "code",
                                        "nodeType": "YulIdentifier",
                                        "src": "7730:4:0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7736:2:0",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7726:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7726:13:0"
                                  },
                                  {
                                    "name": "creationCodeSize",
                                    "nodeType": "YulIdentifier",
                                    "src": "7741:16:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7722:3:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7722:36:0"
                              },
                              "variableNames": [
                                {
                                  "name": "constructorArgsCodeDataPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "7692:26:0"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 100,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7730:4:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 97,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7659:15:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 140,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7692:26:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 137,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7629:22:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 119,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7741:16:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 142,
                        "nodeType": "InlineAssembly",
                        "src": "7606:162:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 144,
                              "name": "constructorArgsCodeDataPtr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 140,
                              "src": "7786:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 145,
                              "name": "constructorArgsDataPtr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 137,
                              "src": "7814:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 146,
                              "name": "constructorArgsSize",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 125,
                              "src": "7838:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 143,
                            "name": "_memcpy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 220,
                            "src": "7778:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256) pure"
                            }
                          },
                          "id": 147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7778:80:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 148,
                        "nodeType": "ExpressionStatement",
                        "src": "7778:80:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 95,
                    "nodeType": "StructuredDocumentation",
                    "src": "5049:119:0",
                    "text": " @dev Returns the creation code that will result in a contract being deployed with `constructorArgs`."
                  },
                  "id": 150,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getCreationCodeWithArgs",
                  "nameLocation": "5182:24:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 98,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 97,
                        "mutability": "mutable",
                        "name": "constructorArgs",
                        "nameLocation": "5220:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 150,
                        "src": "5207:28:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 96,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5207:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5206:30:0"
                  },
                  "returnParameters": {
                    "id": 101,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 100,
                        "mutability": "mutable",
                        "name": "code",
                        "nameLocation": "5272:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 150,
                        "src": "5259:17:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 99,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5259:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5258:19:0"
                  },
                  "scope": 221,
                  "src": "5173:2692:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 179,
                    "nodeType": "Block",
                    "src": "8137:548:0",
                    "statements": [
                      {
                        "assignments": [
                          159
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 159,
                            "mutability": "mutable",
                            "name": "creationCode",
                            "nameLocation": "8160:12:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 179,
                            "src": "8147:25:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 158,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "8147:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 163,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 161,
                              "name": "constructorArgs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 153,
                              "src": "8200:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 160,
                            "name": "_getCreationCodeWithArgs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 150,
                            "src": "8175:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) view returns (bytes memory)"
                            }
                          },
                          "id": 162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8175:41:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8147:69:0"
                      },
                      {
                        "assignments": [
                          165
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 165,
                            "mutability": "mutable",
                            "name": "destination",
                            "nameLocation": "8235:11:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 179,
                            "src": "8227:19:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 164,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8227:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 166,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8227:19:0"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "8265:92:0",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8279:68:0",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8301:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "creationCode",
                                        "nodeType": "YulIdentifier",
                                        "src": "8308:12:0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8322:2:0",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8304:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8304:21:0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "creationCode",
                                        "nodeType": "YulIdentifier",
                                        "src": "8333:12:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "8327:5:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8327:19:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "create",
                                  "nodeType": "YulIdentifier",
                                  "src": "8294:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8294:53:0"
                              },
                              "variableNames": [
                                {
                                  "name": "destination",
                                  "nodeType": "YulIdentifier",
                                  "src": "8279:11:0"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 159,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8308:12:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 159,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8333:12:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 165,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8279:11:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 167,
                        "nodeType": "InlineAssembly",
                        "src": "8256:101:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 168,
                            "name": "destination",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 165,
                            "src": "8371:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 171,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8394:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8386:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 169,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8386:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8386:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8371:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 176,
                        "nodeType": "IfStatement",
                        "src": "8367:283:0",
                        "trueBody": {
                          "id": 175,
                          "nodeType": "Block",
                          "src": "8398:252:0",
                          "statements": [
                            {
                              "AST": {
                                "nodeType": "YulBlock",
                                "src": "8526:114:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8559:1:0",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8562:1:0",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "returndatasize",
                                            "nodeType": "YulIdentifier",
                                            "src": "8565:14:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "8565:16:0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "returndatacopy",
                                        "nodeType": "YulIdentifier",
                                        "src": "8544:14:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8544:38:0"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8544:38:0"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8606:1:0",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "returndatasize",
                                            "nodeType": "YulIdentifier",
                                            "src": "8609:14:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "8609:16:0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "8599:6:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8599:27:0"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8599:27:0"
                                  }
                                ]
                              },
                              "evmVersion": "london",
                              "externalReferences": [],
                              "id": 174,
                              "nodeType": "InlineAssembly",
                              "src": "8517:123:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 177,
                          "name": "destination",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 165,
                          "src": "8667:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 157,
                        "id": 178,
                        "nodeType": "Return",
                        "src": "8660:18:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 151,
                    "nodeType": "StructuredDocumentation",
                    "src": "7871:179:0",
                    "text": " @dev Deploys a contract with constructor arguments. To create `constructorArgs`, call `abi.encode()` with the\n contract's constructor arguments, in order."
                  },
                  "id": 180,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_create",
                  "nameLocation": "8064:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 154,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 153,
                        "mutability": "mutable",
                        "name": "constructorArgs",
                        "nameLocation": "8085:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 180,
                        "src": "8072:28:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 152,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8072:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8071:30:0"
                  },
                  "returnParameters": {
                    "id": 157,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 156,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 180,
                        "src": "8128:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 155,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8128:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8127:9:0"
                  },
                  "scope": 221,
                  "src": "8055:630:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 219,
                    "nodeType": "Block",
                    "src": "8921:490:0",
                    "statements": [
                      {
                        "body": {
                          "id": 205,
                          "nodeType": "Block",
                          "src": "9010:136:0",
                          "statements": [
                            {
                              "AST": {
                                "nodeType": "YulBlock",
                                "src": "9033:56:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "dest",
                                          "nodeType": "YulIdentifier",
                                          "src": "9058:4:0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "src",
                                              "nodeType": "YulIdentifier",
                                              "src": "9070:3:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "9064:5:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "9064:10:0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "9051:6:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9051:24:0"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9051:24:0"
                                  }
                                ]
                              },
                              "evmVersion": "london",
                              "externalReferences": [
                                {
                                  "declaration": 182,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "9058:4:0",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 184,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "9070:3:0",
                                  "valueSize": 1
                                }
                              ],
                              "id": 196,
                              "nodeType": "InlineAssembly",
                              "src": "9024:65:0"
                            },
                            {
                              "expression": {
                                "id": 199,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 197,
                                  "name": "dest",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 182,
                                  "src": "9102:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "3332",
                                  "id": 198,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9110:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_32_by_1",
                                    "typeString": "int_const 32"
                                  },
                                  "value": "32"
                                },
                                "src": "9102:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 200,
                              "nodeType": "ExpressionStatement",
                              "src": "9102:10:0"
                            },
                            {
                              "expression": {
                                "id": 203,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 201,
                                  "name": "src",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 184,
                                  "src": "9126:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "3332",
                                  "id": 202,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9133:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_32_by_1",
                                    "typeString": "int_const 32"
                                  },
                                  "value": "32"
                                },
                                "src": "9126:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 204,
                              "nodeType": "ExpressionStatement",
                              "src": "9126:9:0"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 189,
                            "name": "len",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 186,
                            "src": "8988:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "hexValue": "3332",
                            "id": 190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8995:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "src": "8988:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 206,
                        "loopExpression": {
                          "expression": {
                            "id": 194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 192,
                              "name": "len",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 186,
                              "src": "8999:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "-=",
                            "rightHandSide": {
                              "hexValue": "3332",
                              "id": 193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9006:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_32_by_1",
                                "typeString": "int_const 32"
                              },
                              "value": "32"
                            },
                            "src": "8999:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 195,
                          "nodeType": "ExpressionStatement",
                          "src": "8999:9:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "8981:165:0"
                      },
                      {
                        "assignments": [
                          208
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 208,
                            "mutability": "mutable",
                            "name": "mask",
                            "nameLocation": "9196:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 219,
                            "src": "9188:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 207,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9188:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 217,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "323536",
                              "id": 209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9203:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_256_by_1",
                                "typeString": "int_const 256"
                              },
                              "value": "256"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 212,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3332",
                                    "id": 210,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9209:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_32_by_1",
                                      "typeString": "int_const 32"
                                    },
                                    "value": "32"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 211,
                                    "name": "len",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 186,
                                    "src": "9214:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9209:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 213,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "9208:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9203:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9221:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "9203:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9188:34:0"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "9241:164:0",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9255:41:0",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "9280:3:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "9274:5:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9274:10:0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "mask",
                                        "nodeType": "YulIdentifier",
                                        "src": "9290:4:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "9286:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9286:9:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "9270:3:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9270:26:0"
                              },
                              "variables": [
                                {
                                  "name": "srcpart",
                                  "nodeType": "YulTypedName",
                                  "src": "9259:7:0",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9309:38:0",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dest",
                                        "nodeType": "YulIdentifier",
                                        "src": "9335:4:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "9329:5:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9329:11:0"
                                  },
                                  {
                                    "name": "mask",
                                    "nodeType": "YulIdentifier",
                                    "src": "9342:4:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "9325:3:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9325:22:0"
                              },
                              "variables": [
                                {
                                  "name": "destpart",
                                  "nodeType": "YulTypedName",
                                  "src": "9313:8:0",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "dest",
                                    "nodeType": "YulIdentifier",
                                    "src": "9367:4:0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "destpart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9376:8:0"
                                      },
                                      {
                                        "name": "srcpart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9386:7:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "or",
                                      "nodeType": "YulIdentifier",
                                      "src": "9373:2:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9373:21:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9360:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9360:35:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9360:35:0"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 182,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9335:4:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 182,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9367:4:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 208,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9290:4:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 208,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9342:4:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 184,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9280:3:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 218,
                        "nodeType": "InlineAssembly",
                        "src": "9232:173:0"
                      }
                    ]
                  },
                  "id": 220,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_memcpy",
                  "nameLocation": "8830:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 187,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 182,
                        "mutability": "mutable",
                        "name": "dest",
                        "nameLocation": "8855:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 220,
                        "src": "8847:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 181,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8847:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 184,
                        "mutability": "mutable",
                        "name": "src",
                        "nameLocation": "8877:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 220,
                        "src": "8869:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 183,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8869:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 186,
                        "mutability": "mutable",
                        "name": "len",
                        "nameLocation": "8898:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 220,
                        "src": "8890:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 185,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8890:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8837:70:0"
                  },
                  "returnParameters": {
                    "id": 188,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8921:0:0"
                  },
                  "scope": 221,
                  "src": "8821:590:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 222,
              "src": "1073:8340:0",
              "usedErrors": []
            }
          ],
          "src": "688:8726:0"
        },
        "id": 0
      },
      "contracts/libraries/helpers/CodeDeployer.sol": {
        "ast": {
          "absolutePath": "contracts/libraries/helpers/CodeDeployer.sol",
          "exportedSymbols": {
            "CodeDeployer": [
              252
            ]
          },
          "id": 253,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 223,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:24:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "CodeDeployer",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 224,
                "nodeType": "StructuredDocumentation",
                "src": "714:199:1",
                "text": " @dev Library used to deploy contracts with specific code. This can be used for long-term storage of immutable data as\n contract code, which can be retrieved via the `extcodecopy` opcode."
              },
              "fullyImplemented": true,
              "id": 252,
              "linearizedBaseContracts": [
                252
              ],
              "name": "CodeDeployer",
              "nameLocation": "922:12:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 227,
                  "mutability": "constant",
                  "name": "_DEPLOYER_CREATION_CODE",
                  "nameLocation": "2297:23:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 252,
                  "src": "2272:117:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 225,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2272:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "307836303230333830333830363032303630303033393630303066336665666566656665666566656665666566656665666566656665666566656665666566656665",
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2323:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_43478959162261259322985507790388014220090819270403161015765007512459448090366_by_1",
                      "typeString": "int_const 4347...(69 digits omitted)...0366"
                    },
                    "value": "0x602038038060206000396000f3fefefefefefefefefefefefefefefefefefefe"
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 250,
                    "nodeType": "Block",
                    "src": "2620:1037:1",
                    "statements": [
                      {
                        "assignments": [
                          236
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 236,
                            "mutability": "mutable",
                            "name": "deployerCreationCode",
                            "nameLocation": "2638:20:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 250,
                            "src": "2630:28:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 235,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "2630:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 238,
                        "initialValue": {
                          "id": 237,
                          "name": "_DEPLOYER_CREATION_CODE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 227,
                          "src": "2661:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2630:54:1"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2760:706:1",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2774:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "code",
                                    "nodeType": "YulIdentifier",
                                    "src": "2798:4:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2792:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2792:11:1"
                              },
                              "variables": [
                                {
                                  "name": "codeLength",
                                  "nodeType": "YulTypedName",
                                  "src": "2778:10:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "code",
                                    "nodeType": "YulIdentifier",
                                    "src": "3032:4:1"
                                  },
                                  {
                                    "name": "deployerCreationCode",
                                    "nodeType": "YulIdentifier",
                                    "src": "3038:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3025:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3025:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3025:34:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3281:51:1",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3303:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "code",
                                    "nodeType": "YulIdentifier",
                                    "src": "3306:4:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "codeLength",
                                        "nodeType": "YulIdentifier",
                                        "src": "3316:10:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3328:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3312:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3312:19:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "create",
                                  "nodeType": "YulIdentifier",
                                  "src": "3296:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3296:36:1"
                              },
                              "variableNames": [
                                {
                                  "name": "destination",
                                  "nodeType": "YulIdentifier",
                                  "src": "3281:11:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "code",
                                    "nodeType": "YulIdentifier",
                                    "src": "3439:4:1"
                                  },
                                  {
                                    "name": "codeLength",
                                    "nodeType": "YulIdentifier",
                                    "src": "3445:10:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3432:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3432:24:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3432:24:1"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 230,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2798:4:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 230,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3032:4:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 230,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3306:4:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 230,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3439:4:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 236,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3038:20:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 233,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3281:11:1",
                            "valueSize": 1
                          }
                        ],
                        "id": 239,
                        "nodeType": "InlineAssembly",
                        "src": "2751:715:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 246,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 241,
                                "name": "destination",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 233,
                                "src": "3598:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 244,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3621:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 243,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3613:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 242,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3613:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 245,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3613:10:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3598:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "434f44455f4445504c4f594d454e545f4641494c4544",
                              "id": 247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3625:24:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3821564f9e3fc07a9104967138bd62401ca91a056b66c47c66dbc9b4fa2a367d",
                                "typeString": "literal_string \"CODE_DEPLOYMENT_FAILED\""
                              },
                              "value": "CODE_DEPLOYMENT_FAILED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3821564f9e3fc07a9104967138bd62401ca91a056b66c47c66dbc9b4fa2a367d",
                                "typeString": "literal_string \"CODE_DEPLOYMENT_FAILED\""
                              }
                            ],
                            "id": 240,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3590:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3590:60:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 249,
                        "nodeType": "ExpressionStatement",
                        "src": "3590:60:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 228,
                    "nodeType": "StructuredDocumentation",
                    "src": "2396:145:1",
                    "text": " @dev Deploys a contract with `code` as its code, returning the destination address.\n Reverts if deployment fails."
                  },
                  "id": 251,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deploy",
                  "nameLocation": "2555:6:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 231,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 230,
                        "mutability": "mutable",
                        "name": "code",
                        "nameLocation": "2575:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 251,
                        "src": "2562:17:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 229,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2562:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2561:19:1"
                  },
                  "returnParameters": {
                    "id": 234,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 233,
                        "mutability": "mutable",
                        "name": "destination",
                        "nameLocation": "2607:11:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 251,
                        "src": "2599:19:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 232,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2599:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2598:21:1"
                  },
                  "scope": 252,
                  "src": "2546:1111:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 253,
              "src": "914:2745:1",
              "usedErrors": []
            }
          ],
          "src": "688:2972:1"
        },
        "id": 1
      }
    }
  }
}
