/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RequiemWeightedMath,
  RequiemWeightedMathInterface,
} from "../RequiemWeightedMath";

const _abi = [
  {
    inputs: [],
    name: "_MAX_INVARIANT_RATIO",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_MAX_IN_RATIO",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_MAX_OUT_RATIO",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_MAX_WEIGHTED_TOKENS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_MIN_INVARIANT_RATIO",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_MIN_WEIGHT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "bptAmountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalBPT",
        type: "uint256",
      },
    ],
    name: "_calcAllTokensInGivenExactBptOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "normalizedWeights",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amountsOut",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "bptTotalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
    ],
    name: "_calcBptInGivenExactTokensOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "normalizedWeights",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "bptTotalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
    ],
    name: "_calcBptOutGivenExactTokensIn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "normalizedWeight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "previousInvariant",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentInvariant",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
    ],
    name: "_calcDueTokenProtocolSwapFeeAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balanceIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "weightIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balanceOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "weightOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "_calcInGivenOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balanceIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "weightIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balanceOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "weightOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "_calcOutGivenIn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "normalizedWeight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bptAmountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bptTotalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
    ],
    name: "_calcTokenInGivenExactBptOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "swapFee",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "normalizedWeight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bptAmountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bptTotalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
    ],
    name: "_calcTokenOutGivenExactBptIn",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "swapFee",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "bptAmountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalBPT",
        type: "uint256",
      },
    ],
    name: "_calcTokensOutGivenExactBptIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "normalizedWeights",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    name: "_calculateInvariant",
    outputs: [
      {
        internalType: "uint256",
        name: "invariant",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612bb9806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063a62cdb8411610097578063e9be73ef11610066578063e9be73ef14610210578063ea9c12f914610223578063f8ce54ae14610232578063ff43734e1461024557600080fd5b8063a62cdb84146101b3578063a8c79d69146101c2578063cac2832b146101ea578063e89dd41f146101fd57600080fd5b806341830784116100d3578063418307841461016c578063572c58a31461017a5780635ce3dd581461018d578063906c4175146101a057600080fd5b80631152af7a14610105578063256fae4c1461012f578063289530581461012f5780632d09954d1461014c575b600080fd5b6101186101133660046125f8565b61024d565b6040516101269291906126cd565b60405180910390f35b61013e670429d069189e000081565b604051908152602001610126565b61015f61015a3660046126e6565b6103c5565b6040516101269190612734565b61013e662386f26fc1000081565b61013e610188366004612747565b61048e565b61013e61019b3660046127ab565b61051c565b61015f6101ae3660046126e6565b610599565b61013e6729a2241af62c000081565b6101d56101d03660046127ab565b610642565b60408051928352602083019190915201610126565b6101d56101f83660046127ab565b61071f565b61011861020b3660046125f8565b6107d5565b61013e61021e3660046127ab565b610944565b61013e6709b6e64a8ec6000081565b61013e6102403660046127ab565b6109ba565b61013e606481565b600060606000855167ffffffffffffffff81111561026d5761026d61251b565b604051908082528060200260200182016040528015610296578160200160208202803683370190505b5090506000805b8951811015610388576103078a82815181106102bb576102bb6127e6565b60200260200101518983815181106102d5576102d56127e6565b60200260200101518c84815181106102ef576102ef6127e6565b60200260200101516103019190612844565b90610a2b565b838281518110610319576103196127e6565b60200260200101818152505061036a89828151811061033a5761033a6127e6565b6020026020010151848381518110610354576103546127e6565b6020026020010151610b6590919063ffffffff16565b610374908361285b565b91508061038081612873565b91505061029d565b5060008061039a8b8b8b87878c610c15565b9150915060006103b36103ac84610dfb565b8a90610b65565b9c919b50909950505050505050505050565b606060006103d38484610e25565b90506000855167ffffffffffffffff8111156103f1576103f161251b565b60405190808252806020026020018201604052801561041a578160200160208202803683370190505b50905060005b8651811015610484576104558388838151811061043f5761043f6127e6565b6020026020010151610f3b90919063ffffffff16565b828281518110610467576104676127e6565b60209081029190910101528061047c81612873565b915050610420565b5095945050505050565b670de0b6b3a764000060005b8351811015610506576104f26104eb8583815181106104bb576104bb6127e6565b60200260200101518584815181106104d5576104d56127e6565b6020026020010151610fdf90919063ffffffff16565b8390610f3b565b9150806104fe81612873565b91505061049a565b506105166000821161013761102e565b92915050565b600061053e61053387670429d069189e0000610f3b565b83111561013061102e565b600061054a838861285b565b905060006105588883610a2b565b905060006105668887610e25565b905060006105748383611040565b905061058961058282610dfb565b8990610f3b565b9450505050505b95945050505050565b606060006105a78484610a2b565b90506000855167ffffffffffffffff8111156105c5576105c561251b565b6040519080825280602002602001820160405280156105ee578160200160208202803683370190505b50905060005b86518110156104845761061383888381518110610354576103546127e6565b828281518110610625576106256127e6565b60209081029190910101528061063a81612873565b9150506105f4565b6000808061065485610301888261285b565b905061066d6729a2241af62c000082111561013361102e565b600061068b610684670de0b6b3a76400008a610a2b565b8390611040565b905060006106ab6106a4670de0b6b3a764000084612844565b8b90610b65565b905060006106b88a610dfb565b905060006106c68383610b65565b905060006106d48285612844565b905060006106f46106ed8b670de0b6b3a7640000612844565b8490610a2b565b90506107008382612844565b975061070c818361285b565b9850505050505050509550959350505050565b60008080610731856103018882612844565b905061074a6709b6e64a8ec6000082101561013261102e565b6000610761610684670de0b6b3a76400008a610e25565b9050600061077861077183610dfb565b8b90610f3b565b905060006107858a610dfb565b905060006107938383610b65565b905060006107a18285612844565b90506107ad828a610b65565b96506107b98783612844565b6107c3908261285b565b97505050505050509550959350505050565b600060606000855167ffffffffffffffff8111156107f5576107f561251b565b60405190808252806020026020018201604052801561081e578160200160208202803683370190505b5090506000805b89518110156108fa5761088f8a8281518110610843576108436127e6565b602002602001015189838151811061085d5761085d6127e6565b60200260200101518c8481518110610877576108776127e6565b6020026020010151610889919061285b565b90610e25565b8382815181106108a1576108a16127e6565b6020026020010181815250506108dc8982815181106108c2576108c26127e6565b602002602001015184838151811061043f5761043f6127e6565b6108e6908361285b565b9150806108f281612873565b915050610825565b5060008061090c8b8b8b87878c61106c565b915091506000670de0b6b3a764000083116109285760006103b3565b6103b361093d670de0b6b3a764000085612844565b8a90610f3b565b600061096661095b85670429d069189e0000610f3b565b83111561013161102e565b600061097c6109758487612844565b8690610a2b565b9050600061098a8588610a2b565b905060006109988383611040565b905060006109ae670de0b6b3a764000083612844565b90506105898a82610b65565b60008383116109cb57506000610590565b60006109d78585610a2b565b905060006109ed670de0b6b3a764000088610e25565b9050610a01826709b6e64a8ec600006111fd565b91506000610a0f8383611040565b90506000610a1f61077183610dfb565b90506105898187610f3b565b600081600003610a9c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f5a45524f5f4449564953494f4e0000000000000000000000000000000000000060448201526064015b60405180910390fd5b82600003610aac57506000610516565b6000610ac0670de0b6b3a7640000856128ab565b9050670de0b6b3a7640000610ad58583612917565b14610b3c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4449565f494e5445524e414c00000000000000000000000000000000000000006044820152606401610a93565b82610b48600183612844565b610b529190612917565b610b5d90600161285b565b915050610516565b600080610b7283856128ab565b9050831580610b89575082610b878583612917565b145b610bef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4d554c5f4f564552464c4f5700000000000000000000000000000000000000006044820152606401610a93565b80600003610c01576000915050610516565b670de0b6b3a7640000610b48600183612844565b60006060855167ffffffffffffffff811115610c3357610c3361251b565b604051908082528060200260200182016040528015610c5c578160200160208202803683370190505b509050670de0b6b3a7640000915060005b8851811015610def576000868281518110610c8a57610c8a6127e6565b6020026020010151861115610d3f576000610cb9610ca788610dfb565b8c858151811061043f5761043f6127e6565b90506000818a8581518110610cd057610cd06127e6565b6020026020010151610ce29190612844565b90506000610d02610cfb89670de0b6b3a7640000612844565b8390610a2b565b9050610d0e8282612844565b868681518110610d2057610d206127e6565b6020908102919091010152610d35818461285b565b9350505050610d5c565b878281518110610d5157610d516127e6565b602002602001015190505b6000610da08b8481518110610d7357610d736127e6565b6020026020010151838d8681518110610d8e57610d8e6127e6565b60200260200101516108899190612844565b9050610dd8610dd18b8581518110610dba57610dba6127e6565b602002602001015183610fdf90919063ffffffff16565b8690610f3b565b945050508080610de790612873565b915050610c6d565b50965096945050505050565b6000670de0b6b3a76400008210610e13576000610516565b61051682670de0b6b3a7640000612844565b600081600003610e91576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f5a45524f5f4449564953494f4e000000000000000000000000000000000000006044820152606401610a93565b82600003610ea157506000610516565b6000610eb5670de0b6b3a7640000856128ab565b9050670de0b6b3a7640000610eca8583612917565b14610f31576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4449565f494e5445524e414c00000000000000000000000000000000000000006044820152606401610a93565b610b5d8382612917565b600080610f4883856128ab565b9050831580610f5f575082610f5d8583612917565b145b610fc5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4d554c5f4f564552464c4f5700000000000000000000000000000000000000006044820152606401610a93565b610fd7670de0b6b3a764000082612917565b949350505050565b600080610fec8484611216565b90506000611006610fff83612710610b65565b60016114ed565b90508082101561101b57600092505050610516565b6110258282611566565b92505050610516565b8161103c5761103c816115de565b5050565b60008061104d8484611216565b90506000611060610fff83612710610b65565b905061059082826114ed565b60006060855167ffffffffffffffff81111561108a5761108a61251b565b6040519080825280602002602001820160405280156110b3578160200160208202803683370190505b509050670de0b6b3a7640000915060005b8851811015610def576000858783815181106110e2576110e26127e6565b6020026020010151111561117d576000611107610ca7670de0b6b3a764000089612844565b90506000818a858151811061111e5761111e6127e6565b60200260200101516111309190612844565b9050600061113e8289610b65565b905061114a8183612844565b611154908461285b565b935080868681518110611169576111696127e6565b60200260200101818152505050505061119a565b87828151811061118f5761118f6127e6565b602002602001015190505b60006111cc8b84815181106111b1576111b16127e6565b6020026020010151838d8681518110610877576108776127e6565b90506111e6610dd18b8581518110610dba57610dba6127e6565b9450505080806111f590612873565b9150506110c4565b60008183101561120d578161120f565b825b9392505050565b60008160000361122f5750670de0b6b3a7640000610516565b8260000361123f57506000610516565b7f800000000000000000000000000000000000000000000000000000000000000083106112c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f585f4f55545f4f465f424f554e445300000000000000000000000000000000006044820152606401610a93565b826112fc68056bc75e2d631000007f4000000000000000000000000000000000000000000000000000000000000000612917565b8310611364576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f595f4f55545f4f465f424f554e445300000000000000000000000000000000006044820152606401610a93565b8260008261138267016345785d8a0000670de0b6b3a764000061292b565b1280156113a757506113a4670de0b6b3a764000067016345785d8a000061299f565b83125b156114105760006113b78461164b565b9050670de0b6b3a7640000836113cd8284612a13565b6113d79190612a27565b6113e19190612ae3565b836113f4670de0b6b3a764000084612ae3565b6113fe9190612a27565b611408919061299f565b915050611427565b8161141a8461188c565b6114249190612a27565b90505b611439670de0b6b3a764000082612ae3565b9050807ffffffffffffffffffffffffffffffffffffffffffffffffdc702bd3a30fc000013158015611474575068070c1cc73b00c800008113155b6114da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f50524f445543545f4f55545f4f465f424f554e445300000000000000000000006044820152606401610a93565b6114e381611e72565b9695505050505050565b6000806114fa838561285b565b90508381101561120f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4144445f4f564552464c4f5700000000000000000000000000000000000000006044820152606401610a93565b6000828211156115d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f5355425f4f564552464c4f5700000000000000000000000000000000000000006044820152606401610a93565b6000610fd78385612844565b7f08c379a0000000000000000000000000000000000000000000000000000000006000908152602060045260076024526652455123000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b600061165f670de0b6b3a764000083612a27565b9150600061167c6ec097ce7bc90715b34b9f10000000008461299f565b6ec097ce7bc90715b34b9f1000000000611696818661292b565b6116a09190612a27565b6116aa9190612ae3565b905060006ec097ce7bc90715b34b9f10000000006116c88380612a27565b6116d29190612ae3565b905081806ec097ce7bc90715b34b9f10000000006116f08483612a27565b6116fa9190612ae3565b9150611707600383612ae3565b611711908261299f565b90506ec097ce7bc90715b34b9f100000000061172d8484612a27565b6117379190612ae3565b9150611744600583612ae3565b61174e908261299f565b90506ec097ce7bc90715b34b9f100000000061176a8484612a27565b6117749190612ae3565b9150611781600783612ae3565b61178b908261299f565b90506ec097ce7bc90715b34b9f10000000006117a78484612a27565b6117b19190612ae3565b91506117be600983612ae3565b6117c8908261299f565b90506ec097ce7bc90715b34b9f10000000006117e48484612a27565b6117ee9190612ae3565b91506117fb600b83612ae3565b611805908261299f565b90506ec097ce7bc90715b34b9f10000000006118218484612a27565b61182b9190612ae3565b9150611838600d83612ae3565b611842908261299f565b90506ec097ce7bc90715b34b9f100000000061185e8484612a27565b6118689190612ae3565b9150611875600f83612ae3565b61187f908261299f565b90506114e3816002612a27565b6000670de0b6b3a76400008212156118cc576118c3826118b4670de0b6b3a764000080612a27565b6118be9190612ae3565b61188c565b61051690612b4b565b60006118f8670de0b6b3a7640000770195e54c5dd42177f53a27172fa9ec630262827000000000612a27565b831261193857611920770195e54c5dd42177f53a27172fa9ec63026282700000000084612ae3565b92506119356806f05b59d3b20000008261299f565b90505b611956670de0b6b3a76400006b1425982cf597cd205cef7380612a27565b831261198a576119726b1425982cf597cd205cef738084612ae3565b92506119876803782dace9d90000008261299f565b90505b611995606482612a27565b90506119a2606484612a27565b92506e01855144814a7ff805980ff008400083126119ff576e01855144814a7ff805980ff00840006119dd68056bc75e2d6310000085612a27565b6119e79190612ae3565b92506119fc68ad78ebc5ac620000008261299f565b90505b6b02df0ab5a80a22c61ab5a7008312611a54576b02df0ab5a80a22c61ab5a700611a3268056bc75e2d6310000085612a27565b611a3c9190612ae3565b9250611a516856bc75e2d6310000008261299f565b90505b693f1fce3da636ea5cf8508312611aa557693f1fce3da636ea5cf850611a8368056bc75e2d6310000085612a27565b611a8d9190612ae3565b9250611aa2682b5e3af16b188000008261299f565b90505b690127fa27722cc06cc5e28312611af657690127fa27722cc06cc5e2611ad468056bc75e2d6310000085612a27565b611ade9190612ae3565b9250611af36815af1d78b58c4000008261299f565b90505b68280e60114edb805d038312611b455768280e60114edb805d03611b2368056bc75e2d6310000085612a27565b611b2d9190612ae3565b9250611b42680ad78ebc5ac62000008261299f565b90505b680ebc5fb417461211108312611b9457680ebc5fb41746121110611b7268056bc75e2d6310000085612a27565b611b7c9190612ae3565b9250611b9168056bc75e2d631000008261299f565b90505b6808f00f760a4b2db55d8312611be3576808f00f760a4b2db55d611bc168056bc75e2d6310000085612a27565b611bcb9190612ae3565b9250611be06802b5e3af16b18800008261299f565b90505b6806f5f17757889379378312611c32576806f5f1775788937937611c1068056bc75e2d6310000085612a27565b611c1a9190612ae3565b9250611c2f68015af1d78b58c400008261299f565b90505b6806248f33704b2866038312611c80576806248f33704b286603611c5f68056bc75e2d6310000085612a27565b611c699190612ae3565b9250611c7d67ad78ebc5ac6200008261299f565b90505b6805c548670b9510e7ac8312611cce576805c548670b9510e7ac611cad68056bc75e2d6310000085612a27565b611cb79190612ae3565b9250611ccb6756bc75e2d63100008261299f565b90505b6000611ce368056bc75e2d631000008561299f565b68056bc75e2d63100000611cf7818761292b565b611d019190612a27565b611d0b9190612ae3565b9050600068056bc75e2d63100000611d238380612a27565b611d2d9190612ae3565b9050818068056bc75e2d63100000611d458483612a27565b611d4f9190612ae3565b9150611d5c600383612ae3565b611d66908261299f565b905068056bc75e2d63100000611d7c8484612a27565b611d869190612ae3565b9150611d93600583612ae3565b611d9d908261299f565b905068056bc75e2d63100000611db38484612a27565b611dbd9190612ae3565b9150611dca600783612ae3565b611dd4908261299f565b905068056bc75e2d63100000611dea8484612a27565b611df49190612ae3565b9150611e01600983612ae3565b611e0b908261299f565b905068056bc75e2d63100000611e218484612a27565b611e2b9190612ae3565b9150611e38600b83612ae3565b611e42908261299f565b9050611e4f600282612a27565b90506064611e5d828761299f565b611e679190612ae3565b979650505050505050565b60007ffffffffffffffffffffffffffffffffffffffffffffffffdc702bd3a30fc00008212158015611ead575068070c1cc73b00c800008213155b611f13576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f494e56414c49445f4558504f4e454e54000000000000000000000000000000006044820152606401610a93565b6000821215611f4957611f2d611f2883612b4b565b611e72565b611f3f670de0b6b3a764000080612a27565b6105169190612ae3565b60006806f05b59d3b20000008312611f9057611f6e6806f05b59d3b20000008461292b565b9250770195e54c5dd42177f53a27172fa9ec6302628270000000009050611fcd565b6803782dace9d90000008312611fc957611fb36803782dace9d90000008461292b565b92506b1425982cf597cd205cef73809050611fcd565b5060015b611fd8606484612a27565b925068056bc75e2d6310000068ad78ebc5ac6200000084126120395761200768ad78ebc5ac620000008561292b565b935068056bc75e2d6310000061202c6e01855144814a7ff805980ff008400083612a27565b6120369190612ae3565b90505b6856bc75e2d631000000841261208b5761205c6856bc75e2d6310000008561292b565b935068056bc75e2d6310000061207e6b02df0ab5a80a22c61ab5a70083612a27565b6120889190612ae3565b90505b682b5e3af16b1880000084126120db576120ae682b5e3af16b188000008561292b565b935068056bc75e2d631000006120ce693f1fce3da636ea5cf85083612a27565b6120d89190612ae3565b90505b6815af1d78b58c400000841261212b576120fe6815af1d78b58c4000008561292b565b935068056bc75e2d6310000061211e690127fa27722cc06cc5e283612a27565b6121289190612ae3565b90505b680ad78ebc5ac6200000841261217a5761214e680ad78ebc5ac62000008561292b565b935068056bc75e2d6310000061216d68280e60114edb805d0383612a27565b6121779190612ae3565b90505b68056bc75e2d6310000084126121c95761219d68056bc75e2d631000008561292b565b935068056bc75e2d631000006121bc680ebc5fb4174612111083612a27565b6121c69190612ae3565b90505b6802b5e3af16b18800008412612218576121ec6802b5e3af16b18800008561292b565b935068056bc75e2d6310000061220b6808f00f760a4b2db55d83612a27565b6122159190612ae3565b90505b68015af1d78b58c4000084126122675761223b68015af1d78b58c400008561292b565b935068056bc75e2d6310000061225a6806f5f177578893793783612a27565b6122649190612ae3565b90505b68056bc75e2d631000008461227c818361299f565b9150600268056bc75e2d631000006122948884612a27565b61229e9190612ae3565b6122a89190612ae3565b90506122b4818361299f565b9150600368056bc75e2d631000006122cc8884612a27565b6122d69190612ae3565b6122e09190612ae3565b90506122ec818361299f565b9150600468056bc75e2d631000006123048884612a27565b61230e9190612ae3565b6123189190612ae3565b9050612324818361299f565b9150600568056bc75e2d6310000061233c8884612a27565b6123469190612ae3565b6123509190612ae3565b905061235c818361299f565b9150600668056bc75e2d631000006123748884612a27565b61237e9190612ae3565b6123889190612ae3565b9050612394818361299f565b9150600768056bc75e2d631000006123ac8884612a27565b6123b69190612ae3565b6123c09190612ae3565b90506123cc818361299f565b9150600868056bc75e2d631000006123e48884612a27565b6123ee9190612ae3565b6123f89190612ae3565b9050612404818361299f565b9150600968056bc75e2d6310000061241c8884612a27565b6124269190612ae3565b6124309190612ae3565b905061243c818361299f565b9150600a68056bc75e2d631000006124548884612a27565b61245e9190612ae3565b6124689190612ae3565b9050612474818361299f565b9150600b68056bc75e2d6310000061248c8884612a27565b6124969190612ae3565b6124a09190612ae3565b90506124ac818361299f565b9150600c68056bc75e2d631000006124c48884612a27565b6124ce9190612ae3565b6124d89190612ae3565b90506124e4818361299f565b915060648468056bc75e2d631000006124fd8587612a27565b6125079190612ae3565b6125119190612a27565b6114e39190612ae3565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261255b57600080fd5b8135602067ffffffffffffffff808311156125785761257861251b565b8260051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f830116810181811084821117156125bb576125bb61251b565b6040529384528581018301938381019250878511156125d957600080fd5b83870191505b84821015611e67578135835291830191908301906125df565b600080600080600060a0868803121561261057600080fd5b853567ffffffffffffffff8082111561262857600080fd5b61263489838a0161254a565b9650602088013591508082111561264a57600080fd5b61265689838a0161254a565b9550604088013591508082111561266c57600080fd5b506126798882890161254a565b9598949750949560608101359550608001359392505050565b600081518084526020808501945080840160005b838110156126c2578151875295820195908201906001016126a6565b509495945050505050565b828152604060208201526000610fd76040830184612692565b6000806000606084860312156126fb57600080fd5b833567ffffffffffffffff81111561271257600080fd5b61271e8682870161254a565b9660208601359650604090950135949350505050565b60208152600061120f6020830184612692565b6000806040838503121561275a57600080fd5b823567ffffffffffffffff8082111561277257600080fd5b61277e8683870161254a565b9350602085013591508082111561279457600080fd5b506127a18582860161254a565b9150509250929050565b600080600080600060a086880312156127c357600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561285657612856612815565b500390565b6000821982111561286e5761286e612815565b500190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036128a4576128a4612815565b5060010190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156128e3576128e3612815565b500290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082612926576129266128e8565b500490565b6000808312837f80000000000000000000000000000000000000000000000000000000000000000183128115161561296557612965612815565b837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01831381161561299957612999612815565b50500390565b6000808212827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038413811516156129d9576129d9612815565b827f8000000000000000000000000000000000000000000000000000000000000000038412811615612a0d57612a0d612815565b50500190565b600082612a2257612a226128e8565b500790565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600084136000841385830485118282161615612a6857612a68612815565b7f80000000000000000000000000000000000000000000000000000000000000006000871286820588128184161615612aa357612aa3612815565b60008712925087820587128484161615612abf57612abf612815565b87850587128184161615612ad557612ad5612815565b505050929093029392505050565b600082612af257612af26128e8565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83147f800000000000000000000000000000000000000000000000000000000000000083141615612b4657612b46612815565b500590565b60007f80000000000000000000000000000000000000000000000000000000000000008203612b7c57612b7c612815565b506000039056fea2646970667358221220163ce7a3a6c116a1a0c0f800f0b3cdee55933ab32e077162e900fb8cf0924dcd64736f6c634300080d0033";

export class RequiemWeightedMath__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RequiemWeightedMath> {
    return super.deploy(overrides || {}) as Promise<RequiemWeightedMath>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RequiemWeightedMath {
    return super.attach(address) as RequiemWeightedMath;
  }
  connect(signer: Signer): RequiemWeightedMath__factory {
    return super.connect(signer) as RequiemWeightedMath__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RequiemWeightedMathInterface {
    return new utils.Interface(_abi) as RequiemWeightedMathInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RequiemWeightedMath {
    return new Contract(address, _abi, signerOrProvider) as RequiemWeightedMath;
  }
}
