/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RouterEventEmitter,
  RouterEventEmitterInterface,
} from "../RouterEventEmitter";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "Amounts",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapETHForExactTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactETHForTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapTokensForExactETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapTokensForExactTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b98806100206000396000f3fe6080604052600436106100695760003560e01c8063ae25e88611610043578063ae25e886146100bd578063cb9c9a3a146100dd578063fd31aab4146100fd57600080fd5b806345b4f0321461007557806349158c43146100975780637551fcec146100aa57600080fd5b3661007057005b600080fd5b34801561008157600080fd5b5061009561009036600461069f565b61011d565b005b6100956100a5366004610742565b610290565b6100956100b8366004610742565b6103fd565b3480156100c957600080fd5b506100956100d83660046107cb565b61043a565b3480156100e957600080fd5b506100956100f836600461069f565b6105aa565b34801561010957600080fd5b506100956101183660046107cb565b6105eb565b6000808a73ffffffffffffffffffffffffffffffffffffffff1663bff51d7160e01b8b8b8b8b8b8b8b8b60405160240161015e9897969594939291906108b1565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009094169390931790925290516101e7919061090c565b600060405180830381855af49150503d8060008114610222576040519150601f19603f3d011682016040523d82523d6000602084013e610227565b606091505b50915091508161023957610239610947565b7f4cc17991e3610e3400e74a8306aa421daaee1e3446fa22b490604610999e10b38180602001905181019061026e91906109a5565b60405161027b9190610a81565b60405180910390a15050505050505050505050565b6000808873ffffffffffffffffffffffffffffffffffffffff1663b05f579e60e01b8989898989896040516024016102cd96959493929190610ac5565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909416939093179092529051610356919061090c565b600060405180830381855af49150503d8060008114610391576040519150601f19603f3d011682016040523d82523d6000602084013e610396565b606091505b5091509150816103a8576103a8610947565b7f4cc17991e3610e3400e74a8306aa421daaee1e3446fa22b490604610999e10b3818060200190518101906103dd91906109a5565b6040516103ea9190610a81565b60405180910390a1505050505050505050565b6000808873ffffffffffffffffffffffffffffffffffffffff1663fde1adda60e01b8989898989896040516024016102cd96959493929190610ac5565b6000808973ffffffffffffffffffffffffffffffffffffffff16639c91fcb560e01b8a8a8a8a8a8a8a6040516024016104799796959493929190610b10565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909416939093179092529051610502919061090c565b600060405180830381855af49150503d806000811461053d576040519150601f19603f3d011682016040523d82523d6000602084013e610542565b606091505b50915091508161055457610554610947565b7f4cc17991e3610e3400e74a8306aa421daaee1e3446fa22b490604610999e10b38180602001905181019061058991906109a5565b6040516105969190610a81565b60405180910390a150505050505050505050565b6000808a73ffffffffffffffffffffffffffffffffffffffff1663d59e44ee60e01b8b8b8b8b8b8b8b8b60405160240161015e9897969594939291906108b1565b6000808973ffffffffffffffffffffffffffffffffffffffff1663fa3219d560e01b8a8a8a8a8a8a8a6040516024016104799796959493929190610b10565b803573ffffffffffffffffffffffffffffffffffffffff8116811461064e57600080fd5b919050565b60008083601f84011261066557600080fd5b50813567ffffffffffffffff81111561067d57600080fd5b6020830191508360208260051b850101111561069857600080fd5b9250929050565b60008060008060008060008060006101008a8c0312156106be57600080fd5b6106c78a61062a565b98506106d560208b0161062a565b97506106e360408b0161062a565b965060608a0135955060808a0135945060a08a013567ffffffffffffffff81111561070d57600080fd5b6107198c828d01610653565b909550935061072c905060c08b0161062a565b915060e08a013590509295985092959850929598565b600080600080600080600060c0888a03121561075d57600080fd5b6107668861062a565b96506107746020890161062a565b955060408801359450606088013567ffffffffffffffff81111561079757600080fd5b6107a38a828b01610653565b90955093506107b690506080890161062a565b915060a0880135905092959891949750929550565b60008060008060008060008060e0898b0312156107e757600080fd5b6107f08961062a565b97506107fe60208a0161062a565b96506040890135955060608901359450608089013567ffffffffffffffff81111561082857600080fd5b6108348b828c01610653565b9095509350610847905060a08a0161062a565b915060c089013590509295985092959890939650565b8183526000602080850194508260005b858110156108a65773ffffffffffffffffffffffffffffffffffffffff6108938361062a565b168752958201959082019060010161086d565b509495945050505050565b600073ffffffffffffffffffffffffffffffffffffffff808b168352808a16602084015288604084015287606084015260e060808401526108f660e08401878961085d565b941660a08301525060c001529695505050505050565b6000825160005b8181101561092d5760208186018101518583015201610913565b8181111561093c576000828501525b509190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060208083850312156109b857600080fd5b825167ffffffffffffffff808211156109d057600080fd5b818501915085601f8301126109e457600080fd5b8151818111156109f6576109f6610976565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f83011681018181108582111715610a3957610a39610976565b604052918252848201925083810185019188831115610a5757600080fd5b938501935b82851015610a7557845184529385019392850192610a5c565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015610ab957835183529284019291840191600101610a9d565b50909695505050505050565b600073ffffffffffffffffffffffffffffffffffffffff808916835287602084015260a06040840152610afc60a08401878961085d565b941660608301525060800152949350505050565b600073ffffffffffffffffffffffffffffffffffffffff808a16835288602084015287604084015260c06060840152610b4d60c08401878961085d565b941660808301525060a001529594505050505056fea26469706673582212202fda800161c2cec91c133c317dced778a19dbe950affe288465d2382d7de7a8264736f6c634300080d0033";

export class RouterEventEmitter__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RouterEventEmitter> {
    return super.deploy(overrides || {}) as Promise<RouterEventEmitter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RouterEventEmitter {
    return super.attach(address) as RouterEventEmitter;
  }
  connect(signer: Signer): RouterEventEmitter__factory {
    return super.connect(signer) as RouterEventEmitter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RouterEventEmitterInterface {
    return new utils.Interface(_abi) as RouterEventEmitterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RouterEventEmitter {
    return new Contract(address, _abi, signerOrProvider) as RouterEventEmitter;
  }
}
