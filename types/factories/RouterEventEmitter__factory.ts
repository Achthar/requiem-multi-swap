/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RouterEventEmitter,
  RouterEventEmitterInterface,
} from "../RouterEventEmitter";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "Amounts",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapETHForExactTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactETHForTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapTokensForExactETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapTokensForExactTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a20806100206000396000f3fe6080604052600436106100695760003560e01c8063ae25e88611610043578063ae25e886146100bd578063cb9c9a3a146100dd578063fd31aab4146100fd57600080fd5b806345b4f0321461007557806349158c43146100975780637551fcec146100aa57600080fd5b3661007057005b600080fd5b34801561008157600080fd5b506100956100903660046105ab565b61011d565b005b6100956100a536600461064e565b610250565b6100956100b836600461064e565b61037d565b3480156100c957600080fd5b506100956100d83660046106d7565b6103ad565b3480156100e957600080fd5b506100956100f83660046105ab565b6104dd565b34801561010957600080fd5b506100956101183660046106d7565b610511565b6000808a6001600160a01b031663bff51d7160e01b8b8b8b8b8b8b8b8b6040516024016101519897969594939291906107b0565b60408051601f198184030181529181526020820180516001600160e01b03167fffffffff000000000000000000000000000000000000000000000000000000009094169390931790925290516101a791906107fe565b600060405180830381855af49150503d80600081146101e2576040519150601f19603f3d011682016040523d82523d6000602084013e6101e7565b606091505b5091509150816101f9576101f9610839565b7f4cc17991e3610e3400e74a8306aa421daaee1e3446fa22b490604610999e10b38180602001905181019061022e9190610865565b60405161023b9190610923565b60405180910390a15050505050505050505050565b600080886001600160a01b031663b05f579e60e01b89898989898960405160240161028096959493929190610967565b60408051601f198184030181529181526020820180516001600160e01b03167fffffffff000000000000000000000000000000000000000000000000000000009094169390931790925290516102d691906107fe565b600060405180830381855af49150503d8060008114610311576040519150601f19603f3d011682016040523d82523d6000602084013e610316565b606091505b50915091508161032857610328610839565b7f4cc17991e3610e3400e74a8306aa421daaee1e3446fa22b490604610999e10b38180602001905181019061035d9190610865565b60405161036a9190610923565b60405180910390a1505050505050505050565b600080886001600160a01b031663fde1adda60e01b89898989898960405160240161028096959493929190610967565b600080896001600160a01b0316639c91fcb560e01b8a8a8a8a8a8a8a6040516024016103df97969594939291906109a5565b60408051601f198184030181529181526020820180516001600160e01b03167fffffffff0000000000000000000000000000000000000000000000000000000090941693909317909252905161043591906107fe565b600060405180830381855af49150503d8060008114610470576040519150601f19603f3d011682016040523d82523d6000602084013e610475565b606091505b50915091508161048757610487610839565b7f4cc17991e3610e3400e74a8306aa421daaee1e3446fa22b490604610999e10b3818060200190518101906104bc9190610865565b6040516104c99190610923565b60405180910390a150505050505050505050565b6000808a6001600160a01b031663d59e44ee60e01b8b8b8b8b8b8b8b8b6040516024016101519897969594939291906107b0565b600080896001600160a01b031663fa3219d560e01b8a8a8a8a8a8a8a6040516024016103df97969594939291906109a5565b80356001600160a01b038116811461055a57600080fd5b919050565b60008083601f84011261057157600080fd5b50813567ffffffffffffffff81111561058957600080fd5b6020830191508360208260051b85010111156105a457600080fd5b9250929050565b60008060008060008060008060006101008a8c0312156105ca57600080fd5b6105d38a610543565b98506105e160208b01610543565b97506105ef60408b01610543565b965060608a0135955060808a0135945060a08a013567ffffffffffffffff81111561061957600080fd5b6106258c828d0161055f565b9095509350610638905060c08b01610543565b915060e08a013590509295985092959850929598565b600080600080600080600060c0888a03121561066957600080fd5b61067288610543565b965061068060208901610543565b955060408801359450606088013567ffffffffffffffff8111156106a357600080fd5b6106af8a828b0161055f565b90955093506106c2905060808901610543565b915060a0880135905092959891949750929550565b60008060008060008060008060e0898b0312156106f357600080fd5b6106fc89610543565b975061070a60208a01610543565b96506040890135955060608901359450608089013567ffffffffffffffff81111561073457600080fd5b6107408b828c0161055f565b9095509350610753905060a08a01610543565b915060c089013590509295985092959890939650565b8183526000602080850194508260005b858110156107a5576001600160a01b0361079283610543565b1687529582019590820190600101610779565b509495945050505050565b60006001600160a01b03808b168352808a16602084015288604084015287606084015260e060808401526107e860e084018789610769565b941660a08301525060c001529695505050505050565b6000825160005b8181101561081f5760208186018101518583015201610805565b8181111561082e576000828501525b509190910192915050565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561087857600080fd5b825167ffffffffffffffff8082111561089057600080fd5b818501915085601f8301126108a457600080fd5b8151818111156108b6576108b661084f565b8060051b604051601f19603f830116810181811085821117156108db576108db61084f565b6040529182528482019250838101850191888311156108f957600080fd5b938501935b82851015610917578451845293850193928501926108fe565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561095b5783518352928401929184019160010161093f565b50909695505050505050565b60006001600160a01b03808916835287602084015260a0604084015261099160a084018789610769565b941660608301525060800152949350505050565b60006001600160a01b03808a16835288602084015287604084015260c060608401526109d560c084018789610769565b941660808301525060a001529594505050505056fea26469706673582212207b78f2c5ec74c3157a8ecb9eb1f88e7e234147cf11ff7317a2b6cb1f8cbbcee464736f6c634300080c0033";

export class RouterEventEmitter__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RouterEventEmitter> {
    return super.deploy(overrides || {}) as Promise<RouterEventEmitter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RouterEventEmitter {
    return super.attach(address) as RouterEventEmitter;
  }
  connect(signer: Signer): RouterEventEmitter__factory {
    return super.connect(signer) as RouterEventEmitter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RouterEventEmitterInterface {
    return new utils.Interface(_abi) as RouterEventEmitterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RouterEventEmitter {
    return new Contract(address, _abi, signerOrProvider) as RouterEventEmitter;
  }
}
