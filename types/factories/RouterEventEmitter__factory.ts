/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RouterEventEmitter,
  RouterEventEmitterInterface,
} from "../RouterEventEmitter";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "Amounts",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapETHForExactTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactETHForTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapTokensForExactETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapTokensForExactTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506109aa806100206000396000f3fe6080604052600436106100595760003560e01c806345b4f0321461006557806349158c43146100875780637551fcec1461009a578063ae25e886146100ad578063cb9c9a3a146100cd578063fd31aab4146100ed57600080fd5b3661006057005b600080fd5b34801561007157600080fd5b5061008561008036600461051c565b61010d565b005b6100856100953660046105be565b610216565b6100856100a83660046105be565b610319565b3480156100b957600080fd5b506100856100c8366004610646565b610349565b3480156100d957600080fd5b506100856100e836600461051c565b61044f565b3480156100f957600080fd5b50610085610108366004610646565b610483565b6000808a6001600160a01b031663bff51d7160e01b8b8b8b8b8b8b8b8b60405160240161014198979695949392919061071e565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161017f919061076b565b600060405180830381855af49150503d80600081146101ba576040519150601f19603f3d011682016040523d82523d6000602084013e6101bf565b606091505b5091509150816101d1576101d16107a6565b600080516020610955833981519152818060200190518101906101f491906107d2565b604051610201919061088f565b60405180910390a15050505050505050505050565b600080886001600160a01b031663b05f579e60e01b898989898989604051602401610246969594939291906108d3565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610284919061076b565b600060405180830381855af49150503d80600081146102bf576040519150601f19603f3d011682016040523d82523d6000602084013e6102c4565b606091505b5091509150816102d6576102d66107a6565b600080516020610955833981519152818060200190518101906102f991906107d2565b604051610306919061088f565b60405180910390a1505050505050505050565b600080886001600160a01b031663fde1adda60e01b898989898989604051602401610246969594939291906108d3565b600080896001600160a01b0316639c91fcb560e01b8a8a8a8a8a8a8a60405160240161037b9796959493929190610910565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516103b9919061076b565b600060405180830381855af49150503d80600081146103f4576040519150601f19603f3d011682016040523d82523d6000602084013e6103f9565b606091505b50915091508161040b5761040b6107a6565b6000805160206109558339815191528180602001905181019061042e91906107d2565b60405161043b919061088f565b60405180910390a150505050505050505050565b6000808a6001600160a01b031663d59e44ee60e01b8b8b8b8b8b8b8b8b60405160240161014198979695949392919061071e565b600080896001600160a01b031663fa3219d560e01b8a8a8a8a8a8a8a60405160240161037b9796959493929190610910565b80356001600160a01b03811681146104cc57600080fd5b919050565b60008083601f8401126104e357600080fd5b5081356001600160401b038111156104fa57600080fd5b6020830191508360208260051b850101111561051557600080fd5b9250929050565b60008060008060008060008060006101008a8c03121561053b57600080fd5b6105448a6104b5565b985061055260208b016104b5565b975061056060408b016104b5565b965060608a0135955060808a0135945060a08a01356001600160401b0381111561058957600080fd5b6105958c828d016104d1565b90955093506105a8905060c08b016104b5565b915060e08a013590509295985092959850929598565b600080600080600080600060c0888a0312156105d957600080fd5b6105e2886104b5565b96506105f0602089016104b5565b95506040880135945060608801356001600160401b0381111561061257600080fd5b61061e8a828b016104d1565b90955093506106319050608089016104b5565b915060a0880135905092959891949750929550565b60008060008060008060008060e0898b03121561066257600080fd5b61066b896104b5565b975061067960208a016104b5565b9650604089013595506060890135945060808901356001600160401b038111156106a257600080fd5b6106ae8b828c016104d1565b90955093506106c1905060a08a016104b5565b915060c089013590509295985092959890939650565b8183526000602080850194508260005b85811015610713576001600160a01b03610700836104b5565b16875295820195908201906001016106e7565b509495945050505050565b600060018060a01b03808b168352808a16602084015288604084015287606084015260e0608084015261075560e0840187896106d7565b941660a08301525060c001529695505050505050565b6000825160005b8181101561078c5760208186018101518583015201610772565b8181111561079b576000828501525b509190910192915050565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060208083850312156107e557600080fd5b82516001600160401b03808211156107fc57600080fd5b818501915085601f83011261081057600080fd5b815181811115610822576108226107bc565b8060051b604051601f19603f83011681018181108582111715610847576108476107bc565b60405291825284820192508381018501918883111561086557600080fd5b938501935b828510156108835784518452938501939285019261086a565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b818110156108c7578351835292840192918401916001016108ab565b50909695505050505050565b600060018060a01b03808916835287602084015260a060408401526108fc60a0840187896106d7565b941660608301525060800152949350505050565b600060018060a01b03808a16835288602084015287604084015260c0606084015261093f60c0840187896106d7565b941660808301525060a001529594505050505056fe4cc17991e3610e3400e74a8306aa421daaee1e3446fa22b490604610999e10b3a2646970667358221220d7b8ef9cedea96da8f4b9049b81b58e1bae4a61f0069d7c6caee4745be9a765864736f6c634300080a0033";

export class RouterEventEmitter__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RouterEventEmitter> {
    return super.deploy(overrides || {}) as Promise<RouterEventEmitter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RouterEventEmitter {
    return super.attach(address) as RouterEventEmitter;
  }
  connect(signer: Signer): RouterEventEmitter__factory {
    return super.connect(signer) as RouterEventEmitter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RouterEventEmitterInterface {
    return new utils.Interface(_abi) as RouterEventEmitterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RouterEventEmitter {
    return new Contract(address, _abi, signerOrProvider) as RouterEventEmitter;
  }
}
