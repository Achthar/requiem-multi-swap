/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockFlashLoanRecipient,
  MockFlashLoanRecipientInterface,
} from "../MockFlashLoanRecipient";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "feeAmounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "receiveFlashLoan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reenter",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "repayInExcess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "repayLoan",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_reenter",
        type: "bool",
      },
    ],
    name: "setReenter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_repayInExcess",
        type: "bool",
      },
    ],
    name: "setRepayInExcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_repayLoan",
        type: "bool",
      },
    ],
    name: "setRepayLoan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610cab380380610cab83398101604081905261002f9161004f565b6001600160a01b03166080526000805462ffffff1916600117905561007f565b60006020828403121561006157600080fd5b81516001600160a01b038116811461007857600080fd5b9392505050565b608051610c0b6100a060003960008181609201526105150152610c0b6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a6af17031161005b578063a6af170314610154578063b77f3a231461019a578063f04f2707146101df578063f966ade7146101f257600080fd5b806316f0115b1461008d5780633207ce3c146100de57806362a8239914610100578063a0fe97e314610141575b600080fd5b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6000546100f090610100900460ff1681565b60405190151581526020016100d5565b61013f61010e366004610701565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b005b6000546100f09062010000900460ff1681565b61013f610162366004610701565b6000805491151562010000027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff909216919091179055565b61013f6101a8366004610701565b60008054911515610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909216919091179055565b61013f6101ed3660046108c0565b6101ff565b6000546100f09060ff1681565b60005b835181101561054f57600085828151811061021f5761021f6109e5565b60200260200101519050600085838151811061023d5761023d6109e5565b60200260200101519050600085848151811061025b5761025b6109e5565b60209081029190910101516040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152909150829073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa1580156102d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f99190610a14565b14610365576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f494e56414c49445f464c4153484c4f414e5f42414c414e43450000000000000060448201526064015b60405180910390fd5b60005462010000900460ff16156103e9576040517f5edb331c0000000000000000000000000000000000000000000000000000000081523390635edb331c906103b69030908b908a90600401610a59565b600060405180830381600087803b1580156103d057600080fd5b505af11580156103e4573d6000803e3d6000fd5b505050505b8273ffffffffffffffffffffffffffffffffffffffff166340c10f1930600060019054906101000a900460ff16610420578361042b565b61042b846001610b35565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152604401600060405180830381600087803b15801561049657600080fd5b505af11580156104aa573d6000803e3d6000fd5b50505050600081836104bc9190610b35565b60005490915060ff166104db576104d4600182610b4d565b90506104f9565b600054610100900460ff16156104f9576104f6816001610b35565b90505b61053a73ffffffffffffffffffffffffffffffffffffffff85167f000000000000000000000000000000000000000000000000000000000000000083610556565b505050508061054890610b64565b9050610202565b5050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526105e39084906105e8565b505050565b6000808373ffffffffffffffffffffffffffffffffffffffff16836040516106109190610b9c565b6000604051808303816000865af19150503d806000811461064d576040519150601f19603f3d011682016040523d82523d6000602084013e610652565b606091505b50909250905081610667573d6000803e3d6000fd5b805115806106845750808060200190518101906106849190610bb8565b6106ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f534146455f45524332305f43414c4c5f4641494c454400000000000000000000604482015260640161035c565b50505050565b80151581146106fe57600080fd5b50565b60006020828403121561071357600080fd5b813561071e816106f0565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561079b5761079b610725565b604052919050565b600067ffffffffffffffff8211156107bd576107bd610725565b5060051b60200190565b600082601f8301126107d857600080fd5b813560206107ed6107e8836107a3565b610754565b82815260059290921b8401810191818101908684111561080c57600080fd5b8286015b848110156108275780358352918301918301610810565b509695505050505050565b600082601f83011261084357600080fd5b813567ffffffffffffffff81111561085d5761085d610725565b61088e60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610754565b8181528460208386010111156108a357600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080608085870312156108d657600080fd5b843567ffffffffffffffff808211156108ee57600080fd5b818701915087601f83011261090257600080fd5b813560206109126107e8836107a3565b82815260059290921b8401810191818101908b84111561093157600080fd5b948201945b8386101561097257853573ffffffffffffffffffffffffffffffffffffffff811681146109635760008081fd5b82529482019490820190610936565b9850508801359250508082111561098857600080fd5b610994888389016107c7565b945060408701359150808211156109aa57600080fd5b6109b6888389016107c7565b935060608701359150808211156109cc57600080fd5b506109d987828801610832565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215610a2657600080fd5b5051919050565b60005b83811015610a48578181015183820152602001610a30565b838111156106ea5750506000910152565b60006060820173ffffffffffffffffffffffffffffffffffffffff861683526020606081850152818651808452608086019150828801935060005b81811015610ab057845183529383019391830191600101610a94565b5050848103604086015285519250828152610ad083838301848901610a2d565b601f929092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091010195945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115610b4857610b48610b06565b500190565b600082821015610b5f57610b5f610b06565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610b9557610b95610b06565b5060010190565b60008251610bae818460208701610a2d565b9190910192915050565b600060208284031215610bca57600080fd5b815161071e816106f056fea2646970667358221220d1c8df9f8f716dbf835fb48a8b598e4da6f508a1f2d343ca10857b0d58496be064736f6c634300080e0033";

export class MockFlashLoanRecipient__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _pool: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockFlashLoanRecipient> {
    return super.deploy(
      _pool,
      overrides || {}
    ) as Promise<MockFlashLoanRecipient>;
  }
  getDeployTransaction(
    _pool: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_pool, overrides || {});
  }
  attach(address: string): MockFlashLoanRecipient {
    return super.attach(address) as MockFlashLoanRecipient;
  }
  connect(signer: Signer): MockFlashLoanRecipient__factory {
    return super.connect(signer) as MockFlashLoanRecipient__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockFlashLoanRecipientInterface {
    return new utils.Interface(_abi) as MockFlashLoanRecipientInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockFlashLoanRecipient {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockFlashLoanRecipient;
  }
}
