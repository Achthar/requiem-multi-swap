/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockFlashLoanRecipient,
  MockFlashLoanRecipientInterface,
} from "../MockFlashLoanRecipient";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "feeAmounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "receiveFlashLoan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reenter",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "repayInExcess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "repayLoan",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_reenter",
        type: "bool",
      },
    ],
    name: "setReenter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_repayInExcess",
        type: "bool",
      },
    ],
    name: "setRepayInExcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_repayLoan",
        type: "bool",
      },
    ],
    name: "setRepayLoan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610cfd380380610cfd83398101604081905261002f9161004f565b6001600160a01b03166080526000805462ffffff1916600117905561007f565b60006020828403121561006157600080fd5b81516001600160a01b038116811461007857600080fd5b9392505050565b608051610c5d6100a060003960008181609201526105170152610c5d6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a6af17031161005b578063a6af170314610154578063b77f3a231461019a578063f04f2707146101df578063f966ade7146101f257600080fd5b806316f0115b1461008d5780633207ce3c146100de57806362a8239914610100578063a0fe97e314610141575b600080fd5b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6000546100f090610100900460ff1681565b60405190151581526020016100d5565b61013f61010e366004610703565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b005b6000546100f09062010000900460ff1681565b61013f610162366004610703565b6000805491151562010000027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff909216919091179055565b61013f6101a8366004610703565b60008054911515610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909216919091179055565b61013f6101ed3660046108c2565b6101ff565b6000546100f09060ff1681565b60005b845181101561055157600085828151811061021f5761021f6109e7565b60200260200101519050600085838151811061023d5761023d6109e7565b60200260200101519050600085848151811061025b5761025b6109e7565b60209081029190910101516040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152909150829073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa1580156102d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f99190610a16565b14610365576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f494e56414c49445f464c4153484c4f414e5f42414c414e43450000000000000060448201526064015b60405180910390fd5b60005462010000900460ff16156103eb576040517f5c38449e0000000000000000000000000000000000000000000000000000000081523390635c38449e906103b89030908c908c908b90600401610aa5565b600060405180830381600087803b1580156103d257600080fd5b505af11580156103e6573d6000803e3d6000fd5b505050505b8273ffffffffffffffffffffffffffffffffffffffff166340c10f1930600060019054906101000a900460ff16610422578361042d565b61042d846001610b87565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152604401600060405180830381600087803b15801561049857600080fd5b505af11580156104ac573d6000803e3d6000fd5b50505050600081836104be9190610b87565b60005490915060ff166104dd576104d6600182610b9f565b90506104fb565b600054610100900460ff16156104fb576104f8816001610b87565b90505b61053c73ffffffffffffffffffffffffffffffffffffffff85167f000000000000000000000000000000000000000000000000000000000000000083610558565b505050508061054a90610bb6565b9050610202565b5050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526105e59084906105ea565b505050565b6000808373ffffffffffffffffffffffffffffffffffffffff16836040516106129190610bee565b6000604051808303816000865af19150503d806000811461064f576040519150601f19603f3d011682016040523d82523d6000602084013e610654565b606091505b50909250905081610669573d6000803e3d6000fd5b805115806106865750808060200190518101906106869190610c0a565b6106ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f534146455f45524332305f43414c4c5f4641494c454400000000000000000000604482015260640161035c565b50505050565b801515811461070057600080fd5b50565b60006020828403121561071557600080fd5b8135610720816106f2565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561079d5761079d610727565b604052919050565b600067ffffffffffffffff8211156107bf576107bf610727565b5060051b60200190565b600082601f8301126107da57600080fd5b813560206107ef6107ea836107a5565b610756565b82815260059290921b8401810191818101908684111561080e57600080fd5b8286015b848110156108295780358352918301918301610812565b509695505050505050565b600082601f83011261084557600080fd5b813567ffffffffffffffff81111561085f5761085f610727565b61089060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610756565b8181528460208386010111156108a557600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080608085870312156108d857600080fd5b843567ffffffffffffffff808211156108f057600080fd5b818701915087601f83011261090457600080fd5b813560206109146107ea836107a5565b82815260059290921b8401810191818101908b84111561093357600080fd5b948201945b8386101561097457853573ffffffffffffffffffffffffffffffffffffffff811681146109655760008081fd5b82529482019490820190610938565b9850508801359250508082111561098a57600080fd5b610996888389016107c9565b945060408701359150808211156109ac57600080fd5b6109b8888389016107c9565b935060608701359150808211156109ce57600080fd5b506109db87828801610834565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215610a2857600080fd5b5051919050565b60005b83811015610a4a578181015183820152602001610a32565b838111156106ec5750506000910152565b60008151808452610a73816020860160208601610a2f565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60006080820173ffffffffffffffffffffffffffffffffffffffff8088168452602060808186015282885180855260a087019150828a01945060005b81811015610aff578551851683529483019491830191600101610ae1565b5050858103604087015287518082529082019350915080870160005b83811015610b3757815185529382019390820190600101610b1b565b505050508281036060840152610b4d8185610a5b565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115610b9a57610b9a610b58565b500190565b600082821015610bb157610bb1610b58565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610be757610be7610b58565b5060010190565b60008251610c00818460208701610a2f565b9190910192915050565b600060208284031215610c1c57600080fd5b8151610720816106f256fea2646970667358221220ef04f2026451ee367483413c1272c3eecb570eda785cc67621512998cb2ddb7a64736f6c634300080d0033";

export class MockFlashLoanRecipient__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _pool: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockFlashLoanRecipient> {
    return super.deploy(
      _pool,
      overrides || {}
    ) as Promise<MockFlashLoanRecipient>;
  }
  getDeployTransaction(
    _pool: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_pool, overrides || {});
  }
  attach(address: string): MockFlashLoanRecipient {
    return super.attach(address) as MockFlashLoanRecipient;
  }
  connect(signer: Signer): MockFlashLoanRecipient__factory {
    return super.connect(signer) as MockFlashLoanRecipient__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockFlashLoanRecipientInterface {
    return new utils.Interface(_abi) as MockFlashLoanRecipientInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockFlashLoanRecipient {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockFlashLoanRecipient;
  }
}
