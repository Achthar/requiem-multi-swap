/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockAssetTransfersHandler,
  MockAssetTransfersHandlerInterface,
} from "../MockAssetTransfersHandler";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWETH",
        name: "weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositToInternalBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "getInternalBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAsset",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bool",
        name: "fromInternalBalance",
        type: "bool",
      },
    ],
    name: "receiveAsset",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAsset",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bool",
        name: "toInternalBalance",
        type: "bool",
      },
    ],
    name: "sendAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610b77380380610b7783398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051610adf6100986000396000818160560152818161021a01526103a10152610adf6000f3fe6080604052600436106100435760003560e01c80631f51af7d146100865780638a65d2e0146100a657806390c185ae146100fc578063e65f97021461011c57600080fd5b366100815761007f336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461020661012f565b005b600080fd5b34801561009257600080fd5b5061007f6100a13660046108ff565b610141565b3480156100b257600080fd5b506100ea6100c1366004610952565b6001600160a01b0391821660009081526020818152604080832093909416825291909152205490565b60405190815260200160405180910390f35b34801561010857600080fd5b5061007f61011736600461098b565b610153565b61007f61012a3660046108ff565b610178565b8161013d5761013d81610184565b5050565b61014d848484846101d7565b50505050565b6101686001600160a01b0383168430846102c1565b61017383838361032c565b505050565b61014d8484848461036b565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b826101e15761014d565b6001600160a01b03841661028f576101fc811561020261012f565b604051632e1a7d4d60e01b8152600481018490526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632e1a7d4d90602401600060405180830381600087803b15801561025e57600080fd5b505af1158015610272573d6000803e3d6000fd5b5061028a925050506001600160a01b03831684610459565b61014d565b8381156102a6576102a183828661032c565b6102ba565b6102ba6001600160a01b0382168486610577565b5050505050565b6040516001600160a01b038085166024830152831660448201526064810182905261014d9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526105a7565b6001600160a01b03808416600090815260208181526040808320938616835292905290812080548392906103619084906109e2565b9091555050505050565b826103755761014d565b6001600160a01b03841661041857610390811561020261012f565b61039f8347101561020461012f565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b1580156103fa57600080fd5b505af115801561040e573d6000803e3d6000fd5b505050505061014d565b83811561043e57600061042e8483876001610679565b905061043a81866109fa565b9450505b83156102ba576102ba6001600160a01b0382168430876102c1565b804710156104ae5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064015b60405180910390fd5b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146104fb576040519150601f19603f3d011682016040523d82523d6000602084013e610500565b606091505b50509050806101735760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016104a5565b6040516001600160a01b03831660248201526044810182905261017390849063a9059cbb60e01b906064016102f5565b60006105fc826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166106f49092919063ffffffff16565b805190915015610173578080602001905181019061061a9190610a11565b6101735760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104a5565b6001600160a01b03808516600090815260208181526040808320938716835292905290812054826106aa57836106b4565b6106b4818561070d565b91506106c08183610723565b6001600160a01b03968716600090815260208181526040808320989099168252969096529590942094909455509192915050565b60606107038484600085610778565b90505b9392505050565b600081831061071c5781610706565b5090919050565b6000828211156107645760405162461bcd60e51b815260206004820152600c60248201526b5355425f4f564552464c4f5760a01b60448201526064016104a5565b600061077083856109fa565b949350505050565b6060824710156107d95760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016104a5565b843b6108275760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104a5565b600080866001600160a01b031685876040516108439190610a5a565b60006040518083038185875af1925050503d8060008114610880576040519150601f19603f3d011682016040523d82523d6000602084013e610885565b606091505b50915091506108958282866108a0565b979650505050505050565b606083156108af575081610706565b8251156108bf5782518084602001fd5b8160405162461bcd60e51b81526004016104a59190610a76565b6001600160a01b03811681146108ee57600080fd5b50565b80151581146108ee57600080fd5b6000806000806080858703121561091557600080fd5b8435610920816108d9565b9350602085013592506040850135610937816108d9565b91506060850135610947816108f1565b939692955090935050565b6000806040838503121561096557600080fd5b8235610970816108d9565b91506020830135610980816108d9565b809150509250929050565b6000806000606084860312156109a057600080fd5b83356109ab816108d9565b925060208401356109bb816108d9565b929592945050506040919091013590565b634e487b7160e01b600052601160045260246000fd5b600082198211156109f5576109f56109cc565b500190565b600082821015610a0c57610a0c6109cc565b500390565b600060208284031215610a2357600080fd5b8151610706816108f1565b60005b83811015610a49578181015183820152602001610a31565b8381111561014d5750506000910152565b60008251610a6c818460208701610a2e565b9190910192915050565b6020815260008251806020840152610a95816040850160208701610a2e565b601f01601f1916919091016040019291505056fea2646970667358221220462c3ee7fd8f76e56f8ae4c03726654a35b8556adbf9d64c2b52045872a5c4df64736f6c63430008090033";

export class MockAssetTransfersHandler__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    weth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockAssetTransfersHandler> {
    return super.deploy(
      weth,
      overrides || {}
    ) as Promise<MockAssetTransfersHandler>;
  }
  getDeployTransaction(
    weth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(weth, overrides || {});
  }
  attach(address: string): MockAssetTransfersHandler {
    return super.attach(address) as MockAssetTransfersHandler;
  }
  connect(signer: Signer): MockAssetTransfersHandler__factory {
    return super.connect(signer) as MockAssetTransfersHandler__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockAssetTransfersHandlerInterface {
    return new utils.Interface(_abi) as MockAssetTransfersHandlerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockAssetTransfersHandler {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockAssetTransfersHandler;
  }
}
