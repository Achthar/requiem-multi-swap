/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BalanceAllocationMock,
  BalanceAllocationMockInterface,
} from "../BalanceAllocationMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
    ],
    name: "cash",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "cashToManaged",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseCash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "sharedCash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sharedManaged",
        type: "bytes32",
      },
    ],
    name: "fromSharedToBalanceA",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "sharedCash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sharedManaged",
        type: "bytes32",
      },
    ],
    name: "fromSharedToBalanceB",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseCash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
    ],
    name: "isNotZero",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
    ],
    name: "isZero",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
    ],
    name: "lastChangeBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
    ],
    name: "managed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "managedToCash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "newManaged",
        type: "uint256",
      },
    ],
    name: "setManaged",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_managed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lastChangeBlock",
        type: "uint256",
      },
    ],
    name: "toBalance",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenABalance",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "tokenBBalance",
        type: "bytes32",
      },
    ],
    name: "toSharedCash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenABalance",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "tokenBBalance",
        type: "bytes32",
      },
    ],
    name: "toSharedManaged",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
    ],
    name: "total",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "balances",
        type: "bytes32[]",
      },
    ],
    name: "totals",
    outputs: [
      {
        internalType: "uint256[]",
        name: "result",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506109b4806100206000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063736ea832116100a2578063ce83307711610071578063ce83307714610217578063d6c752c51461022a578063dd6469171461024a578063e1ac20221461025d578063fba56f521461027057600080fd5b8063736ea832146101cb57806393b9de4c146101de578063a44bed62146101f1578063ac0177a91461020457600080fd5b806351b311f0116100de57806351b311f01461017f578063595e098a146101925780637171e37f146101a55780637323e7ca146101b857600080fd5b8063256da630146101105780633a1f6e15146101365780633f7e18a5146101595780634ca27dff1461016c575b600080fd5b61012361011e366004610789565b610283565b6040519081526020015b60405180910390f35b6101496101443660046107ab565b610296565b604051901515815260200161012d565b6101236101673660046107ab565b6102ab565b61012361017a3660046107ab565b6102b7565b61012361018d366004610789565b6102cc565b6101236101a0366004610789565b6102d8565b6101236101b3366004610789565b6102e4565b6101236101c6366004610789565b6102f0565b6101236101d9366004610789565b6102fc565b6101236101ec366004610789565b610308565b6101236101ff3660046107ab565b610314565b610123610212366004610789565b610325565b610123610225366004610789565b610331565b61023d6102383660046107da565b61033d565b60405161012d9190610898565b6101496102583660046107ab565b61034f565b61012361026b3660046108dc565b610361565b61012361027e3660046107ab565b610376565b600061028f8383610381565b9392505050565b60006001600160e01b03821615155b92915050565b60006102a58260e01c90565b60006102a58260701c6001600160701b031690565b600061028f83836103df565b600061028f8383610419565b600061028f838361045d565b600061028f838361048e565b600061028f83836104c0565b600061028f83836104e1565b60006001600160701b0382166102a5565b600061028f838361051c565b600061028f838361053a565b606061034882610550565b5092915050565b60006001600160e01b038216156102a5565b600061036e848484610619565b949350505050565b60006102a582610690565b600080610399836001600160701b0386165b906106b8565b905060006103ba846103b48760701c6001600160701b031690565b90610705565b905060006103c88660e01c90565b90506103d5838383610619565b9695505050505050565b600061028f6103f78460701c6001600160701b031690565b61040a8460701c6001600160701b031690565b6104148660e01c90565b610619565b6000806104386104298560e01c90565b6104338560e01c90565b610753565b905061036e6001600160701b0385166001600160701b0385168363ffffffff1661076a565b600080610473836001600160701b0386166103b4565b905060006103ba846103938760701c6001600160701b031690565b600061028f6104a68460701c6001600160701b031690565b6104b98460701c6001600160701b031690565b600061076a565b60006001600160701b038316436104d8828583610619565b95945050505050565b6000806104f7836001600160701b0386166103b4565b9050600061050e8560701c6001600160701b031690565b9050436103d5838383610619565b600061028f6001600160701b0384166001600160701b03841661040a565b6000806104f7836001600160701b038616610393565b60606000825167ffffffffffffffff81111561056e5761056e6107c4565b604051908082528060200260200182016040528015610597578160200160208202803683370190505b5091506000905060005b82518110156106135760008482815181106105be576105be610908565b602002602001015190506105d181610690565b8483815181106105e3576105e3610908565b6020026020010181815250506105fd836104338360e01c90565b925050808061060b90610934565b9150506105a1565b50915091565b600080610626848661094f565b905084811015801561063b5750600160701b81105b6106855760405162461bcd60e51b815260206004820152601660248201527542414c414e43455f544f54414c5f4f564552464c4f5760501b60448201526064015b60405180910390fd5b6104d885858561076a565b60006106a58260701c6001600160701b031690565b6102a5906001600160701b03841661094f565b6000828211156106f95760405162461bcd60e51b815260206004820152600c60248201526b5355425f4f564552464c4f5760a01b604482015260640161067c565b600061036e8385610967565b600080610712838561094f565b90508381101561028f5760405162461bcd60e51b815260206004820152600c60248201526b4144445f4f564552464c4f5760a01b604482015260640161067c565b600081831015610763578161028f565b5090919050565b60008361077f607085901b60e085901b61094f565b61036e919061094f565b6000806040838503121561079c57600080fd5b50508035926020909101359150565b6000602082840312156107bd57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156107ed57600080fd5b823567ffffffffffffffff8082111561080557600080fd5b818501915085601f83011261081957600080fd5b81358181111561082b5761082b6107c4565b8060051b604051601f19603f83011681018181108582111715610850576108506107c4565b60405291825284820192508381018501918883111561086e57600080fd5b938501935b8285101561088c57843584529385019392850192610873565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b818110156108d0578351835292840192918401916001016108b4565b50909695505050505050565b6000806000606084860312156108f157600080fd5b505081359360208301359350604090920135919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156109485761094861091e565b5060010190565b600082198211156109625761096261091e565b500190565b6000828210156109795761097961091e565b50039056fea2646970667358221220638c2d704ff0c683318c9ae03b185af4dda6c2c3b53f29ac1d7c25b8babef54164736f6c63430008090033";

export class BalanceAllocationMock__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BalanceAllocationMock> {
    return super.deploy(overrides || {}) as Promise<BalanceAllocationMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BalanceAllocationMock {
    return super.attach(address) as BalanceAllocationMock;
  }
  connect(signer: Signer): BalanceAllocationMock__factory {
    return super.connect(signer) as BalanceAllocationMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BalanceAllocationMockInterface {
    return new utils.Interface(_abi) as BalanceAllocationMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BalanceAllocationMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BalanceAllocationMock;
  }
}
