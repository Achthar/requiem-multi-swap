/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SimpleEpochController,
  SimpleEpochControllerInterface,
} from "../SimpleEpochController";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "_epoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "allocateReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "allocator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epochLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastEpochTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "nextEpochAllocatedReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextEpochLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextEpochPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_allocator",
        type: "address",
      },
    ],
    name: "setAllocator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805561012c60015534801561001a57600080fd5b5060048054336001600160a01b031991821681179092556003805490911690911790556106ac8061004c6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b1461011d578063900cf0cf14610148578063aa5dcecc14610150578063bf83f2a214610163578063c5967c2614610176578063d673f4c31461017e57600080fd5b806307284ce9146100b957806313af4035146100d057806357d775f8146100e55780637effa5b6146100ee5780638554b0561461010157806389c614b814610114575b600080fd5b6001545b6040519081526020015b60405180910390f35b6100e36100de36600461056b565b610187565b005b6100bd60015481565b6100bd6100fc36600461056b565b6101dc565b6100e361010f36600461056b565b6102b3565b6100bd60025481565b600454610130906001600160a01b031681565b6040516001600160a01b0390911681526020016100c7565b6000546100bd565b600354610130906001600160a01b031681565b6100e361017136600461056b565b6103cf565b6100bd61041b565b6100bd60005481565b6004546001600160a01b031633146101ba5760405162461bcd60e51b81526004016101b190610588565b60405180910390fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b600080826001600160a01b031663f7c618c16040518163ffffffff1660e01b8152600401602060405180830381865afa15801561021d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024191906105bd565b6040516370a0823160e01b81523060048201529091506001600160a01b038216906370a0823190602401602060405180830381865afa158015610288573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ac91906105da565b9392505050565b6003546001600160a01b031633146102dd5760405162461bcd60e51b81526004016101b190610588565b60006102e8826101dc565b90506000826001600160a01b031663f7c618c16040518163ffffffff1660e01b8152600401602060405180830381865afa15801561032a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034e91906105bd565b905061035b818484610438565b6000546103699060016105f3565b6000554260025560405163716e5b0b60e11b8152600481018390526001600160a01b0384169063e2dcb61690602401600060405180830381600087803b1580156103b257600080fd5b505af11580156103c6573d6000803e3d6000fd5b50505050505050565b6004546001600160a01b031633146103f95760405162461bcd60e51b81526004016101b190610588565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600061042660015490565b60025461043391906105f3565b905090565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b17905291516000928392908716916104949190610619565b6000604051808303816000865af19150503d80600081146104d1576040519150601f19603f3d011682016040523d82523d6000602084013e6104d6565b606091505b50915091508180156105005750805115806105005750808060200190518101906105009190610654565b61054c5760405162461bcd60e51b815260206004820152601e60248201527f5472616e7366657248656c7065723a20415050524f56455f4641494c4544000060448201526064016101b1565b5050505050565b6001600160a01b038116811461056857600080fd5b50565b60006020828403121561057d57600080fd5b81356102ac81610553565b6020808252818101527f53696d706c6545706f6368436f6e74726f6c6c65723a20464f5242494444454e604082015260600190565b6000602082840312156105cf57600080fd5b81516102ac81610553565b6000602082840312156105ec57600080fd5b5051919050565b6000821982111561061457634e487b7160e01b600052601160045260246000fd5b500190565b6000825160005b8181101561063a5760208186018101518583015201610620565b81811115610649576000828501525b509190910192915050565b60006020828403121561066657600080fd5b815180151581146102ac57600080fdfea2646970667358221220474f72827b065616d263d95ad53f9c44d52fccb25d1dd38af1d272f3d8899e4d64736f6c634300080a0033";

export class SimpleEpochController__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SimpleEpochController> {
    return super.deploy(overrides || {}) as Promise<SimpleEpochController>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SimpleEpochController {
    return super.attach(address) as SimpleEpochController;
  }
  connect(signer: Signer): SimpleEpochController__factory {
    return super.connect(signer) as SimpleEpochController__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleEpochControllerInterface {
    return new utils.Interface(_abi) as SimpleEpochControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleEpochController {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SimpleEpochController;
  }
}
