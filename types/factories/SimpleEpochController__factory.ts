/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SimpleEpochController,
  SimpleEpochControllerInterface,
} from "../SimpleEpochController";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "_epoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "allocateReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "allocator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epochLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastEpochTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "nextEpochAllocatedReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextEpochLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextEpochPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_allocator",
        type: "address",
      },
    ],
    name: "setAllocator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805561012c60015534801561001a57600080fd5b5060048054336001600160a01b031991821681179092556003805490911690911790556107b68061004c6000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80638da5cb5b11610081578063bf83f2a21161005b578063bf83f2a214610183578063c5967c2614610196578063d673f4c31461019e57600080fd5b80638da5cb5b1461013d578063900cf0cf14610168578063aa5dcecc1461017057600080fd5b80637effa5b6116100b25780637effa5b61461010e5780638554b0561461012157806389c614b81461013457600080fd5b806307284ce9146100d957806313af4035146100f057806357d775f814610105575b600080fd5b6001545b6040519081526020015b60405180910390f35b6101036100fe366004610691565b6101a7565b005b6100dd60015481565b6100dd61011c366004610691565b610235565b61010361012f366004610691565b610325565b6100dd60025481565b600454610150906001600160a01b031681565b6040516001600160a01b0390911681526020016100e7565b6000546100dd565b600354610150906001600160a01b031681565b610103610191366004610691565b61048a565b6100dd610513565b6100dd60005481565b6004546001600160a01b031633146102065760405162461bcd60e51b815260206004820181905260248201527f53696d706c6545706f6368436f6e74726f6c6c65723a20464f5242494444454e60448201526064015b60405180910390fd5b6004805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600080826001600160a01b031663f7c618c16040518163ffffffff1660e01b8152600401602060405180830381865afa158015610276573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029a91906106ae565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529091506001600160a01b038216906370a0823190602401602060405180830381865afa1580156102fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031e91906106cb565b9392505050565b6003546001600160a01b0316331461037f5760405162461bcd60e51b815260206004820181905260248201527f53696d706c6545706f6368436f6e74726f6c6c65723a20464f5242494444454e60448201526064016101fd565b600061038a82610235565b90506000826001600160a01b031663f7c618c16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f091906106ae565b90506103fd818484610530565b60005461040b9060016106e4565b600055426002556040517fe2dcb616000000000000000000000000000000000000000000000000000000008152600481018390526001600160a01b0384169063e2dcb61690602401600060405180830381600087803b15801561046d57600080fd5b505af1158015610481573d6000803e3d6000fd5b50505050505050565b6004546001600160a01b031633146104e45760405162461bcd60e51b815260206004820181905260248201527f53696d706c6545706f6368436f6e74726f6c6c65723a20464f5242494444454e60448201526064016101fd565b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600061051e60015490565b60025461052b91906106e4565b905090565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b30000000000000000000000000000000000000000000000000000000017905291516000928392908716916105ba9190610723565b6000604051808303816000865af19150503d80600081146105f7576040519150601f19603f3d011682016040523d82523d6000602084013e6105fc565b606091505b5091509150818015610626575080511580610626575080806020019051810190610626919061075e565b6106725760405162461bcd60e51b815260206004820152601e60248201527f5472616e7366657248656c7065723a20415050524f56455f4641494c4544000060448201526064016101fd565b5050505050565b6001600160a01b038116811461068e57600080fd5b50565b6000602082840312156106a357600080fd5b813561031e81610679565b6000602082840312156106c057600080fd5b815161031e81610679565b6000602082840312156106dd57600080fd5b5051919050565b6000821982111561071e577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b6000825160005b81811015610744576020818601810151858301520161072a565b81811115610753576000828501525b509190910192915050565b60006020828403121561077057600080fd5b8151801515811461031e57600080fdfea26469706673582212205ff5915e76e434c39fc3fd4c105d4387c109aa66492795ebaba6d5a67a52824d64736f6c634300080c0033";

export class SimpleEpochController__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SimpleEpochController> {
    return super.deploy(overrides || {}) as Promise<SimpleEpochController>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SimpleEpochController {
    return super.attach(address) as SimpleEpochController;
  }
  connect(signer: Signer): SimpleEpochController__factory {
    return super.connect(signer) as SimpleEpochController__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleEpochControllerInterface {
    return new utils.Interface(_abi) as SimpleEpochControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleEpochController {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SimpleEpochController;
  }
}
