/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ThiefRouter, ThiefRouterInterface } from "../ThiefRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_WETH",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "formula",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "pools",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "onSwapETHForExactTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "pools",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "onSwapExactETHForTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "amountLast",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "pools",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "onSwapExactTokensForETH",
    outputs: [
      {
        internalType: "uint256",
        name: "amountLast",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "pools",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "onSwapExactTokensForTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "amountLast",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "pools",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "onSwapTokensForExactETH",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "pools",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "onSwapTokensForExactTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b50604051620025ac380380620025ac8339810160408190526200003491620000db565b6001600160a01b038216608081905260408051634b75f54f60e01b81529051634b75f54f916004808201926020929091908290030181865afa1580156200007f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000a5919062000113565b6001600160a01b0390811660a0521660c0525062000138565b80516001600160a01b0381168114620000d657600080fd5b919050565b60008060408385031215620000ef57600080fd5b620000fa83620000be565b91506200010a60208401620000be565b90509250929050565b6000602082840312156200012657600080fd5b6200013182620000be565b9392505050565b60805160a05160c051612429620001836000396000818160b7015281816101e00152818161197401528181611a3c0152611ddc015260006101470152600061023401526124296000f3fe60806040526004361061009a5760003560e01c8063abbfddc511610069578063b4e819fd1161004e578063b4e819fd14610202578063c45a015514610222578063f35aaf631461025657600080fd5b8063abbfddc5146101ae578063ad5c4648146101ce57600080fd5b806308c820da146100eb5780630d1424a3146101145780634b75f54f1461013557806351bf18301461018e57600080fd5b366100e6573373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146100e4576100e4611fe2565b005b600080fd5b6100fe6100f9366004612129565b610276565b60405161010b91906121af565b60405180910390f35b610127610122366004612129565b6107ac565b60405190815260200161010b565b34801561014157600080fd5b506101697f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010b565b34801561019a57600080fd5b506100fe6101a93660046121f3565b610a28565b3480156101ba57600080fd5b506100fe6101c93660046121f3565b610f25565b3480156101da57600080fd5b506101697f000000000000000000000000000000000000000000000000000000000000000081565b34801561020e57600080fd5b5061012761021d3660046121f3565b6113f2565b34801561022e57600080fd5b506101697f000000000000000000000000000000000000000000000000000000000000000081565b34801561026257600080fd5b506101276102713660046121f3565b6116ae565b606081428110156102e8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f526f757465723a2045585049524544000000000000000000000000000000000060448201526064015b60405180910390fd5b855167ffffffffffffffff81111561030257610302612011565b60405190808252806020026020018201604052801561032b578160200160208202803683370190505b509150848288518151811061034257610342612283565b60200260200101818152505060006001835161035e91906122e1565b90505b80156104d757876103736001836122e1565b8151811061038357610383612283565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663cc56fd43886001846103b491906122e1565b815181106103c4576103c4612283565b60200260200101518984815181106103de576103de612283565b60200260200101518685815181106103f8576103f8612283565b60209081029190910101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff93841660048201529290911660248301526044820152606401602060405180830381865afa15801561047a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049e91906122f8565b836104aa6001846122e1565b815181106104ba576104ba612283565b6020908102919091010152806104cf81612311565b915050610361565b5034826000815181106104ec576104ec612283565b6020026020010151111561055c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4558434553534956455f494e505554000000000000000000000000000000000060448201526064016102df565b61059a8260008151811061057257610572612283565b60200260200101518860008151811061058d5761058d612283565b6020026020010151611972565b60005b8751811015610750576000600189516105b691906122e1565b82146105e557886105c8836001612346565b815181106105d8576105d8612283565b60200260200101516105e7565b855b90508882815181106105fb576105fb612283565b602002602001015173ffffffffffffffffffffffffffffffffffffffff166332fd549389848151811061063057610630612283565b60200260200101518a8560016106469190612346565b8151811061065657610656612283565b602002602001015187868151811061067057610670612283565b6020026020010151888760016106869190612346565b8151811061069657610696612283565b60209081029190910101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b16815273ffffffffffffffffffffffffffffffffffffffff9485166004820152928416602484015260448301919091526064820152908416608482015260a401600060405180830381600087803b15801561072457600080fd5b505af1158015610738573d6000803e3d6000fd5b505050505080806107489061235e565b91505061059d565b508160008151811061076457610764612283565b60200260200101513411156107a2576107a2338360008151811061078a5761078a612283565b60200260200101513461079d91906122e1565b611abd565b5095945050505050565b60008142811015610819576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f526f757465723a2045585049524544000000000000000000000000000000000060448201526064016102df565b349150610833348860008151811061058d5761058d612283565b60005b87518110156109bd5760006001895161084f91906122e1565b821461087e5788610861836001612346565b8151811061087157610871612283565b6020026020010151610880565b855b905088828151811061089457610894612283565b602002602001015173ffffffffffffffffffffffffffffffffffffffff16634ac00e038984815181106108c9576108c9612283565b60200260200101518a8560016108df9190612346565b815181106108ef576108ef612283565b60209081029190910101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff928316600482015290821660248201526044810188905260006064820152908416608482015260a4016020604051808303816000875af1158015610983573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a791906122f8565b93505080806109b59061235e565b915050610836565b50818511156107a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f494e53554646494349454e545f4f55545055540000000000000000000000000060448201526064016102df565b60608142811015610a95576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f526f757465723a2045585049524544000000000000000000000000000000000060448201526064016102df565b865167ffffffffffffffff811115610aaf57610aaf612011565b604051908082528060200260200182016040528015610ad8578160200160208202803683370190505b5091508582895181518110610aef57610aef612283565b602002602001018181525050600060018351610b0b91906122e1565b90505b8015610c845788610b206001836122e1565b81518110610b3057610b30612283565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663cc56fd4389600184610b6191906122e1565b81518110610b7157610b71612283565b60200260200101518a8481518110610b8b57610b8b612283565b6020026020010151868581518110610ba557610ba5612283565b60209081029190910101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff93841660048201529290911660248301526044820152606401602060405180830381865afa158015610c27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4b91906122f8565b83610c576001846122e1565b81518110610c6757610c67612283565b602090810291909101015280610c7c81612311565b915050610b0e565b508482600081518110610c9957610c99612283565b60200260200101511115610d09576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4558434553534956455f494e505554000000000000000000000000000000000060448201526064016102df565b610d6387600081518110610d1f57610d1f612283565b6020026020010151338a600081518110610d3b57610d3b612283565b602002602001015185600081518110610d5657610d56612283565b6020026020010151611bcc565b60005b8851811015610f1957600060018a51610d7f91906122e1565b8214610dae5789610d91836001612346565b81518110610da157610da1612283565b6020026020010151610db0565b855b9050898281518110610dc457610dc4612283565b602002602001015173ffffffffffffffffffffffffffffffffffffffff166332fd54938a8481518110610df957610df9612283565b60200260200101518b856001610e0f9190612346565b81518110610e1f57610e1f612283565b6020026020010151878681518110610e3957610e39612283565b602002602001015188876001610e4f9190612346565b81518110610e5f57610e5f612283565b60209081029190910101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b16815273ffffffffffffffffffffffffffffffffffffffff9485166004820152928416602484015260448301919091526064820152908416608482015260a401600060405180830381600087803b158015610eed57600080fd5b505af1158015610f01573d6000803e3d6000fd5b50505050508080610f119061235e565b915050610d66565b50509695505050505050565b60608142811015610f92576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f526f757465723a2045585049524544000000000000000000000000000000000060448201526064016102df565b865167ffffffffffffffff811115610fac57610fac612011565b604051908082528060200260200182016040528015610fd5578160200160208202803683370190505b5091508582895181518110610fec57610fec612283565b60200260200101818152505060006001835161100891906122e1565b90505b8015611181578861101d6001836122e1565b8151811061102d5761102d612283565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663cc56fd438960018461105e91906122e1565b8151811061106e5761106e612283565b60200260200101518a848151811061108857611088612283565b60200260200101518685815181106110a2576110a2612283565b60209081029190910101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff93841660048201529290911660248301526044820152606401602060405180830381865afa158015611124573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114891906122f8565b836111546001846122e1565b8151811061116457611164612283565b60209081029190910101528061117981612311565b91505061100b565b50848260008151811061119657611196612283565b60200260200101511115611206576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4558434553534956455f494e505554000000000000000000000000000000000060448201526064016102df565b61121c87600081518110610d1f57610d1f612283565b60005b88518110156113d257600060018a5161123891906122e1565b8214611267578961124a836001612346565b8151811061125a5761125a612283565b6020026020010151611269565b305b905089828151811061127d5761127d612283565b602002602001015173ffffffffffffffffffffffffffffffffffffffff166332fd54938a84815181106112b2576112b2612283565b60200260200101518b8560016112c89190612346565b815181106112d8576112d8612283565b60200260200101518786815181106112f2576112f2612283565b6020026020010151888760016113089190612346565b8151811061131857611318612283565b60209081029190910101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b16815273ffffffffffffffffffffffffffffffffffffffff9485166004820152928416602484015260448301919091526064820152908416608482015260a401600060405180830381600087803b1580156113a657600080fd5b505af11580156113ba573d6000803e3d6000fd5b505050505080806113ca9061235e565b91505061121f565b50610f1973eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8588611d6a565b6000814281101561145f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f526f757465723a2045585049524544000000000000000000000000000000000060448201526064016102df565b8591506114ae8760008151811061147857611478612283565b6020026020010151338a60008151811061149457611494612283565b602002602001015160018a6114a991906122e1565b611bcc565b60005b885181101561163857600060018a516114ca91906122e1565b82146114f957896114dc836001612346565b815181106114ec576114ec612283565b60200260200101516114fb565b855b905089828151811061150f5761150f612283565b602002602001015173ffffffffffffffffffffffffffffffffffffffff16634ac00e038a848151811061154457611544612283565b60200260200101518b85600161155a9190612346565b8151811061156a5761156a612283565b60209081029190910101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff928316600482015290821660248201526044810188905260006064820152908416608482015260a4016020604051808303816000875af11580156115fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061162291906122f8565b93505080806116309061235e565b9150506114b1565b50818511156116a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f494e53554646494349454e545f4f55545055540000000000000000000000000060448201526064016102df565b509695505050505050565b6000814281101561171b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f526f757465723a2045585049524544000000000000000000000000000000000060448201526064016102df565b85915061175e8760008151811061173457611734612283565b6020026020010151338a60008151811061175057611750612283565b602002602001015189611bcc565b60005b88518110156118e857600060018a5161177a91906122e1565b82146117a9578961178c836001612346565b8151811061179c5761179c612283565b60200260200101516117ab565b305b90508982815181106117bf576117bf612283565b602002602001015173ffffffffffffffffffffffffffffffffffffffff16634ac00e038a84815181106117f4576117f4612283565b60200260200101518b85600161180a9190612346565b8151811061181a5761181a612283565b60209081029190910101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff928316600482015290821660248201526044810188905260006064820152908416608482015260a4016020604051808303816000875af11580156118ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d291906122f8565b93505080806118e09061235e565b915050611761565b5081851115611953576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f494e53554646494349454e545f4f55545055540000000000000000000000000060448201526064016102df565b610f1973eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8584611d6a565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b1580156119da57600080fd5b505af11580156119ee573d6000803e3d6000fd5b50506040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152602482018790527f000000000000000000000000000000000000000000000000000000000000000016935063a9059cbb925060440190506020604051808303816000875af1158015611a89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aad9190612396565b611ab957611ab9611fe2565b5050565b6040805160008082526020820190925273ffffffffffffffffffffffffffffffffffffffff8416908390604051611af491906123b8565b60006040518083038185875af1925050503d8060008114611b31576040519150601f19603f3d011682016040523d82523d6000602084013e611b36565b606091505b5050905080611bc7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f5472616e7366657248656c7065723a204554485f5452414e534645525f46414960448201527f4c4544000000000000000000000000000000000000000000000000000000000060648201526084016102df565b505050565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790529151600092839290881691611c6b91906123b8565b6000604051808303816000865af19150503d8060008114611ca8576040519150601f19603f3d011682016040523d82523d6000602084013e611cad565b606091505b5091509150818015611cd7575080511580611cd7575080806020019051810190611cd79190612396565b611d62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f5472616e7366657248656c7065723a205452414e534645525f46524f4d5f464160448201527f494c45440000000000000000000000000000000000000000000000000000000060648201526084016102df565b505050505050565b600081600003611d7c57506001611e6b565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff851603611e5c576040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018390527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690632e1a7d4d90602401600060405180830381600087803b158015611e3557600080fd5b505af1158015611e49573d6000803e3d6000fd5b50505050611e578383611abd565b611e67565b611e67848484611e72565b5060015b9392505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790529151600092839290871691611f0991906123b8565b6000604051808303816000865af19150503d8060008114611f46576040519150601f19603f3d011682016040523d82523d6000602084013e611f4b565b606091505b5091509150818015611f75575080511580611f75575080806020019051810190611f759190612396565b611fdb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5472616e7366657248656c7065723a205452414e534645525f4641494c45440060448201526064016102df565b5050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b803573ffffffffffffffffffffffffffffffffffffffff8116811461206457600080fd5b919050565b600082601f83011261207a57600080fd5b8135602067ffffffffffffffff8083111561209757612097612011565b8260051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f830116810181811084821117156120da576120da612011565b6040529384528581018301938381019250878511156120f857600080fd5b83870191505b8482101561211e5761210f82612040565b835291830191908301906120fe565b979650505050505050565b600080600080600060a0868803121561214157600080fd5b853567ffffffffffffffff8082111561215957600080fd5b61216589838a01612069565b9650602088013591508082111561217b57600080fd5b5061218888828901612069565b9450506040860135925061219e60608701612040565b949793965091946080013592915050565b6020808252825182820181905260009190848201906040850190845b818110156121e7578351835292840192918401916001016121cb565b50909695505050505050565b60008060008060008060c0878903121561220c57600080fd5b863567ffffffffffffffff8082111561222457600080fd5b6122308a838b01612069565b9750602089013591508082111561224657600080fd5b5061225389828a01612069565b955050604087013593506060870135925061227060808801612040565b915060a087013590509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156122f3576122f36122b2565b500390565b60006020828403121561230a57600080fd5b5051919050565b600081612320576123206122b2565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b60008219821115612359576123596122b2565b500190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361238f5761238f6122b2565b5060010190565b6000602082840312156123a857600080fd5b81518015158114611e6b57600080fd5b6000825160005b818110156123d957602081860181015185830152016123bf565b818111156123e8576000828501525b50919091019291505056fea264697066735822122001aae54a15d4af267843dcf0e51571aae540f415e3b53643e7ab8f0f1621a0fc64736f6c634300080d0033";

export class ThiefRouter__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _factory: string,
    _WETH: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ThiefRouter> {
    return super.deploy(
      _factory,
      _WETH,
      overrides || {}
    ) as Promise<ThiefRouter>;
  }
  getDeployTransaction(
    _factory: string,
    _WETH: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_factory, _WETH, overrides || {});
  }
  attach(address: string): ThiefRouter {
    return super.attach(address) as ThiefRouter;
  }
  connect(signer: Signer): ThiefRouter__factory {
    return super.connect(signer) as ThiefRouter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ThiefRouterInterface {
    return new utils.Interface(_abi) as ThiefRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ThiefRouter {
    return new Contract(address, _abi, signerOrProvider) as ThiefRouter;
  }
}
