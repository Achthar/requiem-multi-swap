/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ThiefRouter, ThiefRouterInterface } from "../ThiefRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_WETH",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "formula",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "pools",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "onSwapETHForExactTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "pools",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "onSwapExactETHForTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "amountLast",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "pools",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "onSwapExactTokensForETH",
    outputs: [
      {
        internalType: "uint256",
        name: "amountLast",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "pools",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "onSwapExactTokensForTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "amountLast",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "pools",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "onSwapTokensForExactETH",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "pools",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "onSwapTokensForExactTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b50604051620025f7380380620025f78339810160408190526200003491620000db565b6001600160a01b038216608081905260408051634b75f54f60e01b81529051634b75f54f916004808201926020929091908290030181865afa1580156200007f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000a5919062000113565b6001600160a01b0390811660a0521660c0525062000138565b80516001600160a01b0381168114620000d657600080fd5b919050565b60008060408385031215620000ef57600080fd5b620000fa83620000be565b91506200010a60208401620000be565b90509250929050565b6000602082840312156200012657600080fd5b6200013182620000be565b9392505050565b60805160a05160c051612474620001836000396000818160b7015281816101e0015281816119bf01528181611a870152611e27015260006101470152600061023401526124746000f3fe60806040526004361061009a5760003560e01c8063abbfddc511610069578063b4e819fd1161004e578063b4e819fd14610202578063c45a015514610222578063f35aaf631461025657600080fd5b8063abbfddc5146101ae578063ad5c4648146101ce57600080fd5b806308c820da146100eb5780630d1424a3146101145780634b75f54f1461013557806351bf18301461018e57600080fd5b366100e6573373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146100e4576100e461202d565b005b600080fd5b6100fe6100f9366004612174565b610276565b60405161010b91906121fa565b60405180910390f35b610127610122366004612174565b6107ac565b60405190815260200161010b565b34801561014157600080fd5b506101697f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010b565b34801561019a57600080fd5b506100fe6101a936600461223e565b610a28565b3480156101ba57600080fd5b506100fe6101c936600461223e565b610f31565b3480156101da57600080fd5b506101697f000000000000000000000000000000000000000000000000000000000000000081565b34801561020e57600080fd5b5061012761021d36600461223e565b611442565b34801561022e57600080fd5b506101697f000000000000000000000000000000000000000000000000000000000000000081565b34801561026257600080fd5b5061012761027136600461223e565b6116f9565b606081428110156102e8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f526f757465723a2045585049524544000000000000000000000000000000000060448201526064015b60405180910390fd5b855167ffffffffffffffff8111156103025761030261205c565b60405190808252806020026020018201604052801561032b578160200160208202803683370190505b5091508482885181518110610342576103426122ce565b60200260200101818152505060006001835161035e919061232c565b90505b80156104d7578761037360018361232c565b81518110610383576103836122ce565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663cc56fd43886001846103b4919061232c565b815181106103c4576103c46122ce565b60200260200101518984815181106103de576103de6122ce565b60200260200101518685815181106103f8576103f86122ce565b60209081029190910101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff93841660048201529290911660248301526044820152606401602060405180830381865afa15801561047a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049e9190612343565b836104aa60018461232c565b815181106104ba576104ba6122ce565b6020908102919091010152806104cf8161235c565b915050610361565b5034826000815181106104ec576104ec6122ce565b6020026020010151111561055c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4558434553534956455f494e505554000000000000000000000000000000000060448201526064016102df565b61059a82600081518110610572576105726122ce565b60200260200101518860008151811061058d5761058d6122ce565b60200260200101516119bd565b60005b8751811015610750576000600189516105b6919061232c565b82146105e557886105c8836001612391565b815181106105d8576105d86122ce565b60200260200101516105e7565b855b90508882815181106105fb576105fb6122ce565b602002602001015173ffffffffffffffffffffffffffffffffffffffff166332fd5493898481518110610630576106306122ce565b60200260200101518a8560016106469190612391565b81518110610656576106566122ce565b6020026020010151878681518110610670576106706122ce565b6020026020010151888760016106869190612391565b81518110610696576106966122ce565b60209081029190910101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b16815273ffffffffffffffffffffffffffffffffffffffff9485166004820152928416602484015260448301919091526064820152908416608482015260a401600060405180830381600087803b15801561072457600080fd5b505af1158015610738573d6000803e3d6000fd5b50505050508080610748906123a9565b91505061059d565b5081600081518110610764576107646122ce565b60200260200101513411156107a2576107a2338360008151811061078a5761078a6122ce565b60200260200101513461079d919061232c565b611b08565b5095945050505050565b60008142811015610819576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f526f757465723a2045585049524544000000000000000000000000000000000060448201526064016102df565b349150610833348860008151811061058d5761058d6122ce565b60005b87518110156109bd5760006001895161084f919061232c565b821461087e5788610861836001612391565b81518110610871576108716122ce565b6020026020010151610880565b855b9050888281518110610894576108946122ce565b602002602001015173ffffffffffffffffffffffffffffffffffffffff16634ac00e038984815181106108c9576108c96122ce565b60200260200101518a8560016108df9190612391565b815181106108ef576108ef6122ce565b60209081029190910101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff928316600482015290821660248201526044810188905260006064820152908416608482015260a4016020604051808303816000875af1158015610983573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a79190612343565b93505080806109b5906123a9565b915050610836565b50818511156107a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f494e53554646494349454e545f4f55545055540000000000000000000000000060448201526064016102df565b60608142811015610a95576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f526f757465723a2045585049524544000000000000000000000000000000000060448201526064016102df565b865167ffffffffffffffff811115610aaf57610aaf61205c565b604051908082528060200260200182016040528015610ad8578160200160208202803683370190505b5091508582895181518110610aef57610aef6122ce565b602002602001018181525050600060018351610b0b919061232c565b90505b8015610c845788610b2060018361232c565b81518110610b3057610b306122ce565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663cc56fd4389600184610b61919061232c565b81518110610b7157610b716122ce565b60200260200101518a8481518110610b8b57610b8b6122ce565b6020026020010151868581518110610ba557610ba56122ce565b60209081029190910101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff93841660048201529290911660248301526044820152606401602060405180830381865afa158015610c27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4b9190612343565b83610c5760018461232c565b81518110610c6757610c676122ce565b602090810291909101015280610c7c8161235c565b915050610b0e565b508482600081518110610c9957610c996122ce565b60200260200101511115610d09576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4558434553534956455f494e505554000000000000000000000000000000000060448201526064016102df565b610d6f87600081518110610d1f57610d1f6122ce565b6020026020010151338a600081518110610d3b57610d3b6122ce565b6020026020010151600186600081518110610d5857610d586122ce565b6020026020010151610d6a919061232c565b611c17565b60005b8851811015610f2557600060018a51610d8b919061232c565b8214610dba5789610d9d836001612391565b81518110610dad57610dad6122ce565b6020026020010151610dbc565b855b9050898281518110610dd057610dd06122ce565b602002602001015173ffffffffffffffffffffffffffffffffffffffff166332fd54938a8481518110610e0557610e056122ce565b60200260200101518b856001610e1b9190612391565b81518110610e2b57610e2b6122ce565b6020026020010151878681518110610e4557610e456122ce565b602002602001015188876001610e5b9190612391565b81518110610e6b57610e6b6122ce565b60209081029190910101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b16815273ffffffffffffffffffffffffffffffffffffffff9485166004820152928416602484015260448301919091526064820152908416608482015260a401600060405180830381600087803b158015610ef957600080fd5b505af1158015610f0d573d6000803e3d6000fd5b50505050508080610f1d906123a9565b915050610d72565b50509695505050505050565b60608142811015610f9e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f526f757465723a2045585049524544000000000000000000000000000000000060448201526064016102df565b865167ffffffffffffffff811115610fb857610fb861205c565b604051908082528060200260200182016040528015610fe1578160200160208202803683370190505b5091508582895181518110610ff857610ff86122ce565b602002602001018181525050600060018351611014919061232c565b90505b801561118d578861102960018361232c565b81518110611039576110396122ce565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663cc56fd438960018461106a919061232c565b8151811061107a5761107a6122ce565b60200260200101518a8481518110611094576110946122ce565b60200260200101518685815181106110ae576110ae6122ce565b60209081029190910101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff93841660048201529290911660248301526044820152606401602060405180830381865afa158015611130573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111549190612343565b8361116060018461232c565b81518110611170576111706122ce565b6020908102919091010152806111858161235c565b915050611017565b5084826000815181106111a2576111a26122ce565b60200260200101511115611212576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4558434553534956455f494e505554000000000000000000000000000000000060448201526064016102df565b61126c87600081518110611228576112286122ce565b6020026020010151338a600081518110611244576112446122ce565b60200260200101518560008151811061125f5761125f6122ce565b6020026020010151611c17565b60005b885181101561142257600060018a51611288919061232c565b82146112b7578961129a836001612391565b815181106112aa576112aa6122ce565b60200260200101516112b9565b305b90508982815181106112cd576112cd6122ce565b602002602001015173ffffffffffffffffffffffffffffffffffffffff166332fd54938a8481518110611302576113026122ce565b60200260200101518b8560016113189190612391565b81518110611328576113286122ce565b6020026020010151878681518110611342576113426122ce565b6020026020010151888760016113589190612391565b81518110611368576113686122ce565b60209081029190910101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b16815273ffffffffffffffffffffffffffffffffffffffff9485166004820152928416602484015260448301919091526064820152908416608482015260a401600060405180830381600087803b1580156113f657600080fd5b505af115801561140a573d6000803e3d6000fd5b5050505050808061141a906123a9565b91505061126f565b50610f2573eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8588611db5565b600081428110156114af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f526f757465723a2045585049524544000000000000000000000000000000000060448201526064016102df565b8591506114f9876000815181106114c8576114c86122ce565b6020026020010151338a6000815181106114e4576114e46122ce565b6020026020010151600a8a610d6a919061232c565b60005b885181101561168357600060018a51611515919061232c565b82146115445789611527836001612391565b81518110611537576115376122ce565b6020026020010151611546565b855b905089828151811061155a5761155a6122ce565b602002602001015173ffffffffffffffffffffffffffffffffffffffff16634ac00e038a848151811061158f5761158f6122ce565b60200260200101518b8560016115a59190612391565b815181106115b5576115b56122ce565b60209081029190910101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff928316600482015290821660248201526044810188905260006064820152908416608482015260a4016020604051808303816000875af1158015611649573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061166d9190612343565b935050808061167b906123a9565b9150506114fc565b50818511156116ee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f494e53554646494349454e545f4f55545055540000000000000000000000000060448201526064016102df565b509695505050505050565b60008142811015611766576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f526f757465723a2045585049524544000000000000000000000000000000000060448201526064016102df565b8591506117a98760008151811061177f5761177f6122ce565b6020026020010151338a60008151811061179b5761179b6122ce565b602002602001015189611c17565b60005b885181101561193357600060018a516117c5919061232c565b82146117f457896117d7836001612391565b815181106117e7576117e76122ce565b60200260200101516117f6565b305b905089828151811061180a5761180a6122ce565b602002602001015173ffffffffffffffffffffffffffffffffffffffff16634ac00e038a848151811061183f5761183f6122ce565b60200260200101518b8560016118559190612391565b81518110611865576118656122ce565b60209081029190910101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff928316600482015290821660248201526044810188905260006064820152908416608482015260a4016020604051808303816000875af11580156118f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061191d9190612343565b935050808061192b906123a9565b9150506117ac565b508185111561199e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f494e53554646494349454e545f4f55545055540000000000000000000000000060448201526064016102df565b610f2573eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8584611db5565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015611a2557600080fd5b505af1158015611a39573d6000803e3d6000fd5b50506040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152602482018790527f000000000000000000000000000000000000000000000000000000000000000016935063a9059cbb925060440190506020604051808303816000875af1158015611ad4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611af891906123e1565b611b0457611b0461202d565b5050565b6040805160008082526020820190925273ffffffffffffffffffffffffffffffffffffffff8416908390604051611b3f9190612403565b60006040518083038185875af1925050503d8060008114611b7c576040519150601f19603f3d011682016040523d82523d6000602084013e611b81565b606091505b5050905080611c12576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f5472616e7366657248656c7065723a204554485f5452414e534645525f46414960448201527f4c4544000000000000000000000000000000000000000000000000000000000060648201526084016102df565b505050565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790529151600092839290881691611cb69190612403565b6000604051808303816000865af19150503d8060008114611cf3576040519150601f19603f3d011682016040523d82523d6000602084013e611cf8565b606091505b5091509150818015611d22575080511580611d22575080806020019051810190611d2291906123e1565b611dad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f5472616e7366657248656c7065723a205452414e534645525f46524f4d5f464160448201527f494c45440000000000000000000000000000000000000000000000000000000060648201526084016102df565b505050505050565b600081600003611dc757506001611eb6565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff851603611ea7576040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018390527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690632e1a7d4d90602401600060405180830381600087803b158015611e8057600080fd5b505af1158015611e94573d6000803e3d6000fd5b50505050611ea28383611b08565b611eb2565b611eb2848484611ebd565b5060015b9392505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790529151600092839290871691611f549190612403565b6000604051808303816000865af19150503d8060008114611f91576040519150601f19603f3d011682016040523d82523d6000602084013e611f96565b606091505b5091509150818015611fc0575080511580611fc0575080806020019051810190611fc091906123e1565b612026576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5472616e7366657248656c7065723a205452414e534645525f4641494c45440060448201526064016102df565b5050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b803573ffffffffffffffffffffffffffffffffffffffff811681146120af57600080fd5b919050565b600082601f8301126120c557600080fd5b8135602067ffffffffffffffff808311156120e2576120e261205c565b8260051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f830116810181811084821117156121255761212561205c565b60405293845285810183019383810192508785111561214357600080fd5b83870191505b848210156121695761215a8261208b565b83529183019190830190612149565b979650505050505050565b600080600080600060a0868803121561218c57600080fd5b853567ffffffffffffffff808211156121a457600080fd5b6121b089838a016120b4565b965060208801359150808211156121c657600080fd5b506121d3888289016120b4565b945050604086013592506121e96060870161208b565b949793965091946080013592915050565b6020808252825182820181905260009190848201906040850190845b8181101561223257835183529284019291840191600101612216565b50909695505050505050565b60008060008060008060c0878903121561225757600080fd5b863567ffffffffffffffff8082111561226f57600080fd5b61227b8a838b016120b4565b9750602089013591508082111561229157600080fd5b5061229e89828a016120b4565b95505060408701359350606087013592506122bb6080880161208b565b915060a087013590509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561233e5761233e6122fd565b500390565b60006020828403121561235557600080fd5b5051919050565b60008161236b5761236b6122fd565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b600082198211156123a4576123a46122fd565b500190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036123da576123da6122fd565b5060010190565b6000602082840312156123f357600080fd5b81518015158114611eb657600080fd5b6000825160005b81811015612424576020818601810151858301520161240a565b81811115612433576000828501525b50919091019291505056fea264697066735822122021aa32ea63e88fa7f9738af9d175cce7fd51b35b6669293a237d7240ed6decd364736f6c634300080d0033";

export class ThiefRouter__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _factory: string,
    _WETH: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ThiefRouter> {
    return super.deploy(
      _factory,
      _WETH,
      overrides || {}
    ) as Promise<ThiefRouter>;
  }
  getDeployTransaction(
    _factory: string,
    _WETH: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_factory, _WETH, overrides || {});
  }
  attach(address: string): ThiefRouter {
    return super.attach(address) as ThiefRouter;
  }
  connect(signer: Signer): ThiefRouter__factory {
    return super.connect(signer) as ThiefRouter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ThiefRouterInterface {
    return new utils.Interface(_abi) as ThiefRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ThiefRouter {
    return new Contract(address, _abi, signerOrProvider) as ThiefRouter;
  }
}
