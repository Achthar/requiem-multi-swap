/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FeeDistributor,
  FeeDistributorInterface,
} from "../FeeDistributor";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferFee",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getSwapConfig",
    outputs: [
      {
        internalType: "enum FeeDistributor.SwapPoolType",
        name: "poolType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "basePool",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "address",
        name: "_swapRouter",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "operators",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fromToken",
        type: "address",
      },
      {
        internalType: "enum FeeDistributor.SwapPoolType",
        name: "poolType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "basePool",
        type: "address",
      },
    ],
    name: "setSwapConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapRouter",
    outputs: [
      {
        internalType: "contract RequiemStableSwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "target",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
    ],
    name: "toggleOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "whiteListedTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61007a565b600080546001600160a01b038381166201000081810262010000600160b01b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b611568806100896000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80638119c0651161008c578063beabacc811610066578063beabacc8146101f6578063c31c9c0714610209578063d4b839921461021c578063f2fde38b1461022f57600080fd5b80638119c065146101c45780638da5cb5b146101cc578063a166a94d146101e357600080fd5b8063485cc955116100bd578063485cc9551461017e5780636aee0e6314610191578063715018a6146101bc57600080fd5b806313e7c9d8146100e45780633fe529f01461011c57806342b054f014610131575b600080fd5b6101076100f23660046112b6565b60036020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b61012f61012a3660046112b6565b610242565b005b61016f61013f3660046112b6565b6002602052600090815260409020805460019091015460ff8216916001600160a01b036101009091048116911683565b604051610113939291906112f0565b61012f61018c366004611330565b6102d1565b6101a461019f366004611369565b610433565b6040516001600160a01b039091168152602001610113565b61012f61045d565b61012f6104ca565b6000546201000090046001600160a01b03166101a4565b61012f6101f1366004611382565b61059b565b61012f6102043660046113e2565b61086d565b6004546101a4906001600160a01b031681565b6001546101a4906001600160a01b031681565b61012f61023d3660046112b6565b610a2f565b6000546001600160a01b03620100009091041633146102a85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b03166000908152600360205260409020805460ff19811660ff90911615179055565b6000546001600160a01b03620100009091041633146103325760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161029f565b600054610100900460ff168061034b575060005460ff16155b6103bd5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161029f565b600054610100900460ff161580156103df576000805461ffff19166101011790555b600180546001600160a01b0380861673ffffffffffffffffffffffffffffffffffffffff19928316179092556004805492851692909116919091179055801561042e576000805461ff00191690555b505050565b6005818154811061044357600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b03620100009091041633146104be5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161029f565b6104c86000610b11565b565b3360009081526003602052604090205460ff161515600114156104c85760005b6005548110156105985760006005828154811061050957610509611423565b60009182526020808320909101546001600160a01b031680835260029091526040822090925090815460ff166001811115610546576105466112da565b141561055b576105568183610b82565b610583565b6001815460ff166001811115610573576105736112da565b1415610583576105838183610dd4565b505080806105909061144f565b9150506104ea565b50565b6000546001600160a01b03620100009091041633146105fc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161029f565b6001600160a01b0384166106525760405162461bcd60e51b815260206004820152601460248201527f7a65726f46726f6d546f6b656e41646472657373000000000000000000000000604482015260640161029f565b6001600160a01b0382166106a85760405162461bcd60e51b815260206004820152600f60248201527f7a65726f506f6f6c416464726573730000000000000000000000000000000000604482015260640161029f565b60018360018111156106bc576106bc6112da565b1415610718576001600160a01b0381166107185760405162461bcd60e51b815260206004820152601360248201527f7a65726f42617365506f6f6c4164647265737300000000000000000000000000604482015260640161029f565b6001600160a01b0384811660009081526002602052604090205461010090041661079557600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386161790555b60405180606001604052808460018111156107b2576107b26112da565b81526001600160a01b03808516602080840191909152848216604093840152908716600090815260029091522081518154829060ff1916600183818111156107fc576107fc6112da565b0217905550602082015181547fffffffffffffffffffffff0000000000000000000000000000000000000000ff166101006001600160a01b03928316021782556040909201516001909101805473ffffffffffffffffffffffffffffffffffffffff19169190921617905550505050565b3360009081526003602052604090205460ff1615156001141561042e576040516370a0823160e01b81523060048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa1580156108d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f5919061146a565b9050818110610a29576109126001600160a01b0385168484611036565b6040516370a0823160e01b81523060048201526000906001600160a01b038616906370a0823190602401602060405180830381865afa158015610959573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097d919061146a565b90508261098a8284611483565b146109d75760405162461bcd60e51b815260206004820152600d60248201527f7472616e736665722d6661696c00000000000000000000000000000000000000604482015260640161029f565b604080513381526001600160a01b0386811660208301528716818301526060810185905290517f399b8b2d1a2cd048deba86f2732270178911b7def887b957d4e4530a5955e1249181900360800190a1505b50505050565b6000546001600160a01b0362010000909104163314610a905760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161029f565b6001600160a01b038116610b0c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161029f565b610598815b600080546001600160a01b03838116620100008181027fffffffffffffffffffff0000000000000000000000000000000000000000ffff851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b6040516370a0823160e01b815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610bcb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bef919061146a565b90508015610a295783546040516319b02f4960e21b81526001600160a01b0385811660048301526101009092049091169060009082906366c0bd2490602401602060405180830381865afa158015610c4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6f919061149a565b6001546040516319b02f4960e21b81526001600160a01b039182166004820152919250600091908416906366c0bd2490602401602060405180830381865afa158015610cbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce3919061149a565b8754909150610d04906001600160a01b0387811691610100900416866110df565b6001600160a01b03831663bfd3956b838387600030610d25610e10426114bd565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e089901b16815260ff9687166004820152959094166024860152604485019290925260648401526001600160a01b0316608483015260a482015260c4016020604051808303816000875af1158015610da6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dca919061146a565b5050505050505050565b6040516370a0823160e01b815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610e1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e41919061146a565b90508015610a2957835460018501546040516319b02f4960e21b81526001600160a01b0386811660048301526101009093048316929091169060009083906366c0bd2490602401602060405180830381865afa158015610ea5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec9919061149a565b6001546040516319b02f4960e21b81526001600160a01b039182166004820152919250600091908416906366c0bd2490602401602060405180830381865afa158015610f19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3d919061149a565b600454909150610f5a906001600160a01b038881169116876110df565b6004546001600160a01b031663ff969322858585858a6000610f7e610e10426114bd565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e08a901b1681526001600160a01b03978816600482015296909516602487015260ff9384166044870152929091166064850152608484015260a483015260c482015260e4016020604051808303816000875af1158015611007573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102b919061146a565b505050505050505050565b6040516001600160a01b03831660248201526044810182905261042e9084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526111c3565b6040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015611149573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116d919061146a565b61117791906114bd565b6040516001600160a01b038516602482015260448101829052909150610a299085907f095ea7b3000000000000000000000000000000000000000000000000000000009060640161107b565b600080836001600160a01b0316836040516111de91906114d5565b6000604051808303816000865af19150503d806000811461121b576040519150601f19603f3d011682016040523d82523d6000602084013e611220565b606091505b50915091506000821415611238573d6000803e3d6000fd5b805115806112555750808060200190518101906112559190611510565b610a295760405162461bcd60e51b815260206004820152601660248201527f534146455f45524332305f43414c4c5f4641494c454400000000000000000000604482015260640161029f565b6001600160a01b038116811461059857600080fd5b6000602082840312156112c857600080fd5b81356112d3816112a1565b9392505050565b634e487b7160e01b600052602160045260246000fd5b606081016002851061131257634e487b7160e01b600052602160045260246000fd5b9381526001600160a01b039283166020820152911660409091015290565b6000806040838503121561134357600080fd5b823561134e816112a1565b9150602083013561135e816112a1565b809150509250929050565b60006020828403121561137b57600080fd5b5035919050565b6000806000806080858703121561139857600080fd5b84356113a3816112a1565b93506020850135600281106113b757600080fd5b925060408501356113c7816112a1565b915060608501356113d7816112a1565b939692955090935050565b6000806000606084860312156113f757600080fd5b8335611402816112a1565b92506020840135611412816112a1565b929592945050506040919091013590565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561146357611463611439565b5060010190565b60006020828403121561147c57600080fd5b5051919050565b60008282101561149557611495611439565b500390565b6000602082840312156114ac57600080fd5b815160ff811681146112d357600080fd5b600082198211156114d0576114d0611439565b500190565b6000825160005b818110156114f657602081860181015185830152016114dc565b81811115611505576000828501525b509190910192915050565b60006020828403121561152257600080fd5b815180151581146112d357600080fdfea2646970667358221220c0494b6aeabb8c1b300d6b12b545240c05d6861fd0b156f1f4d511ff8eac256e64736f6c634300080c0033";

export class FeeDistributor__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FeeDistributor> {
    return super.deploy(overrides || {}) as Promise<FeeDistributor>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FeeDistributor {
    return super.attach(address) as FeeDistributor;
  }
  connect(signer: Signer): FeeDistributor__factory {
    return super.connect(signer) as FeeDistributor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeDistributorInterface {
    return new utils.Interface(_abi) as FeeDistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeeDistributor {
    return new Contract(address, _abi, signerOrProvider) as FeeDistributor;
  }
}
