/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockInternalBalanceRelayer,
  MockInternalBalanceRelayerInterface,
} from "../MockInternalBalanceRelayer";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVault",
        name: "_vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "sender",
        type: "address",
      },
      {
        internalType: "contract IAsset",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "depositAmounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "withdrawAmounts",
        type: "uint256[]",
      },
    ],
    name: "depositAndWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516105e33803806105e383398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610550806100936000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80637b58efc11461003b578063fbfa77cf14610050575b600080fd5b61004e6100493660046103a1565b61007f565b005b600054610063906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61008b825182516101bc565b60005b82518110156101b55760006100bf600087878786815181106100b2576100b261042a565b602002602001015161020b565b6000546040516303a38fa160e21b81529192506001600160a01b031690630e8e3e84906100f0908490600401610456565b600060405180830381600087803b15801561010a57600080fd5b505af115801561011e573d6000803e3d6000fd5b50505050600061013d600188888787815181106100b2576100b261042a565b6000546040516303a38fa160e21b81529192506001600160a01b031690630e8e3e849061016e908490600401610456565b600060405180830381600087803b15801561018857600080fd5b505af115801561019c573d6000803e3d6000fd5b50505050505080806101ad906104f1565b91505061008e565b5050505050565b8082146102075760405162461bcd60e51b81526020600482015260156024820152740929ca0aaa8be988a9c8ea890be9a92a69a82a8869605b1b604482015260640160405180910390fd5b5050565b604080516001808252818301909252606091816020015b6040805160a0810182526000808252602080830182905292820181905260608201819052608082015282526000199092019101816102225790505090506040518060a0016040528086600381111561027c5761027c610440565b8152602001846001600160a01b03168152602001838152602001856001600160a01b03168152602001856001600160a01b0316815250816000815181106102c5576102c561042a565b6020026020010181905250949350505050565b6001600160a01b03811681146102ed57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261031757600080fd5b8135602067ffffffffffffffff80831115610334576103346102f0565b8260051b604051601f19603f83011681018181108482111715610359576103596102f0565b60405293845285810183019383810192508785111561037757600080fd5b83870191505b848210156103965781358352918301919083019061037d565b979650505050505050565b600080600080608085870312156103b757600080fd5b84356103c2816102d8565b935060208501356103d2816102d8565b9250604085013567ffffffffffffffff808211156103ef57600080fd5b6103fb88838901610306565b9350606087013591508082111561041157600080fd5b5061041e87828801610306565b91505092959194509250565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b60208082528251828201819052600091906040908185019086840185805b838110156104e35782518051600480821061049c57634e487b7160e01b855260218152602485fd5b508652808801516001600160a01b03908116898801528782015188880152606080830151821690880152608091820151169086015260a09094019391860191600101610474565b509298975050505050505050565b600060001982141561051357634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122032053c944f02f51e15e44e7fb4984aca75dc1008063f28993eb7ee2e6250a52e64736f6c63430008090033";

export class MockInternalBalanceRelayer__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _vault: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockInternalBalanceRelayer> {
    return super.deploy(
      _vault,
      overrides || {}
    ) as Promise<MockInternalBalanceRelayer>;
  }
  getDeployTransaction(
    _vault: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_vault, overrides || {});
  }
  attach(address: string): MockInternalBalanceRelayer {
    return super.attach(address) as MockInternalBalanceRelayer;
  }
  connect(signer: Signer): MockInternalBalanceRelayer__factory {
    return super.connect(signer) as MockInternalBalanceRelayer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockInternalBalanceRelayerInterface {
    return new utils.Interface(_abi) as MockInternalBalanceRelayerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockInternalBalanceRelayer {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockInternalBalanceRelayer;
  }
}
