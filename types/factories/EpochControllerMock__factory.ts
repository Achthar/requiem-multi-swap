/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EpochControllerMock,
  EpochControllerMockInterface,
} from "../EpochControllerMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "allocateSeigniorage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "epoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastEpochTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nextEpochAllocatedReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "nextEpochLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "nextEpochPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "resetEpochTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lastEpochTime",
        type: "uint256",
      },
    ],
    name: "updateEpochTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805534801561001457600080fd5b506040516105ae3803806105ae83398101604081905261003391610058565b600180546001600160a01b0319166001600160a01b0392909216919091179055610088565b60006020828403121561006a57600080fd5b81516001600160a01b038116811461008157600080fd5b9392505050565b610517806100976000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80638bd3cb5611610076578063c5967c261161005b578063c5967c2614610102578063f5ece52c1461010a578063f7c618c11461011d57600080fd5b80638bd3cb56146100f1578063900cf0cf146100fa57600080fd5b806307284ce9146100a857806322e6eabd146100bf5780637effa5b6146100d457806389c614b8146100e8575b600080fd5b61a8c05b6040519081526020015b60405180910390f35b6100d26100cd366004610419565b610162565b005b6100ac6100e2366004610445565b50600090565b6100ac60025481565b6100d242600255565b6000546100ac565b6100ac6103d9565b6100d2610118366004610467565b600255565b60015461013d9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100b6565b600054610170906001610480565b600055426002556001546040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810184905273ffffffffffffffffffffffffffffffffffffffff909116906323b872dd906064016020604051808303816000875af11580156101f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021891906104bf565b506001546040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8381166004830152600060248301529091169063095ea7b3906044016020604051808303816000875af1158015610292573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b691906104bf565b506001546040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8381166004830152602482018590529091169063095ea7b3906044016020604051808303816000875af1158015610330573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035491906104bf565b506040517fe2dcb6160000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff82169063e2dcb61690602401600060405180830381600087803b1580156103bd57600080fd5b505af11580156103d1573d6000803e3d6000fd5b505050505050565b600061a8c06002546103eb9190610480565b905090565b803573ffffffffffffffffffffffffffffffffffffffff8116811461041457600080fd5b919050565b6000806040838503121561042c57600080fd5b8235915061043c602084016103f0565b90509250929050565b60006020828403121561045757600080fd5b610460826103f0565b9392505050565b60006020828403121561047957600080fd5b5035919050565b600082198211156104ba577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b6000602082840312156104d157600080fd5b8151801515811461046057600080fdfea2646970667358221220df52ce7433b5530f579c81c14a40c577b347f058311155e5f7c5d91dd3caaae064736f6c634300080b0033";

export class EpochControllerMock__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _rewardToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EpochControllerMock> {
    return super.deploy(
      _rewardToken,
      overrides || {}
    ) as Promise<EpochControllerMock>;
  }
  getDeployTransaction(
    _rewardToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_rewardToken, overrides || {});
  }
  attach(address: string): EpochControllerMock {
    return super.attach(address) as EpochControllerMock;
  }
  connect(signer: Signer): EpochControllerMock__factory {
    return super.connect(signer) as EpochControllerMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EpochControllerMockInterface {
    return new utils.Interface(_abi) as EpochControllerMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EpochControllerMock {
    return new Contract(address, _abi, signerOrProvider) as EpochControllerMock;
  }
}
