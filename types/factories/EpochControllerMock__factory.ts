/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EpochControllerMock,
  EpochControllerMockInterface,
} from "../EpochControllerMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "allocateSeigniorage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "epoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastEpochTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "nextEpochAllocatedReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextEpochLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextEpochPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "resetEpochTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lastEpochTime",
        type: "uint256",
      },
    ],
    name: "updateEpochTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805534801561001457600080fd5b506040516104cc3803806104cc83398101604081905261003391610058565b600180546001600160a01b0319166001600160a01b0392909216919091179055610088565b60006020828403121561006a57600080fd5b81516001600160a01b038116811461008157600080fd5b9392505050565b610435806100976000396000f3fe608060405234801561001057600080fd5b50600436106100835760003560e01c806307284ce91461008857806322e6eabd1461009f5780637effa5b6146100b457806389c614b8146100c85780638bd3cb56146100d1578063900cf0cf146100da578063c5967c26146100e2578063f5ece52c146100ea578063f7c618c1146100fd575b600080fd5b61a8c05b6040519081526020015b60405180910390f35b6100b26100ad366004610337565b610128565b005b61008c6100c2366004610363565b50600090565b61008c60025481565b6100b242600255565b60005461008c565b61008c610304565b6100b26100f8366004610385565b600255565b600154610110906001600160a01b031681565b6040516001600160a01b039091168152602001610096565b60005461013690600161039e565b600055426002556001546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610194573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b891906103c4565b5060015460405163095ea7b360e01b81526001600160a01b039091169063095ea7b3906101ec9084906000906004016103e6565b6020604051808303816000875af115801561020b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022f91906103c4565b5060015460405163095ea7b360e01b81526001600160a01b039091169063095ea7b39061026290849086906004016103e6565b6020604051808303816000875af1158015610281573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a591906103c4565b5060405163716e5b0b60e11b8152600481018390526001600160a01b0382169063e2dcb61690602401600060405180830381600087803b1580156102e857600080fd5b505af11580156102fc573d6000803e3d6000fd5b505050505050565b600061a8c0600254610316919061039e565b905090565b80356001600160a01b038116811461033257600080fd5b919050565b6000806040838503121561034a57600080fd5b8235915061035a6020840161031b565b90509250929050565b60006020828403121561037557600080fd5b61037e8261031b565b9392505050565b60006020828403121561039757600080fd5b5035919050565b600082198211156103bf57634e487b7160e01b600052601160045260246000fd5b500190565b6000602082840312156103d657600080fd5b8151801515811461037e57600080fd5b6001600160a01b0392909216825260208201526040019056fea26469706673582212209198246cd601ee0f39a8c617b75bfe080f6dad324444e27fc6b143cb694946fd64736f6c634300080a0033";

export class EpochControllerMock__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _rewardToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EpochControllerMock> {
    return super.deploy(
      _rewardToken,
      overrides || {}
    ) as Promise<EpochControllerMock>;
  }
  getDeployTransaction(
    _rewardToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_rewardToken, overrides || {});
  }
  attach(address: string): EpochControllerMock {
    return super.attach(address) as EpochControllerMock;
  }
  connect(signer: Signer): EpochControllerMock__factory {
    return super.connect(signer) as EpochControllerMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EpochControllerMockInterface {
    return new utils.Interface(_abi) as EpochControllerMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EpochControllerMock {
    return new Contract(address, _abi, signerOrProvider) as EpochControllerMock;
  }
}
