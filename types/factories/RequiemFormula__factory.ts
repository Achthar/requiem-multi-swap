/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RequiemFormula,
  RequiemFormulaInterface,
} from "../RequiemFormula";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reserve0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserve1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance0Adjusted",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance1Adjusted",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
    ],
    name: "ensureConstantValue",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveOut",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightIn",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightOut",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    name: "getAmountIn",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveOut",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightIn",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightOut",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    name: "getAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getFactoryAmountsIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getFactoryAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    name: "getFactoryReserveAndWeights",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightA",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightB",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "getFactoryWeightsAndSwapFee",
    outputs: [
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    name: "getOtherToken",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "getPairAmountIn",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "getPairAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    name: "getReserveAndWeights",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightA",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightB",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "getWeightsAndSwapFee",
    outputs: [
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalLiquidity",
        type: "uint256",
      },
      {
        internalType: "uint112",
        name: "reserve0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "reserve1",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint112",
        name: "collectedFee0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "collectedFee1",
        type: "uint112",
      },
    ],
    name: "mintLiquidityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    name: "quote",
    outputs: [
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "sortTokens",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061073f6001641c35fedd1560601b036020556001646c3390ecc9605e1b036021556001640cf801476160611b0360225560016431bdb23e1d605f1b0360235560016502fb1d8fe083605b1b0360245560016505b771955b37605a1b036025556001650af67a93bb5160591b0360265560016515060c256cb360581b036027556001651428a2f98d7360581b036028556001654d515663970960561b03602955600165944620b0e70f60551b03602a55600166011c592761c66760541b03602b5560016602214d10d014eb60531b03602c55600166020ade36b7dbef60531b03602d5560016603eab73b3bbfe360521b03602e556001660782ee3593f6d760511b03602f556001661ccf4b44bb4821604f1b0360305560016606e7f88ad8a77760511b0360315560016669f3d1c921891d604d1b03603255600166cb2ff529eb71e5604c1b03603355600166c2d415c3db974b604c1b0360345560016702eb40f9f620fda7604a1b0360355560016705990681d961a1eb60491b03603655600167055e12902701414760491b0360375560016714962dee9dc9764160471b0360385560016704ef57b9b560fab560491b0360395560016712ed7b32a58f552b60471b03603a556001679131271922eaa60760441b03603b556001678b380f3558668c4760441b03603c556001680215f77c045fbe885760421b03603d556001600160831b03603e556001670f577eded5773a1160471b03603f556001680eb5ec597592befbf5603f1b036040556001681c35fedd14b861eb05603e1b036041556001683619c87664579bc94b603d1b0360425560016867c00a3b07ffc01fd7603c1b03604355600168c6f6c8f8739773a7a5603b1b03604455600168bec763f8209b7a72b1603b1b0360455560016902dbb8caad9b7097b91b60391b03604655600169057b3d49dda84556d6f760381b03604755600169054183095b2c8ececf3160381b036048556001690a14517cc6b9457111ef60371b0360495560016913545598e5c23276ccf160361b03604a556001692511882c39c3adea96ff60351b03604b55600169471649d87199aa99075760341b03604c557004429a21a029d4c1457cfbffffffffffff604d55700415bc6d6fb7dd71af2cb3ffffffffffff604e557003eab73b3bbfe282243ce1ffffffffffff604f557003c1771ac9fb6b4c18e229ffffffffffff605055700399e96897690418f785257fffffffffff605155700373fc456c53bb779bf0ea9fffffffffff60525570034f9e8e490c48e67e6ab8bfffffffffff60535570032cbfd4a7adc790560b3337ffffffffff60545570030b50570f6e5d2acca94613ffffffffff6055557002eb40f9f620fda6b56c2861ffffffffff6056557002cc8340ecb0d0f520a6af58ffffffffff6057557002af09481380a0a35cf1ba02ffffffffff605855700292c5bdd3b92ec810287b1b3fffffffff605955700277abdcdab07d5a77ac6d6b9fffffffff605a5570025daf6654b1eaa55fd64df5efffffffff605b55700244c49c648baa98192dce88b7ffffffff605c5570022ce03cd5619a311b2471268bffffffff605d55700215f77c045fbe885654a44a0fffffffff605e556001600160811b03605f557001eaefdbdaaee7421fc4d3ede5ffffffff6060557001d6bd8b2eb257df7e8ca57b09bfffffff6061557001c35fedd14b861eb0443f7f133fffffff6062557001b0ce43b322bcde4a56e8ada5afffffff60635570019f0028ec1fff007f5a195a39dfffffff60645570018ded91f0e72ee74f49b15ba527ffffff60655570017d8ec7f04136f4e5615fd41a63ffffff60665570016ddc6556cdb84bdc8d12d22e6fffffff60675570015ecf52776a1155b5bd8395814f7fffff60685570015060c256cb23b3b3cc3754cf40ffffff6069557001428a2f98d728ae223ddab715be3fffff606a5570013545598e5c23276ccf0ede68034fffff606b557001288c4161ce1d6f54b7f61081194fffff606c5570011c592761c666aa641d5a01a40f17ffff606d55700110a688680a7530515f3e6e6cfdcdffff606e557001056f1b5bedf75c6bcb2ce8aed428ffff606f556ffaadceceeff8a0890f3875f008277fff6070556ff05dc6b27edad306388a600f6ba0bfff6071556fe67a5a25da41063de1495d5b18cdbfff6072556fdcff115b14eedde6fc3aa5353f2e4fff6073556fd3e7a3924312399f9aae2e0f868f8fff6074556fcb2ff529eb71e41582cccd5a1ee26fff6075556fc2d415c3db974ab32a51840c0b67edff6076556fbad03e7d883f69ad5b0a186184e06bff6077556fb320d03b2c343d4829abd6075f0cc5ff6078556fabc25204e02828d73c6e80bcdb1a95bf6079556fa4b16f74ee4bb2040a1ec6c15fbbf2df607a556f9deaf736ac1f569deb1b5ae3f36c130f607b556f976bd9952c7aa957f5937d790ef65037607c556f9131271922eaa6064b73a22d0bd4f2bf607d556f8b380f3558668c46c91c49a2f8e967b9607e556f857ddf0117efa215952912839f6473e6607f55565b6138c58061074e6000396000f3fe608060405234801561001057600080fd5b50600436106100e65760003560e01c8063119220a5146100eb5780632bb66e1d14610114578063327494611461014e578063544caa56146101765780635bff1d92146101a95780636350d774146101ff578063671a11b51461022057806367f84adc1461023357806379c91b37146102465780638888a737146102695780638fabd82d1461027c57806392aec23c1461028f578063ad615dec146102a2578063b19210b0146102b5578063b33d96b0146102c8578063b3923a99146102db578063ca222979146102ee578063d691093714610301575b600080fd5b6100fe6100f9366004612fd1565b610321565b60405161010b9190613055565b60405180910390f35b610127610122366004613099565b6104b0565b6040805163ffffffff9485168152928416602084015292169181019190915260600161010b565b61016161015c3660046130d2565b61052f565b6040805192835260208301919091520161010b565b610189610184366004613099565b610732565b604080516001600160a01b0393841681529290911660208301520161010b565b6101bc6101b7366004613099565b610827565b604080516001600160a01b03909716875260208701959095529385019290925263ffffffff908116606085015290811660808401521660a082015260c00161010b565b61021261020d36600461311d565b610ace565b60405190815260200161010b565b61021261022e366004613170565b610b07565b6100fe610241366004612fd1565b610c73565b6102596102543660046131d7565b610de4565b604051901515815260200161010b565b61021261027736600461311d565b610f09565b6100fe61028a366004613224565b610f35565b61021261029d3660046132ab565b6110a7565b6102126102b0366004613338565b61118a565b6102126102c3366004613170565b611230565b6101bc6102d63660046130d2565b6113b2565b6100fe6102e9366004613224565b611640565b6101276102fc366004613364565b61179e565b61031461030f366004613099565b6118f9565b60405161010b9190613381565b6060816103495760405162461bcd60e51b815260040161034090613395565b60405180910390fd5b6103548260016133e1565b6001600160401b0381111561036b5761036b6133f9565b604051908082528060200260200182016040528015610394578160200160208202803683370190505b50905083816000815181106103ab576103ab61340f565b60209081029190910101528560005b83811015610473576000806000806000806103fc8f8c8c8a8181106103e1576103e161340f565b90506020020160208101906103f69190613364565b8a6113b2565b95509550955095509550955061042f89888151811061041d5761041d61340f565b60200260200101518686868686610b07565b8961043b8960016133e1565b8151811061044b5761044b61340f565b602002602001018181525050859750505050505050808061046b90613425565b9150506103ba565b50856001600160a01b0316816001600160a01b0316146104a55760405162461bcd60e51b815260040161034090613440565b509695505050505050565b6000806000846001600160a01b031663ca222979856040518263ffffffff1660e01b81526004016104e19190613381565b606060405180830381865afa1580156104fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105229190613486565b9250925092509250925092565b60008060008061053f8686610732565b91509150600080886001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610584573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a891906134c8565b506001600160701b031691506001600160701b03169150886001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062191906134f9565b6001600160a01b0316846001600160a01b03161480156106b35750886001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561067a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069e91906134f9565b6001600160a01b0316836001600160a01b0316145b6106ff5760405162461bcd60e51b815260206004820152601d60248201527f5265717569656d466f726d756c613a20496e76616c696420746f6b656e0000006044820152606401610340565b836001600160a01b0316886001600160a01b03161461071f578082610722565b81815b909a909950975050505050505050565b600080826001600160a01b0316846001600160a01b031614156107a35760405162461bcd60e51b815260206004820152602360248201527f5265717569656d466f726d756c613a204944454e544943414c5f41444452455360448201526253455360e81b6064820152608401610340565b826001600160a01b0316846001600160a01b0316106107c35782846107c6565b83835b90925090506001600160a01b0382166108205760405162461bcd60e51b815260206004820152601c60248201527b5265717569656d466f726d756c613a205a45524f5f4144445245535360201b6044820152606401610340565b9250929050565b600080600080600080600080896001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610871573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089591906134c8565b506001600160701b031691506001600160701b031691506000806108b88c61179e565b8097508193508294505050508b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610902573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092691906134f9565b6001600160a01b03168b6001600160a01b031614156109b6578b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561097d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a191906134f9565b99509297509095509350915084848484610ac0565b8b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1891906134f9565b6001600160a01b03168b6001600160a01b03161415610aa8578b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9391906134f9565b99509197509195509350915083858385610ac0565b60405162461bcd60e51b815260040161034090613516565b505050509295509295509295565b600080600080600080610ae18989610827565b9550955095509550955050610afa878587858786611230565b9998505050505050505050565b6000808711610b6a5760405162461bcd60e51b815260206004820152602960248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f494e50604482015268155517d05353d5539560ba1b6064820152608401610340565b600086118015610b7a5750600085115b610b965760405162461bcd60e51b81526004016103409061354d565b6000610ba483612710613593565b610bb49063ffffffff16896135b8565b90508363ffffffff168563ffffffff161415610bfd5780610bd7886127106135b8565b610be191906133e1565b610beb82886135b8565b610bf591906135ed565b915050610c69565b6000808083610c0e8b6127106135b8565b610c1891906133e1565b9050610c3181610c2a8c6127106135b8565b8a8a611a32565b90935091506000610c42848b6135b8565b905060ff83168a901b84610c568284613601565b610c6091906135ed565b96505050505050505b9695505050505050565b606081610c925760405162461bcd60e51b815260040161034090613395565b610c9d8260016133e1565b6001600160401b03811115610cb457610cb46133f9565b604051908082528060200260200182016040528015610cdd578160200160208202803683370190505b509050838160018351610cf09190613601565b81518110610d0057610d0061340f565b602090810291909101015284825b8015610db25760008080808080610d3b8f8c8c610d2c60018c613601565b8181106103e1576103e161340f565b955095509550955095509550610d6e898881518110610d5c57610d5c61340f565b60200260200101518587858786611230565b89610d7a60018a613601565b81518110610d8a57610d8a61340f565b6020026020010181815250508597505050505050508080610daa90613618565b915050610d0e565b50866001600160a01b0316816001600160a01b0316146104a55760405162461bcd60e51b81526004016103409061362f565b60008163ffffffff1660321415610e1257610dff85876135b8565b610e0984866135b8565b10159050610f00565b858410158015610e225750848310155b15610e2f57506001610f00565b858411158015610e3f5750848311155b15610e4c57506000610f00565b816000610e5a826064613593565b90506000806000808b8a10610e9857610e768b8a876032611a32565b90945060ff169250610e8b8a8d886032611a32565b90925060ff169050610ec3565b610ea58c8b886032611a32565b90945060ff169250610eba898c876032611a32565b90925060ff1690505b6000818410610ed25781610ed4565b835b9050610ee08185613601565b9350610eec8183613601565b9290921c9390921c92909211159450505050505b95945050505050565b600080600080600080610f1c8989610827565b9550955095509550955050610afa878686868686610b07565b606081610f545760405162461bcd60e51b815260040161034090613395565b610f5f8260016133e1565b6001600160401b03811115610f7657610f766133f9565b604051908082528060200260200182016040528015610f9f578160200160208202803683370190505b5090508381600081518110610fb657610fb661340f565b60209081029190910101528560005b8381101561106b576000806000806000806110068b8b89818110610feb57610feb61340f565b90506020020160208101906110009190613364565b89610827565b95509550955095509550955061102789888151811061041d5761041d61340f565b896110338960016133e1565b815181106110435761104361340f565b602002602001018181525050859750505050505050808061106390613425565b915050610fc5565b50856001600160a01b0316816001600160a01b03161461109d5760405162461bcd60e51b815260040161034090613440565b5095945050505050565b60006001600160701b03831615611114576000806110e66110d46001600160701b03808c169088166133e1565b8a6001600160701b0316896064611a32565b90925060ff16905089816110fa84836135b8565b611105911c856133e1565b61110f9190613601565b925050505b6001600160701b0382161561117f5760008061115161113f6001600160701b03808b169087166133e1565b896001600160701b0316886064611a32565b90925060ff169050898161116584836135b8565b611170911c856133e1565b61117a9190613601565b925050505b979650505050505050565b60008084116111e75760405162461bcd60e51b815260206004820152602360248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f414d4f60448201526215539560ea1b6064820152608401610340565b6000831180156111f75750600082115b6112135760405162461bcd60e51b81526004016103409061354d565b8261121e83866135b8565b61122891906135ed565b949350505050565b60008087116112945760405162461bcd60e51b815260206004820152602a60248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f4f555460448201526914155517d05353d5539560b21b6064820152608401610340565b6000861180156112a45750600085115b6112c05760405162461bcd60e51b81526004016103409061354d565b8263ffffffff168463ffffffff1614156113365760006112e088886135b8565b6112ec906127106135b8565b905060006112fc84612710613593565b63ffffffff1661130c8a89613601565b61131691906135b8565b905061132281836135ed565b61132d9060016133e1565b92505050610c69565b600080806113448a89613601565b90506113528882888a611a32565b909350915060006113658a6127106135b8565b9050600061137385836135b8565b905060ff841682901b61138888612710613593565b63ffffffff1660ff861661139c8385613601565b6113a792911c6135ed565b610c609060016133e1565b600080600080600080600080896001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156113fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142091906134c8565b506001600160701b031691506001600160701b031691506000806114448d8d6104b0565b8097508193508294505050508b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561148e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b291906134f9565b6001600160a01b03168b6001600160a01b03161415611542578b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611509573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152d91906134f9565b99509297509095509350915084848484611630565b8b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611580573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115a491906134f9565b6001600160a01b03168b6001600160a01b03161415610aa8578b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161f91906134f9565b995091975091955093509150838583855b5050505093975093979195509350565b60608161165f5760405162461bcd60e51b815260040161034090613395565b61166a8260016133e1565b6001600160401b03811115611681576116816133f9565b6040519080825280602002602001820160405280156116aa578160200160208202803683370190505b5090508381600183516116bd9190613601565b815181106116cd576116cd61340f565b602090810291909101015284825b801561176c57600080808080806117078b8b6116f860018b613601565b818110610feb57610feb61340f565b955095509550955095509550611728898881518110610d5c57610d5c61340f565b8961173460018a613601565b815181106117445761174461340f565b602002602001018181525050859750505050505050808061176490613618565b9150506116db565b50866001600160a01b0316816001600160a01b03161461109d5760405162461bcd60e51b81526004016103409061362f565b6000806000836001600160a01b03166332bfe4696040518163ffffffff1660e01b81526004016040805180830381865afa9250505080156117fc575060408051601f3d908101601f191682019092526117f991810190613674565b60015b611885576118086136a3565b806308c379a01415611842575061181d6136f9565b806118285750611844565b8060405162461bcd60e51b81526004016103409190613782565b505b3d80801561186e576040519150601f19603f3d011682016040523d82523d6000602084013e611873565b606091505b50603280601e935093509350506118f2565b8181876001600160a01b031663d4cadf686040518163ffffffff1660e01b8152600401602060405180830381865afa1580156118c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e991906137d7565b94509450945050505b9193909250565b600080836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561193a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061195e91906134f9565b90506000846001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156119a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119c491906134f9565b9050836001600160a01b0316826001600160a01b031614806119f75750836001600160a01b0316816001600160a01b0316145b611a135760405162461bcd60e51b815260040161034090613516565b836001600160a01b0316826001600160a01b0316146112285781610f00565b60008084861015611a835760405162461bcd60e51b815260206004820152601b60248201527a1b9bdd081cdd5c1c1bdc9d0817d8985cd953880f0817d8985cd951602a1b6044820152606401610340565b600160811b8610611a9357600080fd5b60008086611aa56001607f1b8a6135b8565b611aaf91906135ed565b905070015bf0a8b1457695355fb8ac404e7a79e3811015611ada57611ad381611b6d565b9150611ae6565b611ae3816120dc565b91505b60008563ffffffff168763ffffffff1684611b0191906135b8565b611b0b91906135ed565b9050600160831b811015611b3057611b22816121d1565b607f94509450505050611b64565b6000611b3b826127fc565b9050611b57611b4b82607f6137f4565b60ff1683901c826128af565b95509350611b6492505050565b94509492505050565b6000808080806fd3094c70f034de4b96ff7d5b6f99fcd88610611bc657611b986001607e1b856133e1565b93506fd3094c70f034de4b96ff7d5b6f99fcd8611bb96001607f1b886135b8565b611bc391906135ed565b95505b6fa45af1e1f40c333b3de1db4dd55f29a78610611c1957611beb6001607d1b856133e1565b93506fa45af1e1f40c333b3de1db4dd55f29a7611c0c6001607f1b886135b8565b611c1691906135ed565b95505b6f910b022db7ae67ce76b441c27035c6a18610611c6c57611c3e6001607c1b856133e1565b93506f910b022db7ae67ce76b441c27035c6a1611c5f6001607f1b886135b8565b611c6991906135ed565b95505b6f88415abbe9a76bead8d00cf112e4d4a88610611cbf57611c916001607b1b856133e1565b93506f88415abbe9a76bead8d00cf112e4d4a8611cb26001607f1b886135b8565b611cbc91906135ed565b95505b6f84102b00893f64c705e841d5d4064bd38610611d1257611ce46001607a1b856133e1565b93506f84102b00893f64c705e841d5d4064bd3611d056001607f1b886135b8565b611d0f91906135ed565b95505b6f8204055aaef1c8bd5c3259f4822735a28610611d6557611d37600160791b856133e1565b93506f8204055aaef1c8bd5c3259f4822735a2611d586001607f1b886135b8565b611d6291906135ed565b95505b6f810100ab00222d861931c15e39b44e998610611db857611d8a600160781b856133e1565b93506f810100ab00222d861931c15e39b44e99611dab6001607f1b886135b8565b611db591906135ed565b95505b6f808040155aabbbe9451521693554f7338610611e0b57611ddd600160771b856133e1565b93506f808040155aabbbe9451521693554f733611dfe6001607f1b886135b8565b611e0891906135ed565b95505b611e196001607f1b87613601565b92508291506001607f1b611e2d83806135b8565b611e3791906135ed565b9050600160801b611e488482613601565b611e5290846135b8565b611e5c91906135ed565b611e6690856133e1565b93506001607f1b611e7782846135b8565b611e8191906135ed565b9150600160811b611ea2846faaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa613601565b611eac90846135b8565b611eb691906135ed565b611ec090856133e1565b93506001607f1b611ed182846135b8565b611edb91906135ed565b9150600360801b611efc846f99999999999999999999999999999999613601565b611f0690846135b8565b611f1091906135ed565b611f1a90856133e1565b93506001607f1b611f2b82846135b8565b611f3591906135ed565b9150600160821b611f56846f92492492492492492492492492492492613601565b611f6090846135b8565b611f6a91906135ed565b611f7490856133e1565b93506001607f1b611f8582846135b8565b611f8f91906135ed565b9150600560801b611fb0846f8e38e38e38e38e38e38e38e38e38e38e613601565b611fba90846135b8565b611fc491906135ed565b611fce90856133e1565b93506001607f1b611fdf82846135b8565b611fe991906135ed565b9150600360811b61200a846f8ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b613601565b61201490846135b8565b61201e91906135ed565b61202890856133e1565b93506001607f1b61203982846135b8565b61204391906135ed565b9150600760801b612064846f89d89d89d89d89d89d89d89d89d89d89613601565b61206e90846135b8565b61207891906135ed565b61208290856133e1565b93506001607f1b61209382846135b8565b61209d91906135ed565b9150600160831b6120be846f88888888888888888888888888888888613601565b6120c890846135b8565b6120d291906135ed565b610c6990856133e1565b600080600160801b83106121205760006121026120fd6001607f1b866135ed565b612f08565b60ff811694851c9490915061211c906001607f1b906135b8565b9150505b6001607f1b83111561219557607f5b60ff811615612193576001607f1b61214785806135b8565b61215191906135ed565b9350600160801b841061218357600193841c9361216e90826137f4565b60ff166001901b8261218091906133e1565b91505b61218c81613817565b905061212f565b505b6f05b9de1d10bf4103d647b0955897ba806121c06f03f80fe03f80fe03f80fe03f80fe03f8836135b8565b6121ca91906135ed565b9392505050565b60008080806121e46001607c1b86613834565b91508190506001607f1b6121f882806135b8565b61220291906135ed565b9050612216816710e1b3be415a00006135b8565b61222090846133e1565b92506001607f1b61223183836135b8565b61223b91906135ed565b905061224f816705a0913f6b1e00006135b8565b61225990846133e1565b92506001607f1b61226a83836135b8565b61227491906135ed565b905061228881670168244fdac780006135b8565b61229290846133e1565b92506001607f1b6122a383836135b8565b6122ad91906135ed565b90506122c081664807432bc180006135b8565b6122ca90846133e1565b92506001607f1b6122db83836135b8565b6122e591906135ed565b90506122f881660c0135dca040006135b8565b61230290846133e1565b92506001607f1b61231383836135b8565b61231d91906135ed565b9050612330816601b707b1cdc0006135b8565b61233a90846133e1565b92506001607f1b61234b83836135b8565b61235591906135ed565b9050612367816536e0f639b8006135b8565b61237190846133e1565b92506001607f1b61238283836135b8565b61238c91906135ed565b905061239e81650618fee9f8006135b8565b6123a890846133e1565b92506001607f1b6123b983836135b8565b6123c391906135ed565b90506123d481649c197dcc006135b8565b6123de90846133e1565b92506001607f1b6123ef83836135b8565b6123f991906135ed565b905061240a81640e30dce4006135b8565b61241490846133e1565b92506001607f1b61242583836135b8565b61242f91906135ed565b90506124408164012ebd13006135b8565b61244a90846133e1565b92506001607f1b61245b83836135b8565b61246591906135ed565b9050612475816317499f006135b8565b61247f90846133e1565b92506001607f1b61249083836135b8565b61249a91906135ed565b90506124aa816301a9d4806135b8565b6124b490846133e1565b92506001607f1b6124c583836135b8565b6124cf91906135ed565b90506124de81621c63806135b8565b6124e890846133e1565b92506001607f1b6124f983836135b8565b61250391906135ed565b9050612512816201c6386135b8565b61251c90846133e1565b92506001607f1b61252d83836135b8565b61253791906135ed565b905061254581611ab86135b8565b61254f90846133e1565b92506001607f1b61256083836135b8565b61256a91906135ed565b90506125788161017c6135b8565b61258290846133e1565b92506001607f1b61259383836135b8565b61259d91906135ed565b90506125aa8160146135b8565b6125b490846133e1565b92506001607f1b6125c583836135b8565b6125cf91906135ed565b90506125dc8160016135b8565b6125e690846133e1565b92506001607f1b826126006721c3677c82b40000866135ed565b61260a91906133e1565b61261491906133e1565b92506001607c1b85161561265c5770018ebef9eac820ae8682b9793ac6d1e77661264f847001c3d6a24ed82218787d624d3e5eba95f96135b8565b61265991906135ed565b92505b6001607d1b8516156126a2577001368b2fc6f9609fe7aceb46aa619baed46126958470018ebef9eac820ae8682b9793ac6d1e7786135b8565b61269f91906135ed565b92505b6001607e1b8516156126e7576fbc5ab1b16779be3575bd8f0520a9f21f6126da847001368b2fc6f9609fe7aceb46aa619baed56135b8565b6126e491906135ed565b92505b6001607f1b85161561272b576f454aaa8efe072e7f6ddbab84b40a55c961271e846fbc5ab1b16779be3575bd8f0520a9f21e6135b8565b61272891906135ed565b92505b600160801b85161561276f576f0960aadc109e7a3bf4578099615711ea612762846f454aaa8efe072e7f6ddbab84b40a55c56135b8565b61276c91906135ed565b92505b600160811b8516156127b2576e2bf84208204f5977f9a8cf01fdce3d6127a5846f0960aadc109e7a3bf4578099615711d76135b8565b6127af91906135ed565b92505b600160821b8516156127f3576d03c6ab775dd0b95b4cbee7e65d116127e6846e2bf84208204f5977f9a8cf01fdc3076135b8565b6127f091906135ed565b92505b50909392505050565b60006020607f5b60ff8116612812836001613848565b60ff16101561286557600060026128298385613848565b612833919061386d565b90508460008260ff166080811061284c5761284c61340f565b01541061285b5780925061285f565b8091505b50612803565b8360008260ff166080811061287c5761287c61340f565b01541061288a579392505050565b8360008360ff16608081106128a1576128a161340f565b0154106100e6575092915050565b6000828160ff84166128c183806135b8565b901c91506128de826b0d10b13981d2a0bc5e5fdcab601e1b6135b8565b6128e890826133e1565b905060ff84166128f886846135b8565b901c9150612915826b045ae5bdd5f0e03eca1ff439601e1b6135b8565b61291f90826133e1565b905060ff841661292f86846135b8565b901c915061294c826e45ae5bdd5f0e03eca1ff43900000006135b8565b61295690826133e1565b905060ff841661296686846135b8565b901c9150612982826adefabf91302cd95b9ffda5601c1b6135b8565b61298c90826133e1565b905060ff841661299c86846135b8565b901c91506129b8826a4a53953065644873dfff37601b1b6135b8565b6129c290826133e1565b905060ff84166129d286846135b8565b901c91506129ee826d54f1cf12bd04e516b6da880000006135b8565b6129f890826133e1565b905060ff8416612a0886846135b8565b901c9150612a24826d0a9e39e257a09ca2d6db510000006135b8565b612a2e90826133e1565b905060ff8416612a3e86846135b8565b901c9150612a5a826d012e066e7b839fa050c3090000006135b8565b612a6490826133e1565b905060ff8416612a7486846135b8565b901c9150612a8f826c1e33d7d926c329a1ad1a8000006135b8565b612a9990826133e1565b905060ff8416612aa986846135b8565b901c9150612ac4826c02bee513bdb4a6b19b5f8000006135b8565b612ace90826133e1565b905060ff8416612ade86846135b8565b901c9150612af8826b3a9316fa79b88eccf2a000006135b8565b612b0290826133e1565b905060ff8416612b1286846135b8565b901c9150612b2c826b048177ebe1fa8123752000006135b8565b612b3690826133e1565b905060ff8416612b4686846135b8565b901c9150612b5f826a5263fe90242dcbacf000006135b8565b612b6990826133e1565b905060ff8416612b7986846135b8565b901c9150612b92826a057e22099c030d941000006135b8565b612b9c90826133e1565b905060ff8416612bac86846135b8565b901c9150612bc4826957e22099c030d94100006135b8565b612bce90826133e1565b905060ff8416612bde86846135b8565b901c9150612bf68269052b6b545699763100006135b8565b612c0090826133e1565b905060ff8416612c1086846135b8565b901c9150612c2782684985f67696bf7480006135b8565b612c3190826133e1565b905060ff8416612c4186846135b8565b901c9150612c58826803dea12ea99e4980006135b8565b612c6290826133e1565b905060ff8416612c7286846135b8565b901c9150612c88826731880f2214b6e0006135b8565b612c9290826133e1565b905060ff8416612ca286846135b8565b901c9150612cb88267025bcff56eb360006135b8565b612cc290826133e1565b905060ff8416612cd286846135b8565b901c9150612ce782661b722e10ab10006135b8565b612cf190826133e1565b905060ff8416612d0186846135b8565b901c9150612d16826601317c700770006135b8565b612d2090826133e1565b905060ff8416612d3086846135b8565b901c9150612d4482650cba84aafa006135b8565b612d4e90826133e1565b905060ff8416612d5e86846135b8565b901c9150612d71826482573a0a006135b8565b612d7b90826133e1565b905060ff8416612d8b86846135b8565b901c9150612d9e826405035ad9006135b8565b612da890826133e1565b905060ff8416612db886846135b8565b901c9150612dca82632f881b006135b8565b612dd490826133e1565b905060ff8416612de486846135b8565b901c9150612df6826301b293406135b8565b612e0090826133e1565b905060ff8416612e1086846135b8565b901c9150612e2182620efc406135b8565b612e2b90826133e1565b905060ff8416612e3b86846135b8565b901c9150612e4b82617fe06135b8565b612e5590826133e1565b905060ff8416612e6586846135b8565b901c9150612e75826104206135b8565b612e7f90826133e1565b905060ff8416612e8f86846135b8565b901c9150612e9e8260216135b8565b612ea890826133e1565b905060ff8416612eb886846135b8565b901c9150612ec78260016135b8565b612ed190826133e1565b9050600160ff85161b85612ef46b0d10b13981d2a0bc5e5fdcab601f1b846135ed565b612efe91906133e1565b610f0091906133e1565b600080610100831015612f3b575b6001831115612f3657600192831c92612f2f9082613848565b9050612f16565b612f6f565b60805b60ff811615612f6d57600160ff82161b8410612f625760ff81169390931c92908117905b60011c607f16612f3e565b505b92915050565b6001600160a01b0381168114612f8a57600080fd5b50565b60008083601f840112612f9f57600080fd5b5081356001600160401b03811115612fb657600080fd5b6020830191508360208260051b850101111561082057600080fd5b60008060008060008060a08789031215612fea57600080fd5b8635612ff581612f75565b9550602087013561300581612f75565b9450604087013561301581612f75565b93506060870135925060808701356001600160401b0381111561303757600080fd5b61304389828a01612f8d565b979a9699509497509295939492505050565b6020808252825182820181905260009190848201906040850190845b8181101561308d57835183529284019291840191600101613071565b50909695505050505050565b600080604083850312156130ac57600080fd5b82356130b781612f75565b915060208301356130c781612f75565b809150509250929050565b6000806000606084860312156130e757600080fd5b83356130f281612f75565b9250602084013561310281612f75565b9150604084013561311281612f75565b809150509250925092565b60008060006060848603121561313257600080fd5b833561313d81612f75565b9250602084013561314d81612f75565b929592945050506040919091013590565b63ffffffff81168114612f8a57600080fd5b60008060008060008060c0878903121561318957600080fd5b86359550602087013594506040870135935060608701356131a98161315e565b925060808701356131b98161315e565b915060a08701356131c98161315e565b809150509295509295509295565b600080600080600060a086880312156131ef57600080fd5b8535945060208601359350604086013592506060860135915060808601356132168161315e565b809150509295509295909350565b60008060008060006080868803121561323c57600080fd5b853561324781612f75565b9450602086013561325781612f75565b93506040860135925060608601356001600160401b0381111561327957600080fd5b61328588828901612f8d565b969995985093965092949392505050565b6001600160701b0381168114612f8a57600080fd5b600080600080600080600060e0888a0312156132c657600080fd5b8735965060208801356132d881613296565b955060408801356132e881613296565b945060608801356132f88161315e565b935060808801356133088161315e565b925060a088013561331881613296565b915060c088013561332881613296565b8091505092959891949750929550565b60008060006060848603121561334d57600080fd5b505081359360208301359350604090920135919050565b60006020828403121561337657600080fd5b81356121ca81612f75565b6001600160a01b0391909116815260200190565b6020808252601c908201527b0a4cae2ead2cada8cdee4daead8c27440929cac82989288bea082a8960231b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156133f4576133f46133cb565b500190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000600019821415613439576134396133cb565b5060010190565b60208082526026908201527f5265717569656d466f726d756c613a20494e56414c49445f544f4b454e5f4f556040820152650a8bea082a8960d31b606082015260800190565b60008060006060848603121561349b57600080fd5b83516134a68161315e565b60208501519093506134b78161315e565b60408501519092506131128161315e565b6000806000606084860312156134dd57600080fd5b83516134e881613296565b60208501519093506134b781613296565b60006020828403121561350b57600080fd5b81516121ca81612f75565b6020808252601e908201527f5265717569656d466f726d756c613a20496e76616c696420746f6b656e410000604082015260600190565b60208082526026908201527f5265717569656d466f726d756c613a20494e53554646494349454e545f4c495160408201526555494449545960d01b606082015260800190565b600063ffffffff838116908316818110156135b0576135b06133cb565b039392505050565b60008160001904831182151516156135d2576135d26133cb565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826135fc576135fc6135d7565b500490565b600082821015613613576136136133cb565b500390565b600081613627576136276133cb565b506000190190565b60208082526025908201527f5265717569656d466f726d756c613a20494e56414c49445f544f4b454e5f494e6040820152640bea082a8960db1b606082015260800190565b6000806040838503121561368757600080fd5b82516136928161315e565b60208401519092506130c78161315e565b600060033d11156136bc5760046000803e5060005160e01c5b90565b601f8201601f191681016001600160401b03811182821017156136f257634e487b7160e01b600052604160045260246000fd5b6040525050565b600060443d10156137075790565b6040516003193d81016004833e81513d6001600160401b03808311602484018310171561373657505050505090565b828501915081518181111561374e5750505050505090565b843d87010160208285010111156137685750505050505090565b613777602082860101876136bf565b509095945050505050565b600060208083528351808285015260005b818110156137af57858101830151858201604001528201613793565b818111156137c1576000604083870101525b50601f01601f1916929092016040019392505050565b6000602082840312156137e957600080fd5b81516121ca8161315e565b600060ff821660ff84168082101561380e5761380e6133cb565b90039392505050565b600060ff82168061382a5761382a6133cb565b6000190192915050565b600082613843576138436135d7565b500690565b600060ff821660ff84168060ff03821115613865576138656133cb565b019392505050565b600060ff831680613880576138806135d7565b8060ff8416049150509291505056fea2646970667358221220e4e06e9bf3f48643dc2a37bff826a02f8f69386008080cfe1ba0da6d028116c164736f6c634300080a0033";

export class RequiemFormula__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RequiemFormula> {
    return super.deploy(overrides || {}) as Promise<RequiemFormula>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RequiemFormula {
    return super.attach(address) as RequiemFormula;
  }
  connect(signer: Signer): RequiemFormula__factory {
    return super.connect(signer) as RequiemFormula__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RequiemFormulaInterface {
    return new utils.Interface(_abi) as RequiemFormulaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RequiemFormula {
    return new Contract(address, _abi, signerOrProvider) as RequiemFormula;
  }
}
