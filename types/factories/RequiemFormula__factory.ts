/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RequiemFormula,
  RequiemFormulaInterface,
} from "../RequiemFormula";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reserve0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserve1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance0Adjusted",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance1Adjusted",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
    ],
    name: "ensureConstantValue",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveOut",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightIn",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightOut",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    name: "getAmountIn",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveOut",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightIn",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightOut",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    name: "getAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getFactoryAmountsIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getFactoryAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    name: "getFactoryReserveAndWeights",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightA",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightB",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "getFactoryWeightsAndSwapFee",
    outputs: [
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    name: "getOtherToken",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "getPairAmountIn",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "getPairAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    name: "getReserveAndWeights",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightA",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightB",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "getWeightsAndSwapFee",
    outputs: [
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalLiquidity",
        type: "uint256",
      },
      {
        internalType: "uint112",
        name: "reserve0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "reserve1",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint112",
        name: "collectedFee0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "collectedFee1",
        type: "uint112",
      },
    ],
    name: "mintLiquidityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    name: "quote",
    outputs: [
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "sortTokens",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061073f6001641c35fedd1560601b036020556001646c3390ecc9605e1b036021556001640cf801476160611b0360225560016431bdb23e1d605f1b0360235560016502fb1d8fe083605b1b0360245560016505b771955b37605a1b036025556001650af67a93bb5160591b0360265560016515060c256cb360581b036027556001651428a2f98d7360581b036028556001654d515663970960561b03602955600165944620b0e70f60551b03602a55600166011c592761c66760541b03602b5560016602214d10d014eb60531b03602c55600166020ade36b7dbef60531b03602d5560016603eab73b3bbfe360521b03602e556001660782ee3593f6d760511b03602f556001661ccf4b44bb4821604f1b0360305560016606e7f88ad8a77760511b0360315560016669f3d1c921891d604d1b03603255600166cb2ff529eb71e5604c1b03603355600166c2d415c3db974b604c1b0360345560016702eb40f9f620fda7604a1b0360355560016705990681d961a1eb60491b03603655600167055e12902701414760491b0360375560016714962dee9dc9764160471b0360385560016704ef57b9b560fab560491b0360395560016712ed7b32a58f552b60471b03603a556001679131271922eaa60760441b03603b556001678b380f3558668c4760441b03603c556001680215f77c045fbe885760421b03603d556001600160831b03603e556001670f577eded5773a1160471b03603f556001680eb5ec597592befbf5603f1b036040556001681c35fedd14b861eb05603e1b036041556001683619c87664579bc94b603d1b0360425560016867c00a3b07ffc01fd7603c1b03604355600168c6f6c8f8739773a7a5603b1b03604455600168bec763f8209b7a72b1603b1b0360455560016902dbb8caad9b7097b91b60391b03604655600169057b3d49dda84556d6f760381b03604755600169054183095b2c8ececf3160381b036048556001690a14517cc6b9457111ef60371b0360495560016913545598e5c23276ccf160361b03604a556001692511882c39c3adea96ff60351b03604b55600169471649d87199aa99075760341b03604c557004429a21a029d4c1457cfbffffffffffff604d55700415bc6d6fb7dd71af2cb3ffffffffffff604e557003eab73b3bbfe282243ce1ffffffffffff604f557003c1771ac9fb6b4c18e229ffffffffffff605055700399e96897690418f785257fffffffffff605155700373fc456c53bb779bf0ea9fffffffffff60525570034f9e8e490c48e67e6ab8bfffffffffff60535570032cbfd4a7adc790560b3337ffffffffff60545570030b50570f6e5d2acca94613ffffffffff6055557002eb40f9f620fda6b56c2861ffffffffff6056557002cc8340ecb0d0f520a6af58ffffffffff6057557002af09481380a0a35cf1ba02ffffffffff605855700292c5bdd3b92ec810287b1b3fffffffff605955700277abdcdab07d5a77ac6d6b9fffffffff605a5570025daf6654b1eaa55fd64df5efffffffff605b55700244c49c648baa98192dce88b7ffffffff605c5570022ce03cd5619a311b2471268bffffffff605d55700215f77c045fbe885654a44a0fffffffff605e556001600160811b03605f557001eaefdbdaaee7421fc4d3ede5ffffffff6060557001d6bd8b2eb257df7e8ca57b09bfffffff6061557001c35fedd14b861eb0443f7f133fffffff6062557001b0ce43b322bcde4a56e8ada5afffffff60635570019f0028ec1fff007f5a195a39dfffffff60645570018ded91f0e72ee74f49b15ba527ffffff60655570017d8ec7f04136f4e5615fd41a63ffffff60665570016ddc6556cdb84bdc8d12d22e6fffffff60675570015ecf52776a1155b5bd8395814f7fffff60685570015060c256cb23b3b3cc3754cf40ffffff6069557001428a2f98d728ae223ddab715be3fffff606a5570013545598e5c23276ccf0ede68034fffff606b557001288c4161ce1d6f54b7f61081194fffff606c5570011c592761c666aa641d5a01a40f17ffff606d55700110a688680a7530515f3e6e6cfdcdffff606e557001056f1b5bedf75c6bcb2ce8aed428ffff606f556ffaadceceeff8a0890f3875f008277fff6070556ff05dc6b27edad306388a600f6ba0bfff6071556fe67a5a25da41063de1495d5b18cdbfff6072556fdcff115b14eedde6fc3aa5353f2e4fff6073556fd3e7a3924312399f9aae2e0f868f8fff6074556fcb2ff529eb71e41582cccd5a1ee26fff6075556fc2d415c3db974ab32a51840c0b67edff6076556fbad03e7d883f69ad5b0a186184e06bff6077556fb320d03b2c343d4829abd6075f0cc5ff6078556fabc25204e02828d73c6e80bcdb1a95bf6079556fa4b16f74ee4bb2040a1ec6c15fbbf2df607a556f9deaf736ac1f569deb1b5ae3f36c130f607b556f976bd9952c7aa957f5937d790ef65037607c556f9131271922eaa6064b73a22d0bd4f2bf607d556f8b380f3558668c46c91c49a2f8e967b9607e556f857ddf0117efa215952912839f6473e6607f55565b6139698061074e6000396000f3fe608060405234801561001057600080fd5b50600436106100e65760003560e01c8063119220a5146100eb5780632bb66e1d14610114578063327494611461014e578063544caa56146101765780635bff1d92146101a95780636350d774146101ff578063671a11b51461022057806367f84adc1461023357806379c91b37146102465780638888a737146102695780638fabd82d1461027c57806392aec23c1461028f578063ad615dec146102a2578063b19210b0146102b5578063b33d96b0146102c8578063b3923a99146102db578063ca222979146102ee578063d691093714610301575b600080fd5b6100fe6100f9366004613075565b610321565b60405161010b91906130f9565b60405180910390f35b61012761012236600461313d565b6104b0565b6040805163ffffffff9485168152928416602084015292169181019190915260600161010b565b61016161015c366004613176565b61052f565b6040805192835260208301919091520161010b565b61018961018436600461313d565b610732565b604080516001600160a01b0393841681529290911660208301520161010b565b6101bc6101b736600461313d565b610827565b604080516001600160a01b03909716875260208701959095529385019290925263ffffffff908116606085015290811660808401521660a082015260c00161010b565b61021261020d3660046131c1565b610ace565b60405190815260200161010b565b61021261022e366004613214565b610b0b565b6100fe610241366004613075565b610c77565b61025961025436600461327b565b610de8565b604051901515815260200161010b565b6102126102773660046131c1565b610f0d565b6100fe61028a3660046132c8565b610f3c565b61021261029d36600461334f565b6110ae565b6102126102b03660046133dc565b611181565b6102126102c3366004613214565b611227565b6101bc6102d6366004613176565b61139f565b6100fe6102e93660046132c8565b61162d565b6101276102fc366004613408565b61178b565b61031461030f36600461313d565b6118e6565b60405161010b9190613425565b6060816103495760405162461bcd60e51b815260040161034090613439565b60405180910390fd5b610354826001613485565b6001600160401b0381111561036b5761036b61349d565b604051908082528060200260200182016040528015610394578160200160208202803683370190505b50905083816000815181106103ab576103ab6134b3565b60209081029190910101528560005b83811015610473576000806000806000806103fc8f8c8c8a8181106103e1576103e16134b3565b90506020020160208101906103f69190613408565b8a61139f565b95509550955095509550955061042f89888151811061041d5761041d6134b3565b60200260200101518686868686610b0b565b8961043b896001613485565b8151811061044b5761044b6134b3565b602002602001018181525050859750505050505050808061046b906134c9565b9150506103ba565b50856001600160a01b0316816001600160a01b0316146104a55760405162461bcd60e51b8152600401610340906134e4565b509695505050505050565b6000806000846001600160a01b031663ca222979856040518263ffffffff1660e01b81526004016104e19190613425565b606060405180830381865afa1580156104fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610522919061352a565b9250925092509250925092565b60008060008061053f8686610732565b91509150600080886001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610584573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a8919061356c565b506001600160701b031691506001600160701b03169150886001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610621919061359d565b6001600160a01b0316846001600160a01b03161480156106b35750886001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561067a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069e919061359d565b6001600160a01b0316836001600160a01b0316145b6106ff5760405162461bcd60e51b815260206004820152601d60248201527f5265717569656d466f726d756c613a20496e76616c696420746f6b656e0000006044820152606401610340565b836001600160a01b0316886001600160a01b03161461071f578082610722565b81815b909a909950975050505050505050565b600080826001600160a01b0316846001600160a01b031614156107a35760405162461bcd60e51b815260206004820152602360248201527f5265717569656d466f726d756c613a204944454e544943414c5f41444452455360448201526253455360e81b6064820152608401610340565b826001600160a01b0316846001600160a01b0316106107c35782846107c6565b83835b90925090506001600160a01b0382166108205760405162461bcd60e51b815260206004820152601c60248201527b5265717569656d466f726d756c613a205a45524f5f4144445245535360201b6044820152606401610340565b9250929050565b600080600080600080600080896001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610871573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610895919061356c565b506001600160701b031691506001600160701b031691506000806108b88c61178b565b8097508193508294505050508b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610902573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610926919061359d565b6001600160a01b03168b6001600160a01b031614156109b6578b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561097d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a1919061359d565b99509297509095509350915084848484610ac0565b8b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a18919061359d565b6001600160a01b03168b6001600160a01b03161415610aa8578b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a93919061359d565b99509197509195509350915083858385610ac0565b60405162461bcd60e51b8152600401610340906135ba565b505050509295509295509295565b6000806000806000806000610ae38a8a610827565b955095509550955095509550610afd888587858786611227565b9a9950505050505050505050565b6000808711610b6e5760405162461bcd60e51b815260206004820152602960248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f494e50604482015268155517d05353d5539560ba1b6064820152608401610340565b600086118015610b7e5750600085115b610b9a5760405162461bcd60e51b8152600401610340906135f1565b6000610bc0610bab84612710613637565b63ffffffff1689611a1f90919063ffffffff16565b90508363ffffffff168563ffffffff161415610c0857610bec81610be689612710611a1f565b90611a32565b610bf68783611a1f565b610c009190613672565b915050610c6d565b60008080610c1c84610be68c612710611a1f565b9050610c3581610c2e8c612710611a1f565b8a8a611a4f565b90935091506000610c468a85611a1f565b905060ff83168a901b84610c5a8284613686565b610c649190613672565b96505050505050505b9695505050505050565b606081610c965760405162461bcd60e51b815260040161034090613439565b610ca1826001613485565b6001600160401b03811115610cb857610cb861349d565b604051908082528060200260200182016040528015610ce1578160200160208202803683370190505b509050838160018351610cf49190613686565b81518110610d0457610d046134b3565b602090810291909101015284825b8015610db65760008080808080610d3f8f8c8c610d3060018c613686565b8181106103e1576103e16134b3565b955095509550955095509550610d72898881518110610d6057610d606134b3565b60200260200101518587858786611227565b89610d7e60018a613686565b81518110610d8e57610d8e6134b3565b6020026020010181815250508597505050505050508080610dae9061369d565b915050610d12565b50866001600160a01b0316816001600160a01b0316146104a55760405162461bcd60e51b8152600401610340906136b4565b60008163ffffffff1660321415610e1657610e038686611a1f565b610e0d8585611a1f565b10159050610f04565b858410158015610e265750848310155b15610e3357506001610f04565b858411158015610e435750848311155b15610e5057506000610f04565b816000610e5e826064613637565b90506000806000808b8a10610e9c57610e7a8b8a876032611a4f565b90945060ff169250610e8f8a8d886032611a4f565b90925060ff169050610ec7565b610ea98c8b886032611a4f565b90945060ff169250610ebe898c876032611a4f565b90925060ff1690505b6000818410610ed65781610ed8565b835b9050610ee48185613686565b9350610ef08183613686565b9290921c9390921c92909211159450505050505b95945050505050565b6000806000806000806000610f228a8a610827565b955095509550955095509550610afd888686868686610b0b565b606081610f5b5760405162461bcd60e51b815260040161034090613439565b610f66826001613485565b6001600160401b03811115610f7d57610f7d61349d565b604051908082528060200260200182016040528015610fa6578160200160208202803683370190505b5090508381600081518110610fbd57610fbd6134b3565b60209081029190910101528560005b838110156110725760008060008060008061100d8b8b89818110610ff257610ff26134b3565b90506020020160208101906110079190613408565b89610827565b95509550955095509550955061102e89888151811061041d5761041d6134b3565b8961103a896001613485565b8151811061104a5761104a6134b3565b602002602001018181525050859750505050505050808061106a906134c9565b915050610fcc565b50856001600160a01b0316816001600160a01b0316146110a45760405162461bcd60e51b8152600401610340906134e4565b5095945050505050565b60006001600160701b0383161561111a576000806110ed6110db6001600160701b03878116908c16611a32565b8a6001600160701b0316896064611a4f565b90925060ff1690506111158a61110f836111078387611a1f565b87911c611a32565b90611b8a565b925050505b6001600160701b03821615611176576000806111576111456001600160701b03868116908b16611a32565b896001600160701b0316886064611a4f565b90925060ff1690506111718a61110f836111078387611a1f565b925050505b979650505050505050565b60008084116111de5760405162461bcd60e51b815260206004820152602360248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f414d4f60448201526215539560ea1b6064820152608401610340565b6000831180156111ee5750600082115b61120a5760405162461bcd60e51b8152600401610340906135f1565b826112158584611a1f565b61121f9190613672565b949350505050565b600080871161128b5760405162461bcd60e51b815260206004820152602a60248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f4f555460448201526914155517d05353d5539560b21b6064820152608401610340565b60008611801561129b5750600085115b6112b75760405162461bcd60e51b8152600401610340906135f1565b8263ffffffff168463ffffffff1614156113295760006112e36127106112dd898b611a1f565b90611a1f565b9050600061130f6112f685612710613637565b63ffffffff166112dd8b8a611b8a90919063ffffffff16565b90506113206001610be68385613672565b92505050610c6d565b60008080611337888b611b8a565b90506113458882888a611a4f565b909350915060006113588a612710611a1f565b905060006113668286611a1f565b905060ff841682901b610c6460016113808a612710613637565b63ffffffff1660ff88166113948587613686565b610be692911c613672565b600080600080600080600080896001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156113e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061140d919061356c565b506001600160701b031691506001600160701b031691506000806114318d8d6104b0565b8097508193508294505050508b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561147b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061149f919061359d565b6001600160a01b03168b6001600160a01b0316141561152f578b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151a919061359d565b9950929750909550935091508484848461161d565b8b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561156d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611591919061359d565b6001600160a01b03168b6001600160a01b03161415610aa8578b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061160c919061359d565b995091975091955093509150838583855b5050505093975093979195509350565b60608161164c5760405162461bcd60e51b815260040161034090613439565b611657826001613485565b6001600160401b0381111561166e5761166e61349d565b604051908082528060200260200182016040528015611697578160200160208202803683370190505b5090508381600183516116aa9190613686565b815181106116ba576116ba6134b3565b602090810291909101015284825b801561175957600080808080806116f48b8b6116e560018b613686565b818110610ff257610ff26134b3565b955095509550955095509550611715898881518110610d6057610d606134b3565b8961172160018a613686565b81518110611731576117316134b3565b60200260200101818152505085975050505050505080806117519061369d565b9150506116c8565b50866001600160a01b0316816001600160a01b0316146110a45760405162461bcd60e51b8152600401610340906136b4565b6000806000836001600160a01b03166332bfe4696040518163ffffffff1660e01b81526004016040805180830381865afa9250505080156117e9575060408051601f3d908101601f191682019092526117e6918101906136f9565b60015b611872576117f5613728565b806308c379a0141561182f575061180a61377e565b806118155750611831565b8060405162461bcd60e51b81526004016103409190613807565b505b3d80801561185b576040519150601f19603f3d011682016040523d82523d6000602084013e611860565b606091505b50603280601e935093509350506118df565b8181876001600160a01b031663d4cadf686040518163ffffffff1660e01b8152600401602060405180830381865afa1580156118b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d6919061385c565b94509450945050505b9193909250565b600080836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611927573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061194b919061359d565b90506000846001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561198d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119b1919061359d565b9050836001600160a01b0316826001600160a01b031614806119e45750836001600160a01b0316816001600160a01b0316145b611a005760405162461bcd60e51b8152600401610340906135ba565b836001600160a01b0316826001600160a01b03161461121f5781610f04565b6000611a2b8284613879565b9392505050565b600080611a3f8385613485565b9050611a2b848210156000611b98565b60008084861015611aa05760405162461bcd60e51b815260206004820152601b60248201527a1b9bdd081cdd5c1c1bdc9d0817d8985cd953880f0817d8985cd951602a1b6044820152606401610340565b600160811b8610611ab057600080fd5b60008086611ac26001607f1b8a613879565b611acc9190613672565b905070015bf0a8b1457695355fb8ac404e7a79e3811015611af757611af081611baa565b9150611b03565b611b0081612119565b91505b60008563ffffffff168763ffffffff1684611b1e9190613879565b611b289190613672565b9050600160831b811015611b4d57611b3f81612207565b607f94509450505050611b81565b6000611b5882612832565b9050611b74611b6882607f613898565b60ff1683901c826128e5565b95509350611b8192505050565b94509492505050565b6000611a2b83836001612f3e565b81611ba657611ba681612f59565b5050565b6000808080806fd3094c70f034de4b96ff7d5b6f99fcd88610611c0357611bd56001607e1b85613485565b93506fd3094c70f034de4b96ff7d5b6f99fcd8611bf66001607f1b88613879565b611c009190613672565b95505b6fa45af1e1f40c333b3de1db4dd55f29a78610611c5657611c286001607d1b85613485565b93506fa45af1e1f40c333b3de1db4dd55f29a7611c496001607f1b88613879565b611c539190613672565b95505b6f910b022db7ae67ce76b441c27035c6a18610611ca957611c7b6001607c1b85613485565b93506f910b022db7ae67ce76b441c27035c6a1611c9c6001607f1b88613879565b611ca69190613672565b95505b6f88415abbe9a76bead8d00cf112e4d4a88610611cfc57611cce6001607b1b85613485565b93506f88415abbe9a76bead8d00cf112e4d4a8611cef6001607f1b88613879565b611cf99190613672565b95505b6f84102b00893f64c705e841d5d4064bd38610611d4f57611d216001607a1b85613485565b93506f84102b00893f64c705e841d5d4064bd3611d426001607f1b88613879565b611d4c9190613672565b95505b6f8204055aaef1c8bd5c3259f4822735a28610611da257611d74600160791b85613485565b93506f8204055aaef1c8bd5c3259f4822735a2611d956001607f1b88613879565b611d9f9190613672565b95505b6f810100ab00222d861931c15e39b44e998610611df557611dc7600160781b85613485565b93506f810100ab00222d861931c15e39b44e99611de86001607f1b88613879565b611df29190613672565b95505b6f808040155aabbbe9451521693554f7338610611e4857611e1a600160771b85613485565b93506f808040155aabbbe9451521693554f733611e3b6001607f1b88613879565b611e459190613672565b95505b611e566001607f1b87613686565b92508291506001607f1b611e6a8380613879565b611e749190613672565b9050600160801b611e858482613686565b611e8f9084613879565b611e999190613672565b611ea39085613485565b93506001607f1b611eb48284613879565b611ebe9190613672565b9150600160811b611edf846faaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa613686565b611ee99084613879565b611ef39190613672565b611efd9085613485565b93506001607f1b611f0e8284613879565b611f189190613672565b9150600360801b611f39846f99999999999999999999999999999999613686565b611f439084613879565b611f4d9190613672565b611f579085613485565b93506001607f1b611f688284613879565b611f729190613672565b9150600160821b611f93846f92492492492492492492492492492492613686565b611f9d9084613879565b611fa79190613672565b611fb19085613485565b93506001607f1b611fc28284613879565b611fcc9190613672565b9150600560801b611fed846f8e38e38e38e38e38e38e38e38e38e38e613686565b611ff79084613879565b6120019190613672565b61200b9085613485565b93506001607f1b61201c8284613879565b6120269190613672565b9150600360811b612047846f8ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b613686565b6120519084613879565b61205b9190613672565b6120659085613485565b93506001607f1b6120768284613879565b6120809190613672565b9150600760801b6120a1846f89d89d89d89d89d89d89d89d89d89d89613686565b6120ab9084613879565b6120b59190613672565b6120bf9085613485565b93506001607f1b6120d08284613879565b6120da9190613672565b9150600160831b6120fb846f88888888888888888888888888888888613686565b6121059084613879565b61210f9190613672565b610c6d9085613485565b600080600160801b831061215d57600061213f61213a6001607f1b86613672565b612fac565b60ff811694851c94909150612159906001607f1b90613879565b9150505b6001607f1b8311156121d257607f5b60ff8116156121d0576001607f1b6121848580613879565b61218e9190613672565b9350600160801b84106121c057600193841c936121ab9082613898565b60ff166001901b826121bd9190613485565b91505b6121c9816138bb565b905061216c565b505b6f05b9de1d10bf4103d647b0955897ba806121fd6f03f80fe03f80fe03f80fe03f80fe03f883613879565b611a2b9190613672565b600080808061221a6001607c1b866138d8565b91508190506001607f1b61222e8280613879565b6122389190613672565b905061224c816710e1b3be415a0000613879565b6122569084613485565b92506001607f1b6122678383613879565b6122719190613672565b9050612285816705a0913f6b1e0000613879565b61228f9084613485565b92506001607f1b6122a08383613879565b6122aa9190613672565b90506122be81670168244fdac78000613879565b6122c89084613485565b92506001607f1b6122d98383613879565b6122e39190613672565b90506122f681664807432bc18000613879565b6123009084613485565b92506001607f1b6123118383613879565b61231b9190613672565b905061232e81660c0135dca04000613879565b6123389084613485565b92506001607f1b6123498383613879565b6123539190613672565b9050612366816601b707b1cdc000613879565b6123709084613485565b92506001607f1b6123818383613879565b61238b9190613672565b905061239d816536e0f639b800613879565b6123a79084613485565b92506001607f1b6123b88383613879565b6123c29190613672565b90506123d481650618fee9f800613879565b6123de9084613485565b92506001607f1b6123ef8383613879565b6123f99190613672565b905061240a81649c197dcc00613879565b6124149084613485565b92506001607f1b6124258383613879565b61242f9190613672565b905061244081640e30dce400613879565b61244a9084613485565b92506001607f1b61245b8383613879565b6124659190613672565b90506124768164012ebd1300613879565b6124809084613485565b92506001607f1b6124918383613879565b61249b9190613672565b90506124ab816317499f00613879565b6124b59084613485565b92506001607f1b6124c68383613879565b6124d09190613672565b90506124e0816301a9d480613879565b6124ea9084613485565b92506001607f1b6124fb8383613879565b6125059190613672565b905061251481621c6380613879565b61251e9084613485565b92506001607f1b61252f8383613879565b6125399190613672565b9050612548816201c638613879565b6125529084613485565b92506001607f1b6125638383613879565b61256d9190613672565b905061257b81611ab8613879565b6125859084613485565b92506001607f1b6125968383613879565b6125a09190613672565b90506125ae8161017c613879565b6125b89084613485565b92506001607f1b6125c98383613879565b6125d39190613672565b90506125e0816014613879565b6125ea9084613485565b92506001607f1b6125fb8383613879565b6126059190613672565b9050612612816001613879565b61261c9084613485565b92506001607f1b826126366721c3677c82b4000086613672565b6126409190613485565b61264a9190613485565b92506001607c1b8516156126925770018ebef9eac820ae8682b9793ac6d1e776612685847001c3d6a24ed82218787d624d3e5eba95f9613879565b61268f9190613672565b92505b6001607d1b8516156126d8577001368b2fc6f9609fe7aceb46aa619baed46126cb8470018ebef9eac820ae8682b9793ac6d1e778613879565b6126d59190613672565b92505b6001607e1b85161561271d576fbc5ab1b16779be3575bd8f0520a9f21f612710847001368b2fc6f9609fe7aceb46aa619baed5613879565b61271a9190613672565b92505b6001607f1b851615612761576f454aaa8efe072e7f6ddbab84b40a55c9612754846fbc5ab1b16779be3575bd8f0520a9f21e613879565b61275e9190613672565b92505b600160801b8516156127a5576f0960aadc109e7a3bf4578099615711ea612798846f454aaa8efe072e7f6ddbab84b40a55c5613879565b6127a29190613672565b92505b600160811b8516156127e8576e2bf84208204f5977f9a8cf01fdce3d6127db846f0960aadc109e7a3bf4578099615711d7613879565b6127e59190613672565b92505b600160821b851615612829576d03c6ab775dd0b95b4cbee7e65d1161281c846e2bf84208204f5977f9a8cf01fdc307613879565b6128269190613672565b92505b50909392505050565b60006020607f5b60ff81166128488360016138ec565b60ff16101561289b576000600261285f83856138ec565b6128699190613911565b90508460008260ff1660808110612882576128826134b3565b01541061289157809250612895565b8091505b50612839565b8360008260ff16608081106128b2576128b26134b3565b0154106128c0579392505050565b8360008360ff16608081106128d7576128d76134b3565b0154106100e6575092915050565b6000828160ff84166128f78380613879565b901c9150612914826b0d10b13981d2a0bc5e5fdcab601e1b613879565b61291e9082613485565b905060ff841661292e8684613879565b901c915061294b826b045ae5bdd5f0e03eca1ff439601e1b613879565b6129559082613485565b905060ff84166129658684613879565b901c9150612982826e45ae5bdd5f0e03eca1ff4390000000613879565b61298c9082613485565b905060ff841661299c8684613879565b901c91506129b8826adefabf91302cd95b9ffda5601c1b613879565b6129c29082613485565b905060ff84166129d28684613879565b901c91506129ee826a4a53953065644873dfff37601b1b613879565b6129f89082613485565b905060ff8416612a088684613879565b901c9150612a24826d54f1cf12bd04e516b6da88000000613879565b612a2e9082613485565b905060ff8416612a3e8684613879565b901c9150612a5a826d0a9e39e257a09ca2d6db51000000613879565b612a649082613485565b905060ff8416612a748684613879565b901c9150612a90826d012e066e7b839fa050c309000000613879565b612a9a9082613485565b905060ff8416612aaa8684613879565b901c9150612ac5826c1e33d7d926c329a1ad1a800000613879565b612acf9082613485565b905060ff8416612adf8684613879565b901c9150612afa826c02bee513bdb4a6b19b5f800000613879565b612b049082613485565b905060ff8416612b148684613879565b901c9150612b2e826b3a9316fa79b88eccf2a00000613879565b612b389082613485565b905060ff8416612b488684613879565b901c9150612b62826b048177ebe1fa812375200000613879565b612b6c9082613485565b905060ff8416612b7c8684613879565b901c9150612b95826a5263fe90242dcbacf00000613879565b612b9f9082613485565b905060ff8416612baf8684613879565b901c9150612bc8826a057e22099c030d94100000613879565b612bd29082613485565b905060ff8416612be28684613879565b901c9150612bfa826957e22099c030d9410000613879565b612c049082613485565b905060ff8416612c148684613879565b901c9150612c2c8269052b6b54569976310000613879565b612c369082613485565b905060ff8416612c468684613879565b901c9150612c5d82684985f67696bf748000613879565b612c679082613485565b905060ff8416612c778684613879565b901c9150612c8e826803dea12ea99e498000613879565b612c989082613485565b905060ff8416612ca88684613879565b901c9150612cbe826731880f2214b6e000613879565b612cc89082613485565b905060ff8416612cd88684613879565b901c9150612cee8267025bcff56eb36000613879565b612cf89082613485565b905060ff8416612d088684613879565b901c9150612d1d82661b722e10ab1000613879565b612d279082613485565b905060ff8416612d378684613879565b901c9150612d4c826601317c70077000613879565b612d569082613485565b905060ff8416612d668684613879565b901c9150612d7a82650cba84aafa00613879565b612d849082613485565b905060ff8416612d948684613879565b901c9150612da7826482573a0a00613879565b612db19082613485565b905060ff8416612dc18684613879565b901c9150612dd4826405035ad900613879565b612dde9082613485565b905060ff8416612dee8684613879565b901c9150612e0082632f881b00613879565b612e0a9082613485565b905060ff8416612e1a8684613879565b901c9150612e2c826301b29340613879565b612e369082613485565b905060ff8416612e468684613879565b901c9150612e5782620efc40613879565b612e619082613485565b905060ff8416612e718684613879565b901c9150612e8182617fe0613879565b612e8b9082613485565b905060ff8416612e9b8684613879565b901c9150612eab82610420613879565b612eb59082613485565b905060ff8416612ec58684613879565b901c9150612ed4826021613879565b612ede9082613485565b905060ff8416612eee8684613879565b901c9150612efd826001613879565b612f079082613485565b9050600160ff85161b85612f2a6b0d10b13981d2a0bc5e5fdcab601f1b84613672565b612f349190613485565b610f049190613485565b6000612f4d8484111583611b98565b6000610f048486613686565b62461bcd60e51b6000908152602060045260076024526652455123000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b600080610100831015612fdf575b6001831115612fda57600192831c92612fd390826138ec565b9050612fba565b613013565b60805b60ff81161561301157600160ff82161b84106130065760ff81169390931c92908117905b60011c607f16612fe2565b505b92915050565b6001600160a01b038116811461302e57600080fd5b50565b60008083601f84011261304357600080fd5b5081356001600160401b0381111561305a57600080fd5b6020830191508360208260051b850101111561082057600080fd5b60008060008060008060a0878903121561308e57600080fd5b863561309981613019565b955060208701356130a981613019565b945060408701356130b981613019565b93506060870135925060808701356001600160401b038111156130db57600080fd5b6130e789828a01613031565b979a9699509497509295939492505050565b6020808252825182820181905260009190848201906040850190845b8181101561313157835183529284019291840191600101613115565b50909695505050505050565b6000806040838503121561315057600080fd5b823561315b81613019565b9150602083013561316b81613019565b809150509250929050565b60008060006060848603121561318b57600080fd5b833561319681613019565b925060208401356131a681613019565b915060408401356131b681613019565b809150509250925092565b6000806000606084860312156131d657600080fd5b83356131e181613019565b925060208401356131f181613019565b929592945050506040919091013590565b63ffffffff8116811461302e57600080fd5b60008060008060008060c0878903121561322d57600080fd5b863595506020870135945060408701359350606087013561324d81613202565b9250608087013561325d81613202565b915060a087013561326d81613202565b809150509295509295509295565b600080600080600060a0868803121561329357600080fd5b8535945060208601359350604086013592506060860135915060808601356132ba81613202565b809150509295509295909350565b6000806000806000608086880312156132e057600080fd5b85356132eb81613019565b945060208601356132fb81613019565b93506040860135925060608601356001600160401b0381111561331d57600080fd5b61332988828901613031565b969995985093965092949392505050565b6001600160701b038116811461302e57600080fd5b600080600080600080600060e0888a03121561336a57600080fd5b87359650602088013561337c8161333a565b9550604088013561338c8161333a565b9450606088013561339c81613202565b935060808801356133ac81613202565b925060a08801356133bc8161333a565b915060c08801356133cc8161333a565b8091505092959891949750929550565b6000806000606084860312156133f157600080fd5b505081359360208301359350604090920135919050565b60006020828403121561341a57600080fd5b8135611a2b81613019565b6001600160a01b0391909116815260200190565b6020808252601c908201527b0a4cae2ead2cada8cdee4daead8c27440929cac82989288bea082a8960231b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156134985761349861346f565b500190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006000198214156134dd576134dd61346f565b5060010190565b60208082526026908201527f5265717569656d466f726d756c613a20494e56414c49445f544f4b454e5f4f556040820152650a8bea082a8960d31b606082015260800190565b60008060006060848603121561353f57600080fd5b835161354a81613202565b602085015190935061355b81613202565b60408501519092506131b681613202565b60008060006060848603121561358157600080fd5b835161358c8161333a565b602085015190935061355b8161333a565b6000602082840312156135af57600080fd5b8151611a2b81613019565b6020808252601e908201527f5265717569656d466f726d756c613a20496e76616c696420746f6b656e410000604082015260600190565b60208082526026908201527f5265717569656d466f726d756c613a20494e53554646494349454e545f4c495160408201526555494449545960d01b606082015260800190565b600063ffffffff838116908316818110156136545761365461346f565b039392505050565b634e487b7160e01b600052601260045260246000fd5b6000826136815761368161365c565b500490565b6000828210156136985761369861346f565b500390565b6000816136ac576136ac61346f565b506000190190565b60208082526025908201527f5265717569656d466f726d756c613a20494e56414c49445f544f4b454e5f494e6040820152640bea082a8960db1b606082015260800190565b6000806040838503121561370c57600080fd5b825161371781613202565b602084015190925061316b81613202565b600060033d11156137415760046000803e5060005160e01c5b90565b601f8201601f191681016001600160401b038111828210171561377757634e487b7160e01b600052604160045260246000fd5b6040525050565b600060443d101561378c5790565b6040516003193d81016004833e81513d6001600160401b0380831160248401831017156137bb57505050505090565b82850191508151818111156137d35750505050505090565b843d87010160208285010111156137ed5750505050505090565b6137fc60208286010187613744565b509095945050505050565b600060208083528351808285015260005b8181101561383457858101830151858201604001528201613818565b81811115613846576000604083870101525b50601f01601f1916929092016040019392505050565b60006020828403121561386e57600080fd5b8151611a2b81613202565b60008160001904831182151516156138935761389361346f565b500290565b600060ff821660ff8416808210156138b2576138b261346f565b90039392505050565b600060ff8216806138ce576138ce61346f565b6000190192915050565b6000826138e7576138e761365c565b500690565b600060ff821660ff84168060ff038211156139095761390961346f565b019392505050565b600060ff8316806139245761392461365c565b8060ff8416049150509291505056fea2646970667358221220b4d97e72e855802ae16a110927d183d8e9126192660a3e0c808b95203a21d18964736f6c634300080a0033";

export class RequiemFormula__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RequiemFormula> {
    return super.deploy(overrides || {}) as Promise<RequiemFormula>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RequiemFormula {
    return super.attach(address) as RequiemFormula;
  }
  connect(signer: Signer): RequiemFormula__factory {
    return super.connect(signer) as RequiemFormula__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RequiemFormulaInterface {
    return new utils.Interface(_abi) as RequiemFormulaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RequiemFormula {
    return new Contract(address, _abi, signerOrProvider) as RequiemFormula;
  }
}
