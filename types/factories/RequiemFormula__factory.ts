/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RequiemFormula,
  RequiemFormulaInterface,
} from "../RequiemFormula";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reserve0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserve1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance0Adjusted",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance1Adjusted",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
    ],
    name: "ensureConstantValue",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveOut",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightIn",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightOut",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    name: "getAmountIn",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveOut",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightIn",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightOut",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    name: "getAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getFactoryAmountsIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getFactoryAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    name: "getFactoryReserveAndWeights",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightA",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightB",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "getFactoryWeightsAndSwapFee",
    outputs: [
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    name: "getOtherToken",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "getPairAmountIn",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "getPairAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    name: "getReserveAndWeights",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightA",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightB",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "getWeightsAndSwapFee",
    outputs: [
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalLiquidity",
        type: "uint256",
      },
      {
        internalType: "uint112",
        name: "reserve0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "reserve1",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint112",
        name: "collectedFee0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "collectedFee1",
        type: "uint112",
      },
    ],
    name: "mintLiquidityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    name: "quote",
    outputs: [
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "sortTokens",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061073f6001641c35fedd1560601b036020556001646c3390ecc9605e1b036021556001640cf801476160611b0360225560016431bdb23e1d605f1b0360235560016502fb1d8fe083605b1b0360245560016505b771955b37605a1b036025556001650af67a93bb5160591b0360265560016515060c256cb360581b036027556001651428a2f98d7360581b036028556001654d515663970960561b03602955600165944620b0e70f60551b03602a55600166011c592761c66760541b03602b5560016602214d10d014eb60531b03602c55600166020ade36b7dbef60531b03602d5560016603eab73b3bbfe360521b03602e556001660782ee3593f6d760511b03602f556001661ccf4b44bb4821604f1b0360305560016606e7f88ad8a77760511b0360315560016669f3d1c921891d604d1b03603255600166cb2ff529eb71e5604c1b03603355600166c2d415c3db974b604c1b0360345560016702eb40f9f620fda7604a1b0360355560016705990681d961a1eb60491b03603655600167055e12902701414760491b0360375560016714962dee9dc9764160471b0360385560016704ef57b9b560fab560491b0360395560016712ed7b32a58f552b60471b03603a556001679131271922eaa60760441b03603b556001678b380f3558668c4760441b03603c556001680215f77c045fbe885760421b03603d556001600160831b03603e556001670f577eded5773a1160471b03603f556001680eb5ec597592befbf5603f1b036040556001681c35fedd14b861eb05603e1b036041556001683619c87664579bc94b603d1b0360425560016867c00a3b07ffc01fd7603c1b03604355600168c6f6c8f8739773a7a5603b1b03604455600168bec763f8209b7a72b1603b1b0360455560016902dbb8caad9b7097b91b60391b03604655600169057b3d49dda84556d6f760381b03604755600169054183095b2c8ececf3160381b036048556001690a14517cc6b9457111ef60371b0360495560016913545598e5c23276ccf160361b03604a556001692511882c39c3adea96ff60351b03604b55600169471649d87199aa99075760341b03604c557004429a21a029d4c1457cfbffffffffffff604d55700415bc6d6fb7dd71af2cb3ffffffffffff604e557003eab73b3bbfe282243ce1ffffffffffff604f557003c1771ac9fb6b4c18e229ffffffffffff605055700399e96897690418f785257fffffffffff605155700373fc456c53bb779bf0ea9fffffffffff60525570034f9e8e490c48e67e6ab8bfffffffffff60535570032cbfd4a7adc790560b3337ffffffffff60545570030b50570f6e5d2acca94613ffffffffff6055557002eb40f9f620fda6b56c2861ffffffffff6056557002cc8340ecb0d0f520a6af58ffffffffff6057557002af09481380a0a35cf1ba02ffffffffff605855700292c5bdd3b92ec810287b1b3fffffffff605955700277abdcdab07d5a77ac6d6b9fffffffff605a5570025daf6654b1eaa55fd64df5efffffffff605b55700244c49c648baa98192dce88b7ffffffff605c5570022ce03cd5619a311b2471268bffffffff605d55700215f77c045fbe885654a44a0fffffffff605e556001600160811b03605f557001eaefdbdaaee7421fc4d3ede5ffffffff6060557001d6bd8b2eb257df7e8ca57b09bfffffff6061557001c35fedd14b861eb0443f7f133fffffff6062557001b0ce43b322bcde4a56e8ada5afffffff60635570019f0028ec1fff007f5a195a39dfffffff60645570018ded91f0e72ee74f49b15ba527ffffff60655570017d8ec7f04136f4e5615fd41a63ffffff60665570016ddc6556cdb84bdc8d12d22e6fffffff60675570015ecf52776a1155b5bd8395814f7fffff60685570015060c256cb23b3b3cc3754cf40ffffff6069557001428a2f98d728ae223ddab715be3fffff606a5570013545598e5c23276ccf0ede68034fffff606b557001288c4161ce1d6f54b7f61081194fffff606c5570011c592761c666aa641d5a01a40f17ffff606d55700110a688680a7530515f3e6e6cfdcdffff606e557001056f1b5bedf75c6bcb2ce8aed428ffff606f556ffaadceceeff8a0890f3875f008277fff6070556ff05dc6b27edad306388a600f6ba0bfff6071556fe67a5a25da41063de1495d5b18cdbfff6072556fdcff115b14eedde6fc3aa5353f2e4fff6073556fd3e7a3924312399f9aae2e0f868f8fff6074556fcb2ff529eb71e41582cccd5a1ee26fff6075556fc2d415c3db974ab32a51840c0b67edff6076556fbad03e7d883f69ad5b0a186184e06bff6077556fb320d03b2c343d4829abd6075f0cc5ff6078556fabc25204e02828d73c6e80bcdb1a95bf6079556fa4b16f74ee4bb2040a1ec6c15fbbf2df607a556f9deaf736ac1f569deb1b5ae3f36c130f607b556f976bd9952c7aa957f5937d790ef65037607c556f9131271922eaa6064b73a22d0bd4f2bf607d556f8b380f3558668c46c91c49a2f8e967b9607e556f857ddf0117efa215952912839f6473e6607f55565b6139cb8061074e6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80638888a737116100a2578063b19210b011610071578063b19210b0146102e5578063b33d96b0146102f8578063b3923a991461030b578063ca2229791461031e578063d69109371461033157600080fd5b80638888a737146102995780638fabd82d146102ac57806392aec23c146102bf578063ad615dec146102d257600080fd5b80635bff1d92116100e95780635bff1d92146101d95780636350d7741461022f578063671a11b51461025057806367f84adc1461026357806379c91b371461027657600080fd5b8063119220a51461011b5780632bb66e1d14610144578063327494611461017e578063544caa56146101a6575b600080fd5b61012e61012936600461311d565b61035c565b60405161013b91906131a2565b60405180910390f35b6101576101523660046131e6565b6104ec565b6040805163ffffffff9485168152928416602084015292169181019190915260600161013b565b61019161018c36600461321f565b61056b565b6040805192835260208301919091520161013b565b6101b96101b43660046131e6565b61076e565b604080516001600160a01b0393841681529290911660208301520161013b565b6101ec6101e73660046131e6565b610864565b604080516001600160a01b03909716875260208701959095529385019290925263ffffffff908116606085015290811660808401521660a082015260c00161013b565b61024261023d36600461326a565b610b3b565b60405190815260200161013b565b61024261025e3660046132bd565b610b78565b61012e61027136600461311d565b610ce4565b610289610284366004613324565b610e56565b604051901515815260200161013b565b6102426102a736600461326a565b610f7b565b61012e6102ba366004613371565b610faa565b6102426102cd3660046133f9565b61111d565b6102426102e0366004613486565b6111f0565b6102426102f33660046132bd565b611296565b6101ec61030636600461321f565b61140e565b61012e610319366004613371565b61169c565b61015761032c3660046134b2565b6117fb565b61034461033f3660046131e6565b611956565b6040516001600160a01b03909116815260200161013b565b6060816103845760405162461bcd60e51b815260040161037b906134cf565b60405180910390fd5b61038f82600161351c565b67ffffffffffffffff8111156103a7576103a7613534565b6040519080825280602002602001820160405280156103d0578160200160208202803683370190505b50905083816000815181106103e7576103e761354a565b60209081029190910101528560005b838110156104af576000806000806000806104388f8c8c8a81811061041d5761041d61354a565b905060200201602081019061043291906134b2565b8a61140e565b95509550955095509550955061046b8988815181106104595761045961354a565b60200260200101518686868686610b78565b8961047789600161351c565b815181106104875761048761354a565b60200260200101818152505085975050505050505080806104a790613560565b9150506103f6565b50856001600160a01b0316816001600160a01b0316146104e15760405162461bcd60e51b815260040161037b9061357b565b509695505050505050565b60405163ca22297960e01b81526001600160a01b038281166004830152600091829182919086169063ca22297990602401606060405180830381865afa15801561053a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055e91906135c1565b9250925092509250925092565b60008060008061057b868661076e565b91509150600080886001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156105c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e49190613603565b506001600160701b031691506001600160701b03169150886001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610639573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065d9190613634565b6001600160a01b0316846001600160a01b03161480156106ef5750886001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106da9190613634565b6001600160a01b0316836001600160a01b0316145b61073b5760405162461bcd60e51b815260206004820152601d60248201527f5265717569656d466f726d756c613a20496e76616c696420746f6b656e000000604482015260640161037b565b836001600160a01b0316886001600160a01b03161461075b57808261075e565b81815b909a909950975050505050505050565b600080826001600160a01b0316846001600160a01b031614156107df5760405162461bcd60e51b815260206004820152602360248201527f5265717569656d466f726d756c613a204944454e544943414c5f41444452455360448201526253455360e81b606482015260840161037b565b826001600160a01b0316846001600160a01b0316106107ff578284610802565b83835b90925090506001600160a01b03821661085d5760405162461bcd60e51b815260206004820152601c60248201527f5265717569656d466f726d756c613a205a45524f5f4144445245535300000000604482015260640161037b565b9250929050565b600080600080600080600080896001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156108ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d29190613603565b506001600160701b031691506001600160701b031691506000806108f58c6117fb565b8097508193508294505050508b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561093f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109639190613634565b6001600160a01b03168b6001600160a01b031614156109f3578b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109de9190613634565b99509297509095509350915084848484610b2d565b8b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a559190613634565b6001600160a01b03168b6001600160a01b03161415610ae5578b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610aac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad09190613634565b99509197509195509350915083858385610b2d565b60405162461bcd60e51b815260206004820152601e60248201527f5265717569656d466f726d756c613a20496e76616c696420746f6b656e410000604482015260640161037b565b505050509295509295509295565b6000806000806000806000610b508a8a610864565b955095509550955095509550610b6a888587858786611296565b9a9950505050505050505050565b6000808711610bdb5760405162461bcd60e51b815260206004820152602960248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f494e50604482015268155517d05353d5539560ba1b606482015260840161037b565b600086118015610beb5750600085115b610c075760405162461bcd60e51b815260040161037b90613651565b6000610c2d610c1884612710613697565b63ffffffff1689611abf90919063ffffffff16565b90508363ffffffff168563ffffffff161415610c7557610c5981610c5389612710611abf565b90611ad2565b610c638783611abf565b610c6d91906136d2565b915050610cda565b60008080610c8984610c538c612710611abf565b9050610ca281610c9b8c612710611abf565b8a8a611aef565b90935091506000610cb38a85611abf565b905060ff83168a901b84610cc782846136e6565b610cd191906136d2565b96505050505050505b9695505050505050565b606081610d035760405162461bcd60e51b815260040161037b906134cf565b610d0e82600161351c565b67ffffffffffffffff811115610d2657610d26613534565b604051908082528060200260200182016040528015610d4f578160200160208202803683370190505b509050838160018351610d6291906136e6565b81518110610d7257610d7261354a565b602090810291909101015284825b8015610e245760008080808080610dad8f8c8c610d9e60018c6136e6565b81811061041d5761041d61354a565b955095509550955095509550610de0898881518110610dce57610dce61354a565b60200260200101518587858786611296565b89610dec60018a6136e6565b81518110610dfc57610dfc61354a565b6020026020010181815250508597505050505050508080610e1c906136fd565b915050610d80565b50866001600160a01b0316816001600160a01b0316146104e15760405162461bcd60e51b815260040161037b90613714565b60008163ffffffff1660321415610e8457610e718686611abf565b610e7b8585611abf565b10159050610f72565b858410158015610e945750848310155b15610ea157506001610f72565b858411158015610eb15750848311155b15610ebe57506000610f72565b816000610ecc826064613697565b90506000806000808b8a10610f0a57610ee88b8a876032611aef565b90945060ff169250610efd8a8d886032611aef565b90925060ff169050610f35565b610f178c8b886032611aef565b90945060ff169250610f2c898c876032611aef565b90925060ff1690505b6000818410610f445781610f46565b835b9050610f5281856136e6565b9350610f5e81836136e6565b9290921c9390921c92909211159450505050505b95945050505050565b6000806000806000806000610f908a8a610864565b955095509550955095509550610b6a888686868686610b78565b606081610fc95760405162461bcd60e51b815260040161037b906134cf565b610fd482600161351c565b67ffffffffffffffff811115610fec57610fec613534565b604051908082528060200260200182016040528015611015578160200160208202803683370190505b509050838160008151811061102c5761102c61354a565b60209081029190910101528560005b838110156110e15760008060008060008061107c8b8b898181106110615761106161354a565b905060200201602081019061107691906134b2565b89610864565b95509550955095509550955061109d8988815181106104595761045961354a565b896110a989600161351c565b815181106110b9576110b961354a565b60200260200101818152505085975050505050505080806110d990613560565b91505061103b565b50856001600160a01b0316816001600160a01b0316146111135760405162461bcd60e51b815260040161037b9061357b565b5095945050505050565b60006001600160701b038316156111895760008061115c61114a6001600160701b03878116908c16611ad2565b8a6001600160701b0316896064611aef565b90925060ff1690506111848a61117e836111768387611abf565b87911c611ad2565b90611c2c565b925050505b6001600160701b038216156111e5576000806111c66111b46001600160701b03868116908b16611ad2565b896001600160701b0316886064611aef565b90925060ff1690506111e08a61117e836111768387611abf565b925050505b979650505050505050565b600080841161124d5760405162461bcd60e51b815260206004820152602360248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f414d4f60448201526215539560ea1b606482015260840161037b565b60008311801561125d5750600082115b6112795760405162461bcd60e51b815260040161037b90613651565b826112848584611abf565b61128e91906136d2565b949350505050565b60008087116112fa5760405162461bcd60e51b815260206004820152602a60248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f4f555460448201526914155517d05353d5539560b21b606482015260840161037b565b60008611801561130a5750600085115b6113265760405162461bcd60e51b815260040161037b90613651565b8263ffffffff168463ffffffff16141561139857600061135261271061134c898b611abf565b90611abf565b9050600061137e61136585612710613697565b63ffffffff1661134c8b8a611c2c90919063ffffffff16565b905061138f6001610c5383856136d2565b92505050610cda565b600080806113a6888b611c2c565b90506113b48882888a611aef565b909350915060006113c78a612710611abf565b905060006113d58286611abf565b905060ff841682901b610cd160016113ef8a612710613697565b63ffffffff1660ff881661140385876136e6565b610c5392911c6136d2565b600080600080600080600080896001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611458573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061147c9190613603565b506001600160701b031691506001600160701b031691506000806114a08d8d6104ec565b8097508193508294505050508b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061150e9190613634565b6001600160a01b03168b6001600160a01b0316141561159e578b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611565573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115899190613634565b9950929750909550935091508484848461168c565b8b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116009190613634565b6001600160a01b03168b6001600160a01b03161415610ae5578b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611657573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061167b9190613634565b995091975091955093509150838583855b5050505093975093979195509350565b6060816116bb5760405162461bcd60e51b815260040161037b906134cf565b6116c682600161351c565b67ffffffffffffffff8111156116de576116de613534565b604051908082528060200260200182016040528015611707578160200160208202803683370190505b50905083816001835161171a91906136e6565b8151811061172a5761172a61354a565b602090810291909101015284825b80156117c957600080808080806117648b8b61175560018b6136e6565b8181106110615761106161354a565b955095509550955095509550611785898881518110610dce57610dce61354a565b8961179160018a6136e6565b815181106117a1576117a161354a565b60200260200101818152505085975050505050505080806117c1906136fd565b915050611738565b50866001600160a01b0316816001600160a01b0316146111135760405162461bcd60e51b815260040161037b90613714565b6000806000836001600160a01b03166332bfe4696040518163ffffffff1660e01b81526004016040805180830381865afa925050508015611859575060408051601f3d908101601f1916820190925261185691810190613759565b60015b6118e257611865613788565b806308c379a0141561189f575061187a6137df565b8061188557506118a1565b8060405162461bcd60e51b815260040161037b9190613869565b505b3d8080156118cb576040519150601f19603f3d011682016040523d82523d6000602084013e6118d0565b606091505b50603280601e9350935093505061194f565b8181876001600160a01b031663d4cadf686040518163ffffffff1660e01b8152600401602060405180830381865afa158015611922573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061194691906138be565b94509450945050505b9193909250565b600080836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611997573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119bb9190613634565b90506000846001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156119fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a219190613634565b9050836001600160a01b0316826001600160a01b03161480611a545750836001600160a01b0316816001600160a01b0316145b611aa05760405162461bcd60e51b815260206004820152601e60248201527f5265717569656d466f726d756c613a20496e76616c696420746f6b656e410000604482015260640161037b565b836001600160a01b0316826001600160a01b03161461128e5781610f72565b6000611acb82846138db565b9392505050565b600080611adf838561351c565b9050611acb848210156000611c3a565b60008084861015611b425760405162461bcd60e51b815260206004820152601b60248201527f6e6f7420737570706f7274205f626173654e203c205f62617365440000000000604482015260640161037b565b600160811b8610611b5257600080fd5b60008086611b646001607f1b8a6138db565b611b6e91906136d2565b905070015bf0a8b1457695355fb8ac404e7a79e3811015611b9957611b9281611c4c565b9150611ba5565b611ba2816121bb565b91505b60008563ffffffff168763ffffffff1684611bc091906138db565b611bca91906136d2565b9050600160831b811015611bef57611be1816122a9565b607f94509450505050611c23565b6000611bfa826128d4565b9050611c16611c0a82607f6138fa565b60ff1683901c82612987565b95509350611c2392505050565b94509492505050565b6000611acb83836001612fe5565b81611c4857611c4881613000565b5050565b6000808080806fd3094c70f034de4b96ff7d5b6f99fcd88610611ca557611c776001607e1b8561351c565b93506fd3094c70f034de4b96ff7d5b6f99fcd8611c986001607f1b886138db565b611ca291906136d2565b95505b6fa45af1e1f40c333b3de1db4dd55f29a78610611cf857611cca6001607d1b8561351c565b93506fa45af1e1f40c333b3de1db4dd55f29a7611ceb6001607f1b886138db565b611cf591906136d2565b95505b6f910b022db7ae67ce76b441c27035c6a18610611d4b57611d1d6001607c1b8561351c565b93506f910b022db7ae67ce76b441c27035c6a1611d3e6001607f1b886138db565b611d4891906136d2565b95505b6f88415abbe9a76bead8d00cf112e4d4a88610611d9e57611d706001607b1b8561351c565b93506f88415abbe9a76bead8d00cf112e4d4a8611d916001607f1b886138db565b611d9b91906136d2565b95505b6f84102b00893f64c705e841d5d4064bd38610611df157611dc36001607a1b8561351c565b93506f84102b00893f64c705e841d5d4064bd3611de46001607f1b886138db565b611dee91906136d2565b95505b6f8204055aaef1c8bd5c3259f4822735a28610611e4457611e16600160791b8561351c565b93506f8204055aaef1c8bd5c3259f4822735a2611e376001607f1b886138db565b611e4191906136d2565b95505b6f810100ab00222d861931c15e39b44e998610611e9757611e69600160781b8561351c565b93506f810100ab00222d861931c15e39b44e99611e8a6001607f1b886138db565b611e9491906136d2565b95505b6f808040155aabbbe9451521693554f7338610611eea57611ebc600160771b8561351c565b93506f808040155aabbbe9451521693554f733611edd6001607f1b886138db565b611ee791906136d2565b95505b611ef86001607f1b876136e6565b92508291506001607f1b611f0c83806138db565b611f1691906136d2565b9050600160801b611f2784826136e6565b611f3190846138db565b611f3b91906136d2565b611f45908561351c565b93506001607f1b611f5682846138db565b611f6091906136d2565b9150600160811b611f81846faaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6136e6565b611f8b90846138db565b611f9591906136d2565b611f9f908561351c565b93506001607f1b611fb082846138db565b611fba91906136d2565b9150600360801b611fdb846f999999999999999999999999999999996136e6565b611fe590846138db565b611fef91906136d2565b611ff9908561351c565b93506001607f1b61200a82846138db565b61201491906136d2565b9150600160821b612035846f924924924924924924924924924924926136e6565b61203f90846138db565b61204991906136d2565b612053908561351c565b93506001607f1b61206482846138db565b61206e91906136d2565b9150600560801b61208f846f8e38e38e38e38e38e38e38e38e38e38e6136e6565b61209990846138db565b6120a391906136d2565b6120ad908561351c565b93506001607f1b6120be82846138db565b6120c891906136d2565b9150600360811b6120e9846f8ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b6136e6565b6120f390846138db565b6120fd91906136d2565b612107908561351c565b93506001607f1b61211882846138db565b61212291906136d2565b9150600760801b612143846f89d89d89d89d89d89d89d89d89d89d896136e6565b61214d90846138db565b61215791906136d2565b612161908561351c565b93506001607f1b61217282846138db565b61217c91906136d2565b9150600160831b61219d846f888888888888888888888888888888886136e6565b6121a790846138db565b6121b191906136d2565b610cda908561351c565b600080600160801b83106121ff5760006121e16121dc6001607f1b866136d2565b613053565b60ff811694851c949091506121fb906001607f1b906138db565b9150505b6001607f1b83111561227457607f5b60ff811615612272576001607f1b61222685806138db565b61223091906136d2565b9350600160801b841061226257600193841c9361224d90826138fa565b60ff166001901b8261225f919061351c565b91505b61226b8161391d565b905061220e565b505b6f05b9de1d10bf4103d647b0955897ba8061229f6f03f80fe03f80fe03f80fe03f80fe03f8836138db565b611acb91906136d2565b60008080806122bc6001607c1b8661393a565b91508190506001607f1b6122d082806138db565b6122da91906136d2565b90506122ee816710e1b3be415a00006138db565b6122f8908461351c565b92506001607f1b61230983836138db565b61231391906136d2565b9050612327816705a0913f6b1e00006138db565b612331908461351c565b92506001607f1b61234283836138db565b61234c91906136d2565b905061236081670168244fdac780006138db565b61236a908461351c565b92506001607f1b61237b83836138db565b61238591906136d2565b905061239881664807432bc180006138db565b6123a2908461351c565b92506001607f1b6123b383836138db565b6123bd91906136d2565b90506123d081660c0135dca040006138db565b6123da908461351c565b92506001607f1b6123eb83836138db565b6123f591906136d2565b9050612408816601b707b1cdc0006138db565b612412908461351c565b92506001607f1b61242383836138db565b61242d91906136d2565b905061243f816536e0f639b8006138db565b612449908461351c565b92506001607f1b61245a83836138db565b61246491906136d2565b905061247681650618fee9f8006138db565b612480908461351c565b92506001607f1b61249183836138db565b61249b91906136d2565b90506124ac81649c197dcc006138db565b6124b6908461351c565b92506001607f1b6124c783836138db565b6124d191906136d2565b90506124e281640e30dce4006138db565b6124ec908461351c565b92506001607f1b6124fd83836138db565b61250791906136d2565b90506125188164012ebd13006138db565b612522908461351c565b92506001607f1b61253383836138db565b61253d91906136d2565b905061254d816317499f006138db565b612557908461351c565b92506001607f1b61256883836138db565b61257291906136d2565b9050612582816301a9d4806138db565b61258c908461351c565b92506001607f1b61259d83836138db565b6125a791906136d2565b90506125b681621c63806138db565b6125c0908461351c565b92506001607f1b6125d183836138db565b6125db91906136d2565b90506125ea816201c6386138db565b6125f4908461351c565b92506001607f1b61260583836138db565b61260f91906136d2565b905061261d81611ab86138db565b612627908461351c565b92506001607f1b61263883836138db565b61264291906136d2565b90506126508161017c6138db565b61265a908461351c565b92506001607f1b61266b83836138db565b61267591906136d2565b90506126828160146138db565b61268c908461351c565b92506001607f1b61269d83836138db565b6126a791906136d2565b90506126b48160016138db565b6126be908461351c565b92506001607f1b826126d86721c3677c82b40000866136d2565b6126e2919061351c565b6126ec919061351c565b92506001607c1b8516156127345770018ebef9eac820ae8682b9793ac6d1e776612727847001c3d6a24ed82218787d624d3e5eba95f96138db565b61273191906136d2565b92505b6001607d1b85161561277a577001368b2fc6f9609fe7aceb46aa619baed461276d8470018ebef9eac820ae8682b9793ac6d1e7786138db565b61277791906136d2565b92505b6001607e1b8516156127bf576fbc5ab1b16779be3575bd8f0520a9f21f6127b2847001368b2fc6f9609fe7aceb46aa619baed56138db565b6127bc91906136d2565b92505b6001607f1b851615612803576f454aaa8efe072e7f6ddbab84b40a55c96127f6846fbc5ab1b16779be3575bd8f0520a9f21e6138db565b61280091906136d2565b92505b600160801b851615612847576f0960aadc109e7a3bf4578099615711ea61283a846f454aaa8efe072e7f6ddbab84b40a55c56138db565b61284491906136d2565b92505b600160811b85161561288a576e2bf84208204f5977f9a8cf01fdce3d61287d846f0960aadc109e7a3bf4578099615711d76138db565b61288791906136d2565b92505b600160821b8516156128cb576d03c6ab775dd0b95b4cbee7e65d116128be846e2bf84208204f5977f9a8cf01fdc3076138db565b6128c891906136d2565b92505b50909392505050565b60006020607f5b60ff81166128ea83600161394e565b60ff16101561293d5760006002612901838561394e565b61290b9190613973565b90508460008260ff16608081106129245761292461354a565b01541061293357809250612937565b8091505b506128db565b8360008260ff16608081106129545761295461354a565b015410612962579392505050565b8360008360ff16608081106129795761297961354a565b015410610116575092915050565b6000828160ff841661299983806138db565b901c91506129b7826f03442c4e6074a82f1797f72ac00000006138db565b6129c1908261351c565b905060ff84166129d186846138db565b901c91506129ef826f0116b96f757c380fb287fd0e400000006138db565b6129f9908261351c565b905060ff8416612a0986846138db565b901c9150612a26826e45ae5bdd5f0e03eca1ff43900000006138db565b612a30908261351c565b905060ff8416612a4086846138db565b901c9150612a5d826e0defabf91302cd95b9ffda500000006138db565b612a67908261351c565b905060ff8416612a7786846138db565b901c9150612a94826e02529ca9832b22439efff9b80000006138db565b612a9e908261351c565b905060ff8416612aae86846138db565b901c9150612aca826d54f1cf12bd04e516b6da880000006138db565b612ad4908261351c565b905060ff8416612ae486846138db565b901c9150612b00826d0a9e39e257a09ca2d6db510000006138db565b612b0a908261351c565b905060ff8416612b1a86846138db565b901c9150612b36826d012e066e7b839fa050c3090000006138db565b612b40908261351c565b905060ff8416612b5086846138db565b901c9150612b6b826c1e33d7d926c329a1ad1a8000006138db565b612b75908261351c565b905060ff8416612b8586846138db565b901c9150612ba0826c02bee513bdb4a6b19b5f8000006138db565b612baa908261351c565b905060ff8416612bba86846138db565b901c9150612bd4826b3a9316fa79b88eccf2a000006138db565b612bde908261351c565b905060ff8416612bee86846138db565b901c9150612c08826b048177ebe1fa8123752000006138db565b612c12908261351c565b905060ff8416612c2286846138db565b901c9150612c3b826a5263fe90242dcbacf000006138db565b612c45908261351c565b905060ff8416612c5586846138db565b901c9150612c6e826a057e22099c030d941000006138db565b612c78908261351c565b905060ff8416612c8886846138db565b901c9150612ca0826957e22099c030d94100006138db565b612caa908261351c565b905060ff8416612cba86846138db565b901c9150612cd28269052b6b545699763100006138db565b612cdc908261351c565b905060ff8416612cec86846138db565b901c9150612d0382684985f67696bf7480006138db565b612d0d908261351c565b905060ff8416612d1d86846138db565b901c9150612d34826803dea12ea99e4980006138db565b612d3e908261351c565b905060ff8416612d4e86846138db565b901c9150612d64826731880f2214b6e0006138db565b612d6e908261351c565b905060ff8416612d7e86846138db565b901c9150612d948267025bcff56eb360006138db565b612d9e908261351c565b905060ff8416612dae86846138db565b901c9150612dc382661b722e10ab10006138db565b612dcd908261351c565b905060ff8416612ddd86846138db565b901c9150612df2826601317c700770006138db565b612dfc908261351c565b905060ff8416612e0c86846138db565b901c9150612e2082650cba84aafa006138db565b612e2a908261351c565b905060ff8416612e3a86846138db565b901c9150612e4d826482573a0a006138db565b612e57908261351c565b905060ff8416612e6786846138db565b901c9150612e7a826405035ad9006138db565b612e84908261351c565b905060ff8416612e9486846138db565b901c9150612ea682632f881b006138db565b612eb0908261351c565b905060ff8416612ec086846138db565b901c9150612ed2826301b293406138db565b612edc908261351c565b905060ff8416612eec86846138db565b901c9150612efd82620efc406138db565b612f07908261351c565b905060ff8416612f1786846138db565b901c9150612f2782617fe06138db565b612f31908261351c565b905060ff8416612f4186846138db565b901c9150612f51826104206138db565b612f5b908261351c565b905060ff8416612f6b86846138db565b901c9150612f7a8260216138db565b612f84908261351c565b905060ff8416612f9486846138db565b901c9150612fa38260016138db565b612fad908261351c565b9050600160ff85161b85612fd16f0688589cc0e9505e2f2fee5580000000846136d2565b612fdb919061351c565b610f72919061351c565b6000612ff48484111583611c3a565b6000610f7284866136e6565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b600080610100831015613086575b600183111561308157600192831c9261307a908261394e565b9050613061565b6130ba565b60805b60ff8116156130b857600160ff82161b84106130ad5760ff81169390931c92908117905b60011c607f16613089565b505b92915050565b6001600160a01b03811681146130d557600080fd5b50565b60008083601f8401126130ea57600080fd5b50813567ffffffffffffffff81111561310257600080fd5b6020830191508360208260051b850101111561085d57600080fd5b60008060008060008060a0878903121561313657600080fd5b8635613141816130c0565b95506020870135613151816130c0565b94506040870135613161816130c0565b935060608701359250608087013567ffffffffffffffff81111561318457600080fd5b61319089828a016130d8565b979a9699509497509295939492505050565b6020808252825182820181905260009190848201906040850190845b818110156131da578351835292840192918401916001016131be565b50909695505050505050565b600080604083850312156131f957600080fd5b8235613204816130c0565b91506020830135613214816130c0565b809150509250929050565b60008060006060848603121561323457600080fd5b833561323f816130c0565b9250602084013561324f816130c0565b9150604084013561325f816130c0565b809150509250925092565b60008060006060848603121561327f57600080fd5b833561328a816130c0565b9250602084013561329a816130c0565b929592945050506040919091013590565b63ffffffff811681146130d557600080fd5b60008060008060008060c087890312156132d657600080fd5b86359550602087013594506040870135935060608701356132f6816132ab565b92506080870135613306816132ab565b915060a0870135613316816132ab565b809150509295509295509295565b600080600080600060a0868803121561333c57600080fd5b853594506020860135935060408601359250606086013591506080860135613363816132ab565b809150509295509295909350565b60008060008060006080868803121561338957600080fd5b8535613394816130c0565b945060208601356133a4816130c0565b935060408601359250606086013567ffffffffffffffff8111156133c757600080fd5b6133d3888289016130d8565b969995985093965092949392505050565b6001600160701b03811681146130d557600080fd5b600080600080600080600060e0888a03121561341457600080fd5b873596506020880135613426816133e4565b95506040880135613436816133e4565b94506060880135613446816132ab565b93506080880135613456816132ab565b925060a0880135613466816133e4565b915060c0880135613476816133e4565b8091505092959891949750929550565b60008060006060848603121561349b57600080fd5b505081359360208301359350604090920135919050565b6000602082840312156134c457600080fd5b8135611acb816130c0565b6020808252601c908201527f5265717569656d466f726d756c613a20494e56414c49445f5041544800000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000821982111561352f5761352f613506565b500190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060001982141561357457613574613506565b5060010190565b60208082526026908201527f5265717569656d466f726d756c613a20494e56414c49445f544f4b454e5f4f556040820152650a8bea082a8960d31b606082015260800190565b6000806000606084860312156135d657600080fd5b83516135e1816132ab565b60208501519093506135f2816132ab565b604085015190925061325f816132ab565b60008060006060848603121561361857600080fd5b8351613623816133e4565b60208501519093506135f2816133e4565b60006020828403121561364657600080fd5b8151611acb816130c0565b60208082526026908201527f5265717569656d466f726d756c613a20494e53554646494349454e545f4c495160408201526555494449545960d01b606082015260800190565b600063ffffffff838116908316818110156136b4576136b4613506565b039392505050565b634e487b7160e01b600052601260045260246000fd5b6000826136e1576136e16136bc565b500490565b6000828210156136f8576136f8613506565b500390565b60008161370c5761370c613506565b506000190190565b60208082526025908201527f5265717569656d466f726d756c613a20494e56414c49445f544f4b454e5f494e6040820152640bea082a8960db1b606082015260800190565b6000806040838503121561376c57600080fd5b8251613777816132ab565b6020840151909250613214816132ab565b600060033d11156137a15760046000803e5060005160e01c5b90565b601f8201601f1916810167ffffffffffffffff811182821017156137d857634e487b7160e01b600052604160045260246000fd5b6040525050565b600060443d10156137ed5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561381d57505050505090565b82850191508151818111156138355750505050505090565b843d870101602082850101111561384f5750505050505090565b61385e602082860101876137a4565b509095945050505050565b600060208083528351808285015260005b818110156138965785810183015185820160400152820161387a565b818111156138a8576000604083870101525b50601f01601f1916929092016040019392505050565b6000602082840312156138d057600080fd5b8151611acb816132ab565b60008160001904831182151516156138f5576138f5613506565b500290565b600060ff821660ff84168082101561391457613914613506565b90039392505050565b600060ff82168061393057613930613506565b6000190192915050565b600082613949576139496136bc565b500690565b600060ff821660ff84168060ff0382111561396b5761396b613506565b019392505050565b600060ff831680613986576139866136bc565b8060ff8416049150509291505056fea2646970667358221220e5e9da1ceb099680b65824cb7c548adb5619a75ae252a9ffc207c67972276ace64736f6c634300080a0033";

export class RequiemFormula__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RequiemFormula> {
    return super.deploy(overrides || {}) as Promise<RequiemFormula>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RequiemFormula {
    return super.attach(address) as RequiemFormula;
  }
  connect(signer: Signer): RequiemFormula__factory {
    return super.connect(signer) as RequiemFormula__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RequiemFormulaInterface {
    return new utils.Interface(_abi) as RequiemFormulaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RequiemFormula {
    return new Contract(address, _abi, signerOrProvider) as RequiemFormula;
  }
}
