/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RequiemFormula,
  RequiemFormulaInterface,
} from "../RequiemFormula";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reserve0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserve1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance0Adjusted",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance1Adjusted",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
    ],
    name: "ensureConstantValue",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveOut",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightIn",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightOut",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    name: "getAmountIn",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveOut",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightIn",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightOut",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    name: "getAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getFactoryAmountsIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getFactoryAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    name: "getFactoryReserveAndWeights",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightA",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightB",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "getFactoryWeightsAndSwapFee",
    outputs: [
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    name: "getOtherToken",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "getPairAmountIn",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "getPairAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    name: "getReserveAndWeights",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightA",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightB",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "getWeightsAndSwapFee",
    outputs: [
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalLiquidity",
        type: "uint256",
      },
      {
        internalType: "uint112",
        name: "reserve0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "reserve1",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint112",
        name: "collectedFee0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "collectedFee1",
        type: "uint112",
      },
    ],
    name: "mintLiquidityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    name: "quote",
    outputs: [
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "sortTokens",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061073f6001641c35fedd1560601b036020556001646c3390ecc9605e1b036021556001640cf801476160611b0360225560016431bdb23e1d605f1b0360235560016502fb1d8fe083605b1b0360245560016505b771955b37605a1b036025556001650af67a93bb5160591b0360265560016515060c256cb360581b036027556001651428a2f98d7360581b036028556001654d515663970960561b03602955600165944620b0e70f60551b03602a55600166011c592761c66760541b03602b5560016602214d10d014eb60531b03602c55600166020ade36b7dbef60531b03602d5560016603eab73b3bbfe360521b03602e556001660782ee3593f6d760511b03602f556001661ccf4b44bb4821604f1b0360305560016606e7f88ad8a77760511b0360315560016669f3d1c921891d604d1b03603255600166cb2ff529eb71e5604c1b03603355600166c2d415c3db974b604c1b0360345560016702eb40f9f620fda7604a1b0360355560016705990681d961a1eb60491b03603655600167055e12902701414760491b0360375560016714962dee9dc9764160471b0360385560016704ef57b9b560fab560491b0360395560016712ed7b32a58f552b60471b03603a556001679131271922eaa60760441b03603b556001678b380f3558668c4760441b03603c556001680215f77c045fbe885760421b03603d556001600160831b03603e556001670f577eded5773a1160471b03603f556001680eb5ec597592befbf5603f1b036040556001681c35fedd14b861eb05603e1b036041556001683619c87664579bc94b603d1b0360425560016867c00a3b07ffc01fd7603c1b03604355600168c6f6c8f8739773a7a5603b1b03604455600168bec763f8209b7a72b1603b1b0360455560016902dbb8caad9b7097b91b60391b03604655600169057b3d49dda84556d6f760381b03604755600169054183095b2c8ececf3160381b036048556001690a14517cc6b9457111ef60371b0360495560016913545598e5c23276ccf160361b03604a556001692511882c39c3adea96ff60351b03604b55600169471649d87199aa99075760341b03604c557004429a21a029d4c1457cfbffffffffffff604d55700415bc6d6fb7dd71af2cb3ffffffffffff604e557003eab73b3bbfe282243ce1ffffffffffff604f557003c1771ac9fb6b4c18e229ffffffffffff605055700399e96897690418f785257fffffffffff605155700373fc456c53bb779bf0ea9fffffffffff60525570034f9e8e490c48e67e6ab8bfffffffffff60535570032cbfd4a7adc790560b3337ffffffffff60545570030b50570f6e5d2acca94613ffffffffff6055557002eb40f9f620fda6b56c2861ffffffffff6056557002cc8340ecb0d0f520a6af58ffffffffff6057557002af09481380a0a35cf1ba02ffffffffff605855700292c5bdd3b92ec810287b1b3fffffffff605955700277abdcdab07d5a77ac6d6b9fffffffff605a5570025daf6654b1eaa55fd64df5efffffffff605b55700244c49c648baa98192dce88b7ffffffff605c5570022ce03cd5619a311b2471268bffffffff605d55700215f77c045fbe885654a44a0fffffffff605e556001600160811b03605f557001eaefdbdaaee7421fc4d3ede5ffffffff6060557001d6bd8b2eb257df7e8ca57b09bfffffff6061557001c35fedd14b861eb0443f7f133fffffff6062557001b0ce43b322bcde4a56e8ada5afffffff60635570019f0028ec1fff007f5a195a39dfffffff60645570018ded91f0e72ee74f49b15ba527ffffff60655570017d8ec7f04136f4e5615fd41a63ffffff60665570016ddc6556cdb84bdc8d12d22e6fffffff60675570015ecf52776a1155b5bd8395814f7fffff60685570015060c256cb23b3b3cc3754cf40ffffff6069557001428a2f98d728ae223ddab715be3fffff606a5570013545598e5c23276ccf0ede68034fffff606b557001288c4161ce1d6f54b7f61081194fffff606c5570011c592761c666aa641d5a01a40f17ffff606d55700110a688680a7530515f3e6e6cfdcdffff606e557001056f1b5bedf75c6bcb2ce8aed428ffff606f556ffaadceceeff8a0890f3875f008277fff6070556ff05dc6b27edad306388a600f6ba0bfff6071556fe67a5a25da41063de1495d5b18cdbfff6072556fdcff115b14eedde6fc3aa5353f2e4fff6073556fd3e7a3924312399f9aae2e0f868f8fff6074556fcb2ff529eb71e41582cccd5a1ee26fff6075556fc2d415c3db974ab32a51840c0b67edff6076556fbad03e7d883f69ad5b0a186184e06bff6077556fb320d03b2c343d4829abd6075f0cc5ff6078556fabc25204e02828d73c6e80bcdb1a95bf6079556fa4b16f74ee4bb2040a1ec6c15fbbf2df607a556f9deaf736ac1f569deb1b5ae3f36c130f607b556f976bd9952c7aa957f5937d790ef65037607c556f9131271922eaa6064b73a22d0bd4f2bf607d556f8b380f3558668c46c91c49a2f8e967b9607e556f857ddf0117efa215952912839f6473e6607f55565b613ed9806200074f6000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638888a737116100b2578063b19210b011610081578063b3923a9911610066578063b3923a991461032b578063ca2229791461033e578063d69109371461035157600080fd5b8063b19210b014610305578063b33d96b01461031857600080fd5b80638888a737146102b95780638fabd82d146102cc57806392aec23c146102df578063ad615dec146102f257600080fd5b80635bff1d9211610109578063671a11b5116100ee578063671a11b51461027057806367f84adc1461028357806379c91b371461029657600080fd5b80635bff1d92146101f95780636350d7741461024f57600080fd5b8063119220a51461013b5780632bb66e1d14610164578063327494611461019e578063544caa56146101c6575b600080fd5b61014e6101493660046135de565b61037c565b60405161015b9190613663565b60405180910390f35b6101776101723660046136a7565b61058e565b6040805163ffffffff9485168152928416602084015292169181019190915260600161015b565b6101b16101ac3660046136e0565b610626565b6040805192835260208301919091520161015b565b6101d96101d43660046136a7565b610837565b604080516001600160a01b0393841681529290911660208301520161015b565b61020c6102073660046136a7565b610946565b604080516001600160a01b03909716875260208701959095529385019290925263ffffffff908116606085015290811660808401521660a082015260c00161015b565b61026261025d36600461372b565b610c29565b60405190815260200161015b565b61026261027e36600461377e565b610c62565b61014e6102913660046135de565b610e37565b6102a96102a43660046137e5565b61102f565b604051901515815260200161015b565b6102626102c736600461372b565b611153565b61014e6102da366004613832565b61117f565b6102626102ed3660046138c1565b611378565b61026261030036600461394e565b611485565b61026261031336600461377e565b61159b565b61020c6103263660046136e0565b611785565b61014e610339366004613832565b611a1f565b61017761034c36600461397a565b611c04565b61036461035f3660046136a7565b611d7c565b6040516001600160a01b03909116815260200161015b565b6060816103d05760405162461bcd60e51b815260206004820152601c60248201527f5265717569656d466f726d756c613a20494e56414c49445f504154480000000060448201526064015b60405180910390fd5b6103db8260016139c6565b67ffffffffffffffff8111156103f3576103f36139de565b60405190808252806020026020018201604052801561041c578160200160208202803683370190505b509050838160008151811061043357610433613a0d565b60209081029190910101528560005b838110156104fb576000806000806000806104848f8c8c8a81811061046957610469613a0d565b905060200201602081019061047e919061397a565b8a611785565b9550955095509550955095506104b78988815181106104a5576104a5613a0d565b60200260200101518686868686610c62565b896104c38960016139c6565b815181106104d3576104d3613a0d565b60200260200101818152505085975050505050505080806104f390613a3c565b915050610442565b50856001600160a01b0316816001600160a01b0316146105835760405162461bcd60e51b815260206004820152602660248201527f5265717569656d466f726d756c613a20494e56414c49445f544f4b454e5f4f5560448201527f545f50415448000000000000000000000000000000000000000000000000000060648201526084016103c7565b509695505050505050565b6040517fca2229790000000000000000000000000000000000000000000000000000000081526001600160a01b038281166004830152600091829182919086169063ca22297990602401606060405180830381865afa1580156105f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106199190613a74565b9250925092509250925092565b6000806000806106368686610837565b91509150600080886001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa15801561067b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069f9190613ab6565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff169150886001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610702573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107269190613ae7565b6001600160a01b0316846001600160a01b03161480156107b85750886001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561077f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a39190613ae7565b6001600160a01b0316836001600160a01b0316145b6108045760405162461bcd60e51b815260206004820152601d60248201527f5265717569656d466f726d756c613a20496e76616c696420746f6b656e00000060448201526064016103c7565b836001600160a01b0316886001600160a01b031614610824578082610827565b81815b909a909950975050505050505050565b600080826001600160a01b0316846001600160a01b0316036108c15760405162461bcd60e51b815260206004820152602360248201527f5265717569656d466f726d756c613a204944454e544943414c5f41444452455360448201527f534553000000000000000000000000000000000000000000000000000000000060648201526084016103c7565b826001600160a01b0316846001600160a01b0316106108e15782846108e4565b83835b90925090506001600160a01b03821661093f5760405162461bcd60e51b815260206004820152601c60248201527f5265717569656d466f726d756c613a205a45524f5f414444524553530000000060448201526064016103c7565b9250929050565b600080600080600080600080896001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610990573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b49190613ab6565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff1691506000806109e58c611c04565b8097508193508294505050508b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a539190613ae7565b6001600160a01b03168b6001600160a01b031603610ae2578b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610aa9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610acd9190613ae7565b99509297509095509350915084848484610c1b565b8b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b449190613ae7565b6001600160a01b03168b6001600160a01b031603610bd3578b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbe9190613ae7565b99509197509195509350915083858385610c1b565b60405162461bcd60e51b815260206004820152601e60248201527f5265717569656d466f726d756c613a20496e76616c696420746f6b656e41000060448201526064016103c7565b505050509295509295509295565b600080600080600080610c3c8989610946565b9550955095509550955050610c5587858785878661159b565b9998505050505050505050565b6000808711610cd95760405162461bcd60e51b815260206004820152602960248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f494e5060448201527f55545f414d4f554e54000000000000000000000000000000000000000000000060648201526084016103c7565b600086118015610ce95750600085115b610d5b5760405162461bcd60e51b815260206004820152602660248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f4c495160448201527f554944495459000000000000000000000000000000000000000000000000000060648201526084016103c7565b6000610d6983612710613b04565b610d799063ffffffff1689613b29565b90508363ffffffff168563ffffffff1603610dc15780610d9b88612710613b29565b610da591906139c6565b610daf8288613b29565b610db99190613b95565b915050610e2d565b6000808083610dd28b612710613b29565b610ddc91906139c6565b9050610df581610dee8c612710613b29565b8a8a611ee5565b90935091506000610e06848b613b29565b905060ff83168a901b84610e1a8284613ba9565b610e249190613b95565b96505050505050505b9695505050505050565b606081610e865760405162461bcd60e51b815260206004820152601c60248201527f5265717569656d466f726d756c613a20494e56414c49445f504154480000000060448201526064016103c7565b610e918260016139c6565b67ffffffffffffffff811115610ea957610ea96139de565b604051908082528060200260200182016040528015610ed2578160200160208202803683370190505b509050838160018351610ee59190613ba9565b81518110610ef557610ef5613a0d565b602090810291909101015284825b8015610fa75760008080808080610f308f8c8c610f2160018c613ba9565b81811061046957610469613a0d565b955095509550955095509550610f63898881518110610f5157610f51613a0d565b6020026020010151858785878661159b565b89610f6f60018a613ba9565b81518110610f7f57610f7f613a0d565b6020026020010181815250508597505050505050508080610f9f90613bc0565b915050610f03565b50866001600160a01b0316816001600160a01b0316146105835760405162461bcd60e51b815260206004820152602560248201527f5265717569656d466f726d756c613a20494e56414c49445f544f4b454e5f494e60448201527f5f5041544800000000000000000000000000000000000000000000000000000060648201526084016103c7565b60008163ffffffff1660320361105c576110498587613b29565b6110538486613b29565b1015905061114a565b85841015801561106c5750848310155b156110795750600161114a565b8584111580156110895750848311155b156110965750600061114a565b8160006110a4826064613b04565b90506000806000808b8a106110e2576110c08b8a876032611ee5565b90945060ff1692506110d58a8d886032611ee5565b90925060ff16905061110d565b6110ef8c8b886032611ee5565b90945060ff169250611104898c876032611ee5565b90925060ff1690505b600081841061111c578161111e565b835b905061112a8185613ba9565b93506111368183613ba9565b9290921c9390921c92909211159450505050505b95945050505050565b6000806000806000806111668989610946565b9550955095509550955050610c55878686868686610c62565b6060816111ce5760405162461bcd60e51b815260206004820152601c60248201527f5265717569656d466f726d756c613a20494e56414c49445f504154480000000060448201526064016103c7565b6111d98260016139c6565b67ffffffffffffffff8111156111f1576111f16139de565b60405190808252806020026020018201604052801561121a578160200160208202803683370190505b509050838160008151811061123157611231613a0d565b60209081029190910101528560005b838110156112e6576000806000806000806112818b8b8981811061126657611266613a0d565b905060200201602081019061127b919061397a565b89610946565b9550955095509550955095506112a28988815181106104a5576104a5613a0d565b896112ae8960016139c6565b815181106112be576112be613a0d565b60200260200101818152505085975050505050505080806112de90613a3c565b915050611240565b50856001600160a01b0316816001600160a01b03161461136e5760405162461bcd60e51b815260206004820152602660248201527f5265717569656d466f726d756c613a20494e56414c49445f544f4b454e5f4f5560448201527f545f50415448000000000000000000000000000000000000000000000000000060648201526084016103c7565b5095945050505050565b60006dffffffffffffffffffffffffffff8316156113fa576000806113cc6113b36dffffffffffffffffffffffffffff808c169088166139c6565b8a6dffffffffffffffffffffffffffff16896064611ee5565b90925060ff16905089816113e08483613b29565b6113eb911c856139c6565b6113f59190613ba9565b925050505b6dffffffffffffffffffffffffffff82161561147a5760008061144c6114336dffffffffffffffffffffffffffff808b169087166139c6565b896dffffffffffffffffffffffffffff16886064611ee5565b90925060ff16905089816114608483613b29565b61146b911c856139c6565b6114759190613ba9565b925050505b979650505050505050565b60008084116114fc5760405162461bcd60e51b815260206004820152602360248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f414d4f60448201527f554e54000000000000000000000000000000000000000000000000000000000060648201526084016103c7565b60008311801561150c5750600082115b61157e5760405162461bcd60e51b815260206004820152602660248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f4c495160448201527f554944495459000000000000000000000000000000000000000000000000000060648201526084016103c7565b826115898386613b29565b6115939190613b95565b949350505050565b60008087116116125760405162461bcd60e51b815260206004820152602a60248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f4f555460448201527f5055545f414d4f554e540000000000000000000000000000000000000000000060648201526084016103c7565b6000861180156116225750600085115b6116945760405162461bcd60e51b815260206004820152602660248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f4c495160448201527f554944495459000000000000000000000000000000000000000000000000000060648201526084016103c7565b8263ffffffff168463ffffffff16036117095760006116b38888613b29565b6116bf90612710613b29565b905060006116cf84612710613b04565b63ffffffff166116df8a89613ba9565b6116e99190613b29565b90506116f58183613b95565b6117009060016139c6565b92505050610e2d565b600080806117178a89613ba9565b90506117258882888a611ee5565b909350915060006117388a612710613b29565b905060006117468583613b29565b905060ff841682901b61175b88612710613b04565b63ffffffff1660ff861661176f8385613ba9565b61177a92911c613b95565b610e249060016139c6565b600080600080600080600080896001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156117cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f39190613ab6565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff1691506000806118258d8d61058e565b8097508193508294505050508b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561186f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118939190613ae7565b6001600160a01b03168b6001600160a01b031603611922578b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156118e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061190d9190613ae7565b99509297509095509350915084848484611a0f565b8b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611960573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119849190613ae7565b6001600160a01b03168b6001600160a01b031603610bd3578b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156119da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119fe9190613ae7565b995091975091955093509150838583855b5050505093975093979195509350565b606081611a6e5760405162461bcd60e51b815260206004820152601c60248201527f5265717569656d466f726d756c613a20494e56414c49445f504154480000000060448201526064016103c7565b611a798260016139c6565b67ffffffffffffffff811115611a9157611a916139de565b604051908082528060200260200182016040528015611aba578160200160208202803683370190505b509050838160018351611acd9190613ba9565b81518110611add57611add613a0d565b602090810291909101015284825b8015611b7c5760008080808080611b178b8b611b0860018b613ba9565b81811061126657611266613a0d565b955095509550955095509550611b38898881518110610f5157610f51613a0d565b89611b4460018a613ba9565b81518110611b5457611b54613a0d565b6020026020010181815250508597505050505050508080611b7490613bc0565b915050611aeb565b50866001600160a01b0316816001600160a01b03161461136e5760405162461bcd60e51b815260206004820152602560248201527f5265717569656d466f726d756c613a20494e56414c49445f544f4b454e5f494e60448201527f5f5041544800000000000000000000000000000000000000000000000000000060648201526084016103c7565b6000806000836001600160a01b03166332bfe4696040518163ffffffff1660e01b81526004016040805180830381865afa925050508015611c80575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252611c7d91810190613bf5565b60015b611d0857611c8c613c24565b806308c379a003611cc55750611ca0613cb2565b80611cab5750611cc7565b8060405162461bcd60e51b81526004016103c79190613d5a565b505b3d808015611cf1576040519150601f19603f3d011682016040523d82523d6000602084013e611cf6565b606091505b50603280601e93509350935050611d75565b8181876001600160a01b031663d4cadf686040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d6c9190613dcd565b94509450945050505b9193909250565b600080836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611dbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611de19190613ae7565b90506000846001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611e23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e479190613ae7565b9050836001600160a01b0316826001600160a01b03161480611e7a5750836001600160a01b0316816001600160a01b0316145b611ec65760405162461bcd60e51b815260206004820152601e60248201527f5265717569656d466f726d756c613a20496e76616c696420746f6b656e41000060448201526064016103c7565b836001600160a01b0316826001600160a01b031614611593578161114a565b60008084861015611f385760405162461bcd60e51b815260206004820152601b60248201527f6e6f7420737570706f7274205f626173654e203c205f6261736544000000000060448201526064016103c7565b7002000000000000000000000000000000008610611f5557600080fd5b60008086611f676001607f1b8a613b29565b611f719190613b95565b905070015bf0a8b1457695355fb8ac404e7a79e3811015611f9c57611f958161203c565b9150611fa8565b611fa581612672565b91505b60008563ffffffff168763ffffffff1684611fc39190613b29565b611fcd9190613b95565b9050700800000000000000000000000000000000811015611fff57611ff181612781565b607f94509450505050612033565b600061200a82612e03565b905061202661201a82607f613dea565b60ff1683901c82612eb6565b9550935061203392505050565b94509492505050565b6000808080806fd3094c70f034de4b96ff7d5b6f99fcd886106120a1576120736f40000000000000000000000000000000856139c6565b93506fd3094c70f034de4b96ff7d5b6f99fcd86120946001607f1b88613b29565b61209e9190613b95565b95505b6fa45af1e1f40c333b3de1db4dd55f29a78610612100576120d26f20000000000000000000000000000000856139c6565b93506fa45af1e1f40c333b3de1db4dd55f29a76120f36001607f1b88613b29565b6120fd9190613b95565b95505b6f910b022db7ae67ce76b441c27035c6a1861061215f576121316f10000000000000000000000000000000856139c6565b93506f910b022db7ae67ce76b441c27035c6a16121526001607f1b88613b29565b61215c9190613b95565b95505b6f88415abbe9a76bead8d00cf112e4d4a886106121be576121906f08000000000000000000000000000000856139c6565b93506f88415abbe9a76bead8d00cf112e4d4a86121b16001607f1b88613b29565b6121bb9190613b95565b95505b6f84102b00893f64c705e841d5d4064bd3861061221d576121ef6f04000000000000000000000000000000856139c6565b93506f84102b00893f64c705e841d5d4064bd36122106001607f1b88613b29565b61221a9190613b95565b95505b6f8204055aaef1c8bd5c3259f4822735a2861061227c5761224e6f02000000000000000000000000000000856139c6565b93506f8204055aaef1c8bd5c3259f4822735a261226f6001607f1b88613b29565b6122799190613b95565b95505b6f810100ab00222d861931c15e39b44e9986106122db576122ad6f01000000000000000000000000000000856139c6565b93506f810100ab00222d861931c15e39b44e996122ce6001607f1b88613b29565b6122d89190613b95565b95505b6f808040155aabbbe9451521693554f73386106123395761230b6e800000000000000000000000000000856139c6565b93506f808040155aabbbe9451521693554f73361232c6001607f1b88613b29565b6123369190613b95565b95505b6123476001607f1b87613ba9565b92508291506001607f1b61235b8380613b29565b6123659190613b95565b90507001000000000000000000000000000000006123838482613ba9565b61238d9084613b29565b6123979190613b95565b6123a190856139c6565b93506001607f1b6123b28284613b29565b6123bc9190613b95565b91507002000000000000000000000000000000006123ea846faaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa613ba9565b6123f49084613b29565b6123fe9190613b95565b61240890856139c6565b93506001607f1b6124198284613b29565b6124239190613b95565b9150700300000000000000000000000000000000612451846f99999999999999999999999999999999613ba9565b61245b9084613b29565b6124659190613b95565b61246f90856139c6565b93506001607f1b6124808284613b29565b61248a9190613b95565b91507004000000000000000000000000000000006124b8846f92492492492492492492492492492492613ba9565b6124c29084613b29565b6124cc9190613b95565b6124d690856139c6565b93506001607f1b6124e78284613b29565b6124f19190613b95565b915070050000000000000000000000000000000061251f846f8e38e38e38e38e38e38e38e38e38e38e613ba9565b6125299084613b29565b6125339190613b95565b61253d90856139c6565b93506001607f1b61254e8284613b29565b6125589190613b95565b9150700600000000000000000000000000000000612586846f8ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b613ba9565b6125909084613b29565b61259a9190613b95565b6125a490856139c6565b93506001607f1b6125b58284613b29565b6125bf9190613b95565b91507007000000000000000000000000000000006125ed846f89d89d89d89d89d89d89d89d89d89d89613ba9565b6125f79084613b29565b6126019190613b95565b61260b90856139c6565b93506001607f1b61261c8284613b29565b6126269190613b95565b9150700800000000000000000000000000000000612654846f88888888888888888888888888888888613ba9565b61265e9084613b29565b6126689190613b95565b610e2d90856139c6565b60008070010000000000000000000000000000000083106126c35760006126a56126a06001607f1b86613b95565b613514565b60ff811694851c949091506126bf906001607f1b90613b29565b9150505b6001607f1b83111561274557607f5b60ff811615612743576001607f1b6126ea8580613b29565b6126f49190613b95565b9350700100000000000000000000000000000000841061273357600193841c9361271e9082613dea565b60ff166001901b8261273091906139c6565b91505b61273c81613e0d565b90506126d2565b505b6f05b9de1d10bf4103d647b0955897ba806127706f03f80fe03f80fe03f80fe03f80fe03f883613b29565b61277a9190613b95565b9392505050565b60008080806127a06f1000000000000000000000000000000086613e48565b91508190506001607f1b6127b48280613b29565b6127be9190613b95565b90506127d2816710e1b3be415a0000613b29565b6127dc90846139c6565b92506001607f1b6127ed8383613b29565b6127f79190613b95565b905061280b816705a0913f6b1e0000613b29565b61281590846139c6565b92506001607f1b6128268383613b29565b6128309190613b95565b905061284481670168244fdac78000613b29565b61284e90846139c6565b92506001607f1b61285f8383613b29565b6128699190613b95565b905061287c81664807432bc18000613b29565b61288690846139c6565b92506001607f1b6128978383613b29565b6128a19190613b95565b90506128b481660c0135dca04000613b29565b6128be90846139c6565b92506001607f1b6128cf8383613b29565b6128d99190613b95565b90506128ec816601b707b1cdc000613b29565b6128f690846139c6565b92506001607f1b6129078383613b29565b6129119190613b95565b9050612923816536e0f639b800613b29565b61292d90846139c6565b92506001607f1b61293e8383613b29565b6129489190613b95565b905061295a81650618fee9f800613b29565b61296490846139c6565b92506001607f1b6129758383613b29565b61297f9190613b95565b905061299081649c197dcc00613b29565b61299a90846139c6565b92506001607f1b6129ab8383613b29565b6129b59190613b95565b90506129c681640e30dce400613b29565b6129d090846139c6565b92506001607f1b6129e18383613b29565b6129eb9190613b95565b90506129fc8164012ebd1300613b29565b612a0690846139c6565b92506001607f1b612a178383613b29565b612a219190613b95565b9050612a31816317499f00613b29565b612a3b90846139c6565b92506001607f1b612a4c8383613b29565b612a569190613b95565b9050612a66816301a9d480613b29565b612a7090846139c6565b92506001607f1b612a818383613b29565b612a8b9190613b95565b9050612a9a81621c6380613b29565b612aa490846139c6565b92506001607f1b612ab58383613b29565b612abf9190613b95565b9050612ace816201c638613b29565b612ad890846139c6565b92506001607f1b612ae98383613b29565b612af39190613b95565b9050612b0181611ab8613b29565b612b0b90846139c6565b92506001607f1b612b1c8383613b29565b612b269190613b95565b9050612b348161017c613b29565b612b3e90846139c6565b92506001607f1b612b4f8383613b29565b612b599190613b95565b9050612b66816014613b29565b612b7090846139c6565b92506001607f1b612b818383613b29565b612b8b9190613b95565b9050612b98816001613b29565b612ba290846139c6565b92506001607f1b82612bbc6721c3677c82b4000086613b95565b612bc691906139c6565b612bd091906139c6565b92506f10000000000000000000000000000000851615612c245770018ebef9eac820ae8682b9793ac6d1e776612c17847001c3d6a24ed82218787d624d3e5eba95f9613b29565b612c219190613b95565b92505b6f20000000000000000000000000000000851615612c76577001368b2fc6f9609fe7aceb46aa619baed4612c698470018ebef9eac820ae8682b9793ac6d1e778613b29565b612c739190613b95565b92505b6f40000000000000000000000000000000851615612cc7576fbc5ab1b16779be3575bd8f0520a9f21f612cba847001368b2fc6f9609fe7aceb46aa619baed5613b29565b612cc49190613b95565b92505b6001607f1b851615612d0b576f454aaa8efe072e7f6ddbab84b40a55c9612cfe846fbc5ab1b16779be3575bd8f0520a9f21e613b29565b612d089190613b95565b92505b700100000000000000000000000000000000851615612d5c576f0960aadc109e7a3bf4578099615711ea612d4f846f454aaa8efe072e7f6ddbab84b40a55c5613b29565b612d599190613b95565b92505b700200000000000000000000000000000000851615612dac576e2bf84208204f5977f9a8cf01fdce3d612d9f846f0960aadc109e7a3bf4578099615711d7613b29565b612da99190613b95565b92505b700400000000000000000000000000000000851615612dfa576d03c6ab775dd0b95b4cbee7e65d11612ded846e2bf84208204f5977f9a8cf01fdc307613b29565b612df79190613b95565b92505b50909392505050565b60006020607f5b60ff8116612e19836001613e5c565b60ff161015612e6c5760006002612e308385613e5c565b612e3a9190613e81565b90508460008260ff1660808110612e5357612e53613a0d565b015410612e6257809250612e66565b8091505b50612e0a565b8360008260ff1660808110612e8357612e83613a0d565b015410612e91579392505050565b8360008360ff1660808110612ea857612ea8613a0d565b015410610136575092915050565b6000828160ff8416612ec88380613b29565b901c9150612ee6826f03442c4e6074a82f1797f72ac0000000613b29565b612ef090826139c6565b905060ff8416612f008684613b29565b901c9150612f1e826f0116b96f757c380fb287fd0e40000000613b29565b612f2890826139c6565b905060ff8416612f388684613b29565b901c9150612f55826e45ae5bdd5f0e03eca1ff4390000000613b29565b612f5f90826139c6565b905060ff8416612f6f8684613b29565b901c9150612f8c826e0defabf91302cd95b9ffda50000000613b29565b612f9690826139c6565b905060ff8416612fa68684613b29565b901c9150612fc3826e02529ca9832b22439efff9b8000000613b29565b612fcd90826139c6565b905060ff8416612fdd8684613b29565b901c9150612ff9826d54f1cf12bd04e516b6da88000000613b29565b61300390826139c6565b905060ff84166130138684613b29565b901c915061302f826d0a9e39e257a09ca2d6db51000000613b29565b61303990826139c6565b905060ff84166130498684613b29565b901c9150613065826d012e066e7b839fa050c309000000613b29565b61306f90826139c6565b905060ff841661307f8684613b29565b901c915061309a826c1e33d7d926c329a1ad1a800000613b29565b6130a490826139c6565b905060ff84166130b48684613b29565b901c91506130cf826c02bee513bdb4a6b19b5f800000613b29565b6130d990826139c6565b905060ff84166130e98684613b29565b901c9150613103826b3a9316fa79b88eccf2a00000613b29565b61310d90826139c6565b905060ff841661311d8684613b29565b901c9150613137826b048177ebe1fa812375200000613b29565b61314190826139c6565b905060ff84166131518684613b29565b901c915061316a826a5263fe90242dcbacf00000613b29565b61317490826139c6565b905060ff84166131848684613b29565b901c915061319d826a057e22099c030d94100000613b29565b6131a790826139c6565b905060ff84166131b78684613b29565b901c91506131cf826957e22099c030d9410000613b29565b6131d990826139c6565b905060ff84166131e98684613b29565b901c91506132018269052b6b54569976310000613b29565b61320b90826139c6565b905060ff841661321b8684613b29565b901c915061323282684985f67696bf748000613b29565b61323c90826139c6565b905060ff841661324c8684613b29565b901c9150613263826803dea12ea99e498000613b29565b61326d90826139c6565b905060ff841661327d8684613b29565b901c9150613293826731880f2214b6e000613b29565b61329d90826139c6565b905060ff84166132ad8684613b29565b901c91506132c38267025bcff56eb36000613b29565b6132cd90826139c6565b905060ff84166132dd8684613b29565b901c91506132f282661b722e10ab1000613b29565b6132fc90826139c6565b905060ff841661330c8684613b29565b901c9150613321826601317c70077000613b29565b61332b90826139c6565b905060ff841661333b8684613b29565b901c915061334f82650cba84aafa00613b29565b61335990826139c6565b905060ff84166133698684613b29565b901c915061337c826482573a0a00613b29565b61338690826139c6565b905060ff84166133968684613b29565b901c91506133a9826405035ad900613b29565b6133b390826139c6565b905060ff84166133c38684613b29565b901c91506133d582632f881b00613b29565b6133df90826139c6565b905060ff84166133ef8684613b29565b901c9150613401826301b29340613b29565b61340b90826139c6565b905060ff841661341b8684613b29565b901c915061342c82620efc40613b29565b61343690826139c6565b905060ff84166134468684613b29565b901c915061345682617fe0613b29565b61346090826139c6565b905060ff84166134708684613b29565b901c915061348082610420613b29565b61348a90826139c6565b905060ff841661349a8684613b29565b901c91506134a9826021613b29565b6134b390826139c6565b905060ff84166134c38684613b29565b901c91506134d2826001613b29565b6134dc90826139c6565b9050600160ff85161b856135006f0688589cc0e9505e2f2fee558000000084613b95565b61350a91906139c6565b61114a91906139c6565b600080610100831015613547575b600183111561354257600192831c9261353b9082613e5c565b9050613522565b61357b565b60805b60ff81161561357957600160ff82161b841061356e5760ff81169390931c92908117905b60011c607f1661354a565b505b92915050565b6001600160a01b038116811461359657600080fd5b50565b60008083601f8401126135ab57600080fd5b50813567ffffffffffffffff8111156135c357600080fd5b6020830191508360208260051b850101111561093f57600080fd5b60008060008060008060a087890312156135f757600080fd5b863561360281613581565b9550602087013561361281613581565b9450604087013561362281613581565b935060608701359250608087013567ffffffffffffffff81111561364557600080fd5b61365189828a01613599565b979a9699509497509295939492505050565b6020808252825182820181905260009190848201906040850190845b8181101561369b5783518352928401929184019160010161367f565b50909695505050505050565b600080604083850312156136ba57600080fd5b82356136c581613581565b915060208301356136d581613581565b809150509250929050565b6000806000606084860312156136f557600080fd5b833561370081613581565b9250602084013561371081613581565b9150604084013561372081613581565b809150509250925092565b60008060006060848603121561374057600080fd5b833561374b81613581565b9250602084013561375b81613581565b929592945050506040919091013590565b63ffffffff8116811461359657600080fd5b60008060008060008060c0878903121561379757600080fd5b86359550602087013594506040870135935060608701356137b78161376c565b925060808701356137c78161376c565b915060a08701356137d78161376c565b809150509295509295509295565b600080600080600060a086880312156137fd57600080fd5b8535945060208601359350604086013592506060860135915060808601356138248161376c565b809150509295509295909350565b60008060008060006080868803121561384a57600080fd5b853561385581613581565b9450602086013561386581613581565b935060408601359250606086013567ffffffffffffffff81111561388857600080fd5b61389488828901613599565b969995985093965092949392505050565b6dffffffffffffffffffffffffffff8116811461359657600080fd5b600080600080600080600060e0888a0312156138dc57600080fd5b8735965060208801356138ee816138a5565b955060408801356138fe816138a5565b9450606088013561390e8161376c565b9350608088013561391e8161376c565b925060a088013561392e816138a5565b915060c088013561393e816138a5565b8091505092959891949750929550565b60008060006060848603121561396357600080fd5b505081359360208301359350604090920135919050565b60006020828403121561398c57600080fd5b813561277a81613581565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082198211156139d9576139d9613997565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613a6d57613a6d613997565b5060010190565b600080600060608486031215613a8957600080fd5b8351613a948161376c565b6020850151909350613aa58161376c565b60408501519092506137208161376c565b600080600060608486031215613acb57600080fd5b8351613ad6816138a5565b6020850151909350613aa5816138a5565b600060208284031215613af957600080fd5b815161277a81613581565b600063ffffffff83811690831681811015613b2157613b21613997565b039392505050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613b6157613b61613997565b500290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082613ba457613ba4613b66565b500490565b600082821015613bbb57613bbb613997565b500390565b600081613bcf57613bcf613997565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b60008060408385031215613c0857600080fd5b8251613c138161376c565b60208401519092506136d58161376c565b600060033d1115613c3d5760046000803e5060005160e01c5b90565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff82111715613cab577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040525050565b600060443d1015613cc05790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc803d016004833e81513d67ffffffffffffffff8160248401118184111715613d0e57505050505090565b8285019150815181811115613d265750505050505090565b843d8701016020828501011115613d405750505050505090565b613d4f60208286010187613c40565b509095945050505050565b600060208083528351808285015260005b81811015613d8757858101830151858201604001528201613d6b565b81811115613d99576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b600060208284031215613ddf57600080fd5b815161277a8161376c565b600060ff821660ff841680821015613e0457613e04613997565b90039392505050565b600060ff821680613e2057613e20613997565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0192915050565b600082613e5757613e57613b66565b500690565b600060ff821660ff84168060ff03821115613e7957613e79613997565b019392505050565b600060ff831680613e9457613e94613b66565b8060ff8416049150509291505056fea2646970667358221220438b563192bb4a0b7abf91b1dda34ca6878bf7c04bc06e001bbd3f30fba8e6ab64736f6c634300080d0033";

export class RequiemFormula__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RequiemFormula> {
    return super.deploy(overrides || {}) as Promise<RequiemFormula>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RequiemFormula {
    return super.attach(address) as RequiemFormula;
  }
  connect(signer: Signer): RequiemFormula__factory {
    return super.connect(signer) as RequiemFormula__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RequiemFormulaInterface {
    return new utils.Interface(_abi) as RequiemFormulaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RequiemFormula {
    return new Contract(address, _abi, signerOrProvider) as RequiemFormula;
  }
}
