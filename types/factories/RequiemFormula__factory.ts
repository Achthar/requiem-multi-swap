/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RequiemFormula,
  RequiemFormulaInterface,
} from "../RequiemFormula";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reserve0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserve1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance0Adjusted",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance1Adjusted",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
    ],
    name: "ensureConstantValue",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveOut",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightIn",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightOut",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    name: "getAmountIn",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveOut",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightIn",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightOut",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    name: "getAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getFactoryAmountsIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getFactoryAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    name: "getFactoryReserveAndWeights",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightA",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightB",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "getFactoryWeightsAndSwapFee",
    outputs: [
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    name: "getOtherToken",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "getPairAmountIn",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "getPairAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    name: "getReserveAndWeights",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightA",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightB",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "getWeightsAndSwapFee",
    outputs: [
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalLiquidity",
        type: "uint256",
      },
      {
        internalType: "uint112",
        name: "reserve0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "reserve1",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint112",
        name: "collectedFee0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "collectedFee1",
        type: "uint112",
      },
    ],
    name: "mintLiquidityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    name: "quote",
    outputs: [
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "sortTokens",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061073f6001641c35fedd1560601b036020556001646c3390ecc9605e1b036021556001640cf801476160611b0360225560016431bdb23e1d605f1b0360235560016502fb1d8fe083605b1b0360245560016505b771955b37605a1b036025556001650af67a93bb5160591b0360265560016515060c256cb360581b036027556001651428a2f98d7360581b036028556001654d515663970960561b03602955600165944620b0e70f60551b03602a55600166011c592761c66760541b03602b5560016602214d10d014eb60531b03602c55600166020ade36b7dbef60531b03602d5560016603eab73b3bbfe360521b03602e556001660782ee3593f6d760511b03602f556001661ccf4b44bb4821604f1b0360305560016606e7f88ad8a77760511b0360315560016669f3d1c921891d604d1b03603255600166cb2ff529eb71e5604c1b03603355600166c2d415c3db974b604c1b0360345560016702eb40f9f620fda7604a1b0360355560016705990681d961a1eb60491b03603655600167055e12902701414760491b0360375560016714962dee9dc9764160471b0360385560016704ef57b9b560fab560491b0360395560016712ed7b32a58f552b60471b03603a556001679131271922eaa60760441b03603b556001678b380f3558668c4760441b03603c556001680215f77c045fbe885760421b03603d556001600160831b03603e556001670f577eded5773a1160471b03603f556001680eb5ec597592befbf5603f1b036040556001681c35fedd14b861eb05603e1b036041556001683619c87664579bc94b603d1b0360425560016867c00a3b07ffc01fd7603c1b03604355600168c6f6c8f8739773a7a5603b1b03604455600168bec763f8209b7a72b1603b1b0360455560016902dbb8caad9b7097b91b60391b03604655600169057b3d49dda84556d6f760381b03604755600169054183095b2c8ececf3160381b036048556001690a14517cc6b9457111ef60371b0360495560016913545598e5c23276ccf160361b03604a556001692511882c39c3adea96ff60351b03604b55600169471649d87199aa99075760341b03604c557004429a21a029d4c1457cfbffffffffffff604d55700415bc6d6fb7dd71af2cb3ffffffffffff604e557003eab73b3bbfe282243ce1ffffffffffff604f557003c1771ac9fb6b4c18e229ffffffffffff605055700399e96897690418f785257fffffffffff605155700373fc456c53bb779bf0ea9fffffffffff60525570034f9e8e490c48e67e6ab8bfffffffffff60535570032cbfd4a7adc790560b3337ffffffffff60545570030b50570f6e5d2acca94613ffffffffff6055557002eb40f9f620fda6b56c2861ffffffffff6056557002cc8340ecb0d0f520a6af58ffffffffff6057557002af09481380a0a35cf1ba02ffffffffff605855700292c5bdd3b92ec810287b1b3fffffffff605955700277abdcdab07d5a77ac6d6b9fffffffff605a5570025daf6654b1eaa55fd64df5efffffffff605b55700244c49c648baa98192dce88b7ffffffff605c5570022ce03cd5619a311b2471268bffffffff605d55700215f77c045fbe885654a44a0fffffffff605e556001600160811b03605f557001eaefdbdaaee7421fc4d3ede5ffffffff6060557001d6bd8b2eb257df7e8ca57b09bfffffff6061557001c35fedd14b861eb0443f7f133fffffff6062557001b0ce43b322bcde4a56e8ada5afffffff60635570019f0028ec1fff007f5a195a39dfffffff60645570018ded91f0e72ee74f49b15ba527ffffff60655570017d8ec7f04136f4e5615fd41a63ffffff60665570016ddc6556cdb84bdc8d12d22e6fffffff60675570015ecf52776a1155b5bd8395814f7fffff60685570015060c256cb23b3b3cc3754cf40ffffff6069557001428a2f98d728ae223ddab715be3fffff606a5570013545598e5c23276ccf0ede68034fffff606b557001288c4161ce1d6f54b7f61081194fffff606c5570011c592761c666aa641d5a01a40f17ffff606d55700110a688680a7530515f3e6e6cfdcdffff606e557001056f1b5bedf75c6bcb2ce8aed428ffff606f556ffaadceceeff8a0890f3875f008277fff6070556ff05dc6b27edad306388a600f6ba0bfff6071556fe67a5a25da41063de1495d5b18cdbfff6072556fdcff115b14eedde6fc3aa5353f2e4fff6073556fd3e7a3924312399f9aae2e0f868f8fff6074556fcb2ff529eb71e41582cccd5a1ee26fff6075556fc2d415c3db974ab32a51840c0b67edff6076556fbad03e7d883f69ad5b0a186184e06bff6077556fb320d03b2c343d4829abd6075f0cc5ff6078556fabc25204e02828d73c6e80bcdb1a95bf6079556fa4b16f74ee4bb2040a1ec6c15fbbf2df607a556f9deaf736ac1f569deb1b5ae3f36c130f607b556f976bd9952c7aa957f5937d790ef65037607c556f9131271922eaa6064b73a22d0bd4f2bf607d556f8b380f3558668c46c91c49a2f8e967b9607e556f857ddf0117efa215952912839f6473e6607f55565b6139b48061074e6000396000f3fe608060405234801561001057600080fd5b50600436106100e65760003560e01c8063119220a5146100eb5780632bb66e1d14610114578063327494611461014e578063544caa56146101765780635bff1d92146101a95780636350d774146101ff578063671a11b51461022057806367f84adc1461023357806379c91b37146102465780638888a737146102695780638fabd82d1461027c57806392aec23c1461028f578063ad615dec146102a2578063b19210b0146102b5578063b33d96b0146102c8578063b3923a99146102db578063ca222979146102ee578063d691093714610301575b600080fd5b6100fe6100f93660046130c0565b610321565b60405161010b9190613144565b60405180910390f35b610127610122366004613188565b6104b0565b6040805163ffffffff9485168152928416602084015292169181019190915260600161010b565b61016161015c3660046131c1565b61052f565b6040805192835260208301919091520161010b565b610189610184366004613188565b610732565b604080516001600160a01b0393841681529290911660208301520161010b565b6101bc6101b7366004613188565b610827565b604080516001600160a01b03909716875260208701959095529385019290925263ffffffff908116606085015290811660808401521660a082015260c00161010b565b61021261020d36600461320c565b610ace565b60405190815260200161010b565b61021261022e36600461325f565b610b0b565b6100fe6102413660046130c0565b610cb8565b6102596102543660046132c6565b610e29565b604051901515815260200161010b565b61021261027736600461320c565b610f4e565b6100fe61028a366004613313565b610f87565b61021261029d36600461339a565b6110f9565b6102126102b0366004613427565b6111cc565b6102126102c336600461325f565b611272565b6101bc6102d63660046131c1565b6113ea565b6100fe6102e9366004613313565b611678565b6101276102fc366004613453565b6117d6565b61031461030f366004613188565b611931565b60405161010b9190613470565b6060816103495760405162461bcd60e51b815260040161034090613484565b60405180910390fd5b6103548260016134d0565b6001600160401b0381111561036b5761036b6134e8565b604051908082528060200260200182016040528015610394578160200160208202803683370190505b50905083816000815181106103ab576103ab6134fe565b60209081029190910101528560005b83811015610473576000806000806000806103fc8f8c8c8a8181106103e1576103e16134fe565b90506020020160208101906103f69190613453565b8a6113ea565b95509550955095509550955061042f89888151811061041d5761041d6134fe565b60200260200101518686868686610b0b565b8961043b8960016134d0565b8151811061044b5761044b6134fe565b602002602001018181525050859750505050505050808061046b90613514565b9150506103ba565b50856001600160a01b0316816001600160a01b0316146104a55760405162461bcd60e51b81526004016103409061352f565b509695505050505050565b6000806000846001600160a01b031663ca222979856040518263ffffffff1660e01b81526004016104e19190613470565b606060405180830381865afa1580156104fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105229190613575565b9250925092509250925092565b60008060008061053f8686610732565b91509150600080886001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610584573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a891906135b7565b506001600160701b031691506001600160701b03169150886001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062191906135e8565b6001600160a01b0316846001600160a01b03161480156106b35750886001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561067a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069e91906135e8565b6001600160a01b0316836001600160a01b0316145b6106ff5760405162461bcd60e51b815260206004820152601d60248201527f5265717569656d466f726d756c613a20496e76616c696420746f6b656e0000006044820152606401610340565b836001600160a01b0316886001600160a01b03161461071f578082610722565b81815b909a909950975050505050505050565b600080826001600160a01b0316846001600160a01b031614156107a35760405162461bcd60e51b815260206004820152602360248201527f5265717569656d466f726d756c613a204944454e544943414c5f41444452455360448201526253455360e81b6064820152608401610340565b826001600160a01b0316846001600160a01b0316106107c35782846107c6565b83835b90925090506001600160a01b0382166108205760405162461bcd60e51b815260206004820152601c60248201527b5265717569656d466f726d756c613a205a45524f5f4144445245535360201b6044820152606401610340565b9250929050565b600080600080600080600080896001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610871573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089591906135b7565b506001600160701b031691506001600160701b031691506000806108b88c6117d6565b8097508193508294505050508b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610902573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092691906135e8565b6001600160a01b03168b6001600160a01b031614156109b6578b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561097d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a191906135e8565b99509297509095509350915084848484610ac0565b8b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1891906135e8565b6001600160a01b03168b6001600160a01b03161415610aa8578b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9391906135e8565b99509197509195509350915083858385610ac0565b60405162461bcd60e51b815260040161034090613605565b505050509295509295509295565b6000806000806000806000610ae38a8a610827565b955095509550955095509550610afd888587858786611272565b9a9950505050505050505050565b6000808711610b6e5760405162461bcd60e51b815260206004820152602960248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f494e50604482015268155517d05353d5539560ba1b6064820152608401610340565b600086118015610b7e5750600085115b610b9a5760405162461bcd60e51b81526004016103409061363c565b6000610bc0610bab84612710613682565b63ffffffff1689611a6a90919063ffffffff16565b90508363ffffffff168563ffffffff161415610c0857610bec81610be689612710611a6a565b90611a7d565b610bf68783611a6a565b610c0091906136bd565b915050610cae565b60008080610c1c84610be68c612710611a6a565b9050610c3581610c2e8c612710611a6a565b8a8a611a9a565b90935091506000610c468a85611a6a565b905060ff83168a901b6000610c5b82846136d1565b11610c905760405162461bcd60e51b8152602060048201526005602482015264090929092960db1b6044820152606401610340565b84610c9b82846136d1565b610ca591906136bd565b96505050505050505b9695505050505050565b606081610cd75760405162461bcd60e51b815260040161034090613484565b610ce28260016134d0565b6001600160401b03811115610cf957610cf96134e8565b604051908082528060200260200182016040528015610d22578160200160208202803683370190505b509050838160018351610d3591906136d1565b81518110610d4557610d456134fe565b602090810291909101015284825b8015610df75760008080808080610d808f8c8c610d7160018c6136d1565b8181106103e1576103e16134fe565b955095509550955095509550610db3898881518110610da157610da16134fe565b60200260200101518587858786611272565b89610dbf60018a6136d1565b81518110610dcf57610dcf6134fe565b6020026020010181815250508597505050505050508080610def906136e8565b915050610d53565b50866001600160a01b0316816001600160a01b0316146104a55760405162461bcd60e51b8152600401610340906136ff565b60008163ffffffff1660321415610e5757610e448686611a6a565b610e4e8585611a6a565b10159050610f45565b858410158015610e675750848310155b15610e7457506001610f45565b858411158015610e845750848311155b15610e9157506000610f45565b816000610e9f826064613682565b90506000806000808b8a10610edd57610ebb8b8a876032611a9a565b90945060ff169250610ed08a8d886032611a9a565b90925060ff169050610f08565b610eea8c8b886032611a9a565b90945060ff169250610eff898c876032611a9a565b90925060ff1690505b6000818410610f175781610f19565b835b9050610f2581856136d1565b9350610f3181836136d1565b9290921c9390921c92909211159450505050505b95945050505050565b600080600080600080610f618989610827565b9550955095509550955050610f7a878686868686610b0b565b9998505050505050505050565b606081610fa65760405162461bcd60e51b815260040161034090613484565b610fb18260016134d0565b6001600160401b03811115610fc857610fc86134e8565b604051908082528060200260200182016040528015610ff1578160200160208202803683370190505b5090508381600081518110611008576110086134fe565b60209081029190910101528560005b838110156110bd576000806000806000806110588b8b8981811061103d5761103d6134fe565b90506020020160208101906110529190613453565b89610827565b95509550955095509550955061107989888151811061041d5761041d6134fe565b896110858960016134d0565b81518110611095576110956134fe565b60200260200101818152505085975050505050505080806110b590613514565b915050611017565b50856001600160a01b0316816001600160a01b0316146110ef5760405162461bcd60e51b81526004016103409061352f565b5095945050505050565b60006001600160701b03831615611165576000806111386111266001600160701b03878116908c16611a7d565b8a6001600160701b0316896064611a9a565b90925060ff1690506111608a61115a836111528387611a6a565b87911c611a7d565b90611bd5565b925050505b6001600160701b038216156111c1576000806111a26111906001600160701b03868116908b16611a7d565b896001600160701b0316886064611a9a565b90925060ff1690506111bc8a61115a836111528387611a6a565b925050505b979650505050505050565b60008084116112295760405162461bcd60e51b815260206004820152602360248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f414d4f60448201526215539560ea1b6064820152608401610340565b6000831180156112395750600082115b6112555760405162461bcd60e51b81526004016103409061363c565b826112608584611a6a565b61126a91906136bd565b949350505050565b60008087116112d65760405162461bcd60e51b815260206004820152602a60248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f4f555460448201526914155517d05353d5539560b21b6064820152608401610340565b6000861180156112e65750600085115b6113025760405162461bcd60e51b81526004016103409061363c565b8263ffffffff168463ffffffff16141561137457600061132e612710611328898b611a6a565b90611a6a565b9050600061135a61134185612710613682565b63ffffffff166113288b8a611bd590919063ffffffff16565b905061136b6001610be683856136bd565b92505050610cae565b60008080611382888b611bd5565b90506113908882888a611a9a565b909350915060006113a38a612710611a6a565b905060006113b18286611a6a565b905060ff841682901b610ca560016113cb8a612710613682565b63ffffffff1660ff88166113df85876136d1565b610be692911c6136bd565b600080600080600080600080896001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611434573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145891906135b7565b506001600160701b031691506001600160701b0316915060008061147c8d8d6104b0565b8097508193508294505050508b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ea91906135e8565b6001600160a01b03168b6001600160a01b0316141561157a578b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611541573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061156591906135e8565b99509297509095509350915084848484611668565b8b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115dc91906135e8565b6001600160a01b03168b6001600160a01b03161415610aa8578b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611633573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165791906135e8565b995091975091955093509150838583855b5050505093975093979195509350565b6060816116975760405162461bcd60e51b815260040161034090613484565b6116a28260016134d0565b6001600160401b038111156116b9576116b96134e8565b6040519080825280602002602001820160405280156116e2578160200160208202803683370190505b5090508381600183516116f591906136d1565b81518110611705576117056134fe565b602090810291909101015284825b80156117a4576000808080808061173f8b8b61173060018b6136d1565b81811061103d5761103d6134fe565b955095509550955095509550611760898881518110610da157610da16134fe565b8961176c60018a6136d1565b8151811061177c5761177c6134fe565b602002602001018181525050859750505050505050808061179c906136e8565b915050611713565b50866001600160a01b0316816001600160a01b0316146110ef5760405162461bcd60e51b8152600401610340906136ff565b6000806000836001600160a01b03166332bfe4696040518163ffffffff1660e01b81526004016040805180830381865afa925050508015611834575060408051601f3d908101601f1916820190925261183191810190613744565b60015b6118bd57611840613773565b806308c379a0141561187a57506118556137c9565b80611860575061187c565b8060405162461bcd60e51b81526004016103409190613852565b505b3d8080156118a6576040519150601f19603f3d011682016040523d82523d6000602084013e6118ab565b606091505b50603280601e9350935093505061192a565b8181876001600160a01b031663d4cadf686040518163ffffffff1660e01b8152600401602060405180830381865afa1580156118fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061192191906138a7565b94509450945050505b9193909250565b600080836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611972573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061199691906135e8565b90506000846001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156119d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119fc91906135e8565b9050836001600160a01b0316826001600160a01b03161480611a2f5750836001600160a01b0316816001600160a01b0316145b611a4b5760405162461bcd60e51b815260040161034090613605565b836001600160a01b0316826001600160a01b03161461126a5781610f45565b6000611a7682846138c4565b9392505050565b600080611a8a83856134d0565b9050611a76848210156000611be3565b60008084861015611aeb5760405162461bcd60e51b815260206004820152601b60248201527a1b9bdd081cdd5c1c1bdc9d0817d8985cd953880f0817d8985cd951602a1b6044820152606401610340565b600160811b8610611afb57600080fd5b60008086611b0d6001607f1b8a6138c4565b611b1791906136bd565b905070015bf0a8b1457695355fb8ac404e7a79e3811015611b4257611b3b81611bf5565b9150611b4e565b611b4b81612164565b91505b60008563ffffffff168763ffffffff1684611b6991906138c4565b611b7391906136bd565b9050600160831b811015611b9857611b8a81612252565b607f94509450505050611bcc565b6000611ba38261287d565b9050611bbf611bb382607f6138e3565b60ff1683901c82612930565b95509350611bcc92505050565b94509492505050565b6000611a7683836001612f89565b81611bf157611bf181612fa4565b5050565b6000808080806fd3094c70f034de4b96ff7d5b6f99fcd88610611c4e57611c206001607e1b856134d0565b93506fd3094c70f034de4b96ff7d5b6f99fcd8611c416001607f1b886138c4565b611c4b91906136bd565b95505b6fa45af1e1f40c333b3de1db4dd55f29a78610611ca157611c736001607d1b856134d0565b93506fa45af1e1f40c333b3de1db4dd55f29a7611c946001607f1b886138c4565b611c9e91906136bd565b95505b6f910b022db7ae67ce76b441c27035c6a18610611cf457611cc66001607c1b856134d0565b93506f910b022db7ae67ce76b441c27035c6a1611ce76001607f1b886138c4565b611cf191906136bd565b95505b6f88415abbe9a76bead8d00cf112e4d4a88610611d4757611d196001607b1b856134d0565b93506f88415abbe9a76bead8d00cf112e4d4a8611d3a6001607f1b886138c4565b611d4491906136bd565b95505b6f84102b00893f64c705e841d5d4064bd38610611d9a57611d6c6001607a1b856134d0565b93506f84102b00893f64c705e841d5d4064bd3611d8d6001607f1b886138c4565b611d9791906136bd565b95505b6f8204055aaef1c8bd5c3259f4822735a28610611ded57611dbf600160791b856134d0565b93506f8204055aaef1c8bd5c3259f4822735a2611de06001607f1b886138c4565b611dea91906136bd565b95505b6f810100ab00222d861931c15e39b44e998610611e4057611e12600160781b856134d0565b93506f810100ab00222d861931c15e39b44e99611e336001607f1b886138c4565b611e3d91906136bd565b95505b6f808040155aabbbe9451521693554f7338610611e9357611e65600160771b856134d0565b93506f808040155aabbbe9451521693554f733611e866001607f1b886138c4565b611e9091906136bd565b95505b611ea16001607f1b876136d1565b92508291506001607f1b611eb583806138c4565b611ebf91906136bd565b9050600160801b611ed084826136d1565b611eda90846138c4565b611ee491906136bd565b611eee90856134d0565b93506001607f1b611eff82846138c4565b611f0991906136bd565b9150600160811b611f2a846faaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6136d1565b611f3490846138c4565b611f3e91906136bd565b611f4890856134d0565b93506001607f1b611f5982846138c4565b611f6391906136bd565b9150600360801b611f84846f999999999999999999999999999999996136d1565b611f8e90846138c4565b611f9891906136bd565b611fa290856134d0565b93506001607f1b611fb382846138c4565b611fbd91906136bd565b9150600160821b611fde846f924924924924924924924924924924926136d1565b611fe890846138c4565b611ff291906136bd565b611ffc90856134d0565b93506001607f1b61200d82846138c4565b61201791906136bd565b9150600560801b612038846f8e38e38e38e38e38e38e38e38e38e38e6136d1565b61204290846138c4565b61204c91906136bd565b61205690856134d0565b93506001607f1b61206782846138c4565b61207191906136bd565b9150600360811b612092846f8ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b6136d1565b61209c90846138c4565b6120a691906136bd565b6120b090856134d0565b93506001607f1b6120c182846138c4565b6120cb91906136bd565b9150600760801b6120ec846f89d89d89d89d89d89d89d89d89d89d896136d1565b6120f690846138c4565b61210091906136bd565b61210a90856134d0565b93506001607f1b61211b82846138c4565b61212591906136bd565b9150600160831b612146846f888888888888888888888888888888886136d1565b61215090846138c4565b61215a91906136bd565b610cae90856134d0565b600080600160801b83106121a857600061218a6121856001607f1b866136bd565b612ff7565b60ff811694851c949091506121a4906001607f1b906138c4565b9150505b6001607f1b83111561221d57607f5b60ff81161561221b576001607f1b6121cf85806138c4565b6121d991906136bd565b9350600160801b841061220b57600193841c936121f690826138e3565b60ff166001901b8261220891906134d0565b91505b61221481613906565b90506121b7565b505b6f05b9de1d10bf4103d647b0955897ba806122486f03f80fe03f80fe03f80fe03f80fe03f8836138c4565b611a7691906136bd565b60008080806122656001607c1b86613923565b91508190506001607f1b61227982806138c4565b61228391906136bd565b9050612297816710e1b3be415a00006138c4565b6122a190846134d0565b92506001607f1b6122b283836138c4565b6122bc91906136bd565b90506122d0816705a0913f6b1e00006138c4565b6122da90846134d0565b92506001607f1b6122eb83836138c4565b6122f591906136bd565b905061230981670168244fdac780006138c4565b61231390846134d0565b92506001607f1b61232483836138c4565b61232e91906136bd565b905061234181664807432bc180006138c4565b61234b90846134d0565b92506001607f1b61235c83836138c4565b61236691906136bd565b905061237981660c0135dca040006138c4565b61238390846134d0565b92506001607f1b61239483836138c4565b61239e91906136bd565b90506123b1816601b707b1cdc0006138c4565b6123bb90846134d0565b92506001607f1b6123cc83836138c4565b6123d691906136bd565b90506123e8816536e0f639b8006138c4565b6123f290846134d0565b92506001607f1b61240383836138c4565b61240d91906136bd565b905061241f81650618fee9f8006138c4565b61242990846134d0565b92506001607f1b61243a83836138c4565b61244491906136bd565b905061245581649c197dcc006138c4565b61245f90846134d0565b92506001607f1b61247083836138c4565b61247a91906136bd565b905061248b81640e30dce4006138c4565b61249590846134d0565b92506001607f1b6124a683836138c4565b6124b091906136bd565b90506124c18164012ebd13006138c4565b6124cb90846134d0565b92506001607f1b6124dc83836138c4565b6124e691906136bd565b90506124f6816317499f006138c4565b61250090846134d0565b92506001607f1b61251183836138c4565b61251b91906136bd565b905061252b816301a9d4806138c4565b61253590846134d0565b92506001607f1b61254683836138c4565b61255091906136bd565b905061255f81621c63806138c4565b61256990846134d0565b92506001607f1b61257a83836138c4565b61258491906136bd565b9050612593816201c6386138c4565b61259d90846134d0565b92506001607f1b6125ae83836138c4565b6125b891906136bd565b90506125c681611ab86138c4565b6125d090846134d0565b92506001607f1b6125e183836138c4565b6125eb91906136bd565b90506125f98161017c6138c4565b61260390846134d0565b92506001607f1b61261483836138c4565b61261e91906136bd565b905061262b8160146138c4565b61263590846134d0565b92506001607f1b61264683836138c4565b61265091906136bd565b905061265d8160016138c4565b61266790846134d0565b92506001607f1b826126816721c3677c82b40000866136bd565b61268b91906134d0565b61269591906134d0565b92506001607c1b8516156126dd5770018ebef9eac820ae8682b9793ac6d1e7766126d0847001c3d6a24ed82218787d624d3e5eba95f96138c4565b6126da91906136bd565b92505b6001607d1b851615612723577001368b2fc6f9609fe7aceb46aa619baed46127168470018ebef9eac820ae8682b9793ac6d1e7786138c4565b61272091906136bd565b92505b6001607e1b851615612768576fbc5ab1b16779be3575bd8f0520a9f21f61275b847001368b2fc6f9609fe7aceb46aa619baed56138c4565b61276591906136bd565b92505b6001607f1b8516156127ac576f454aaa8efe072e7f6ddbab84b40a55c961279f846fbc5ab1b16779be3575bd8f0520a9f21e6138c4565b6127a991906136bd565b92505b600160801b8516156127f0576f0960aadc109e7a3bf4578099615711ea6127e3846f454aaa8efe072e7f6ddbab84b40a55c56138c4565b6127ed91906136bd565b92505b600160811b851615612833576e2bf84208204f5977f9a8cf01fdce3d612826846f0960aadc109e7a3bf4578099615711d76138c4565b61283091906136bd565b92505b600160821b851615612874576d03c6ab775dd0b95b4cbee7e65d11612867846e2bf84208204f5977f9a8cf01fdc3076138c4565b61287191906136bd565b92505b50909392505050565b60006020607f5b60ff8116612893836001613937565b60ff1610156128e657600060026128aa8385613937565b6128b4919061395c565b90508460008260ff16608081106128cd576128cd6134fe565b0154106128dc578092506128e0565b8091505b50612884565b8360008260ff16608081106128fd576128fd6134fe565b01541061290b579392505050565b8360008360ff1660808110612922576129226134fe565b0154106100e6575092915050565b6000828160ff841661294283806138c4565b901c915061295f826b0d10b13981d2a0bc5e5fdcab601e1b6138c4565b61296990826134d0565b905060ff841661297986846138c4565b901c9150612996826b045ae5bdd5f0e03eca1ff439601e1b6138c4565b6129a090826134d0565b905060ff84166129b086846138c4565b901c91506129cd826e45ae5bdd5f0e03eca1ff43900000006138c4565b6129d790826134d0565b905060ff84166129e786846138c4565b901c9150612a03826adefabf91302cd95b9ffda5601c1b6138c4565b612a0d90826134d0565b905060ff8416612a1d86846138c4565b901c9150612a39826a4a53953065644873dfff37601b1b6138c4565b612a4390826134d0565b905060ff8416612a5386846138c4565b901c9150612a6f826d54f1cf12bd04e516b6da880000006138c4565b612a7990826134d0565b905060ff8416612a8986846138c4565b901c9150612aa5826d0a9e39e257a09ca2d6db510000006138c4565b612aaf90826134d0565b905060ff8416612abf86846138c4565b901c9150612adb826d012e066e7b839fa050c3090000006138c4565b612ae590826134d0565b905060ff8416612af586846138c4565b901c9150612b10826c1e33d7d926c329a1ad1a8000006138c4565b612b1a90826134d0565b905060ff8416612b2a86846138c4565b901c9150612b45826c02bee513bdb4a6b19b5f8000006138c4565b612b4f90826134d0565b905060ff8416612b5f86846138c4565b901c9150612b79826b3a9316fa79b88eccf2a000006138c4565b612b8390826134d0565b905060ff8416612b9386846138c4565b901c9150612bad826b048177ebe1fa8123752000006138c4565b612bb790826134d0565b905060ff8416612bc786846138c4565b901c9150612be0826a5263fe90242dcbacf000006138c4565b612bea90826134d0565b905060ff8416612bfa86846138c4565b901c9150612c13826a057e22099c030d941000006138c4565b612c1d90826134d0565b905060ff8416612c2d86846138c4565b901c9150612c45826957e22099c030d94100006138c4565b612c4f90826134d0565b905060ff8416612c5f86846138c4565b901c9150612c778269052b6b545699763100006138c4565b612c8190826134d0565b905060ff8416612c9186846138c4565b901c9150612ca882684985f67696bf7480006138c4565b612cb290826134d0565b905060ff8416612cc286846138c4565b901c9150612cd9826803dea12ea99e4980006138c4565b612ce390826134d0565b905060ff8416612cf386846138c4565b901c9150612d09826731880f2214b6e0006138c4565b612d1390826134d0565b905060ff8416612d2386846138c4565b901c9150612d398267025bcff56eb360006138c4565b612d4390826134d0565b905060ff8416612d5386846138c4565b901c9150612d6882661b722e10ab10006138c4565b612d7290826134d0565b905060ff8416612d8286846138c4565b901c9150612d97826601317c700770006138c4565b612da190826134d0565b905060ff8416612db186846138c4565b901c9150612dc582650cba84aafa006138c4565b612dcf90826134d0565b905060ff8416612ddf86846138c4565b901c9150612df2826482573a0a006138c4565b612dfc90826134d0565b905060ff8416612e0c86846138c4565b901c9150612e1f826405035ad9006138c4565b612e2990826134d0565b905060ff8416612e3986846138c4565b901c9150612e4b82632f881b006138c4565b612e5590826134d0565b905060ff8416612e6586846138c4565b901c9150612e77826301b293406138c4565b612e8190826134d0565b905060ff8416612e9186846138c4565b901c9150612ea282620efc406138c4565b612eac90826134d0565b905060ff8416612ebc86846138c4565b901c9150612ecc82617fe06138c4565b612ed690826134d0565b905060ff8416612ee686846138c4565b901c9150612ef6826104206138c4565b612f0090826134d0565b905060ff8416612f1086846138c4565b901c9150612f1f8260216138c4565b612f2990826134d0565b905060ff8416612f3986846138c4565b901c9150612f488260016138c4565b612f5290826134d0565b9050600160ff85161b85612f756b0d10b13981d2a0bc5e5fdcab601f1b846136bd565b612f7f91906134d0565b610f4591906134d0565b6000612f988484111583611be3565b6000610f4584866136d1565b62461bcd60e51b6000908152602060045260076024526652455123000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b60008061010083101561302a575b600183111561302557600192831c9261301e9082613937565b9050613005565b61305e565b60805b60ff81161561305c57600160ff82161b84106130515760ff81169390931c92908117905b60011c607f1661302d565b505b92915050565b6001600160a01b038116811461307957600080fd5b50565b60008083601f84011261308e57600080fd5b5081356001600160401b038111156130a557600080fd5b6020830191508360208260051b850101111561082057600080fd5b60008060008060008060a087890312156130d957600080fd5b86356130e481613064565b955060208701356130f481613064565b9450604087013561310481613064565b93506060870135925060808701356001600160401b0381111561312657600080fd5b61313289828a0161307c565b979a9699509497509295939492505050565b6020808252825182820181905260009190848201906040850190845b8181101561317c57835183529284019291840191600101613160565b50909695505050505050565b6000806040838503121561319b57600080fd5b82356131a681613064565b915060208301356131b681613064565b809150509250929050565b6000806000606084860312156131d657600080fd5b83356131e181613064565b925060208401356131f181613064565b9150604084013561320181613064565b809150509250925092565b60008060006060848603121561322157600080fd5b833561322c81613064565b9250602084013561323c81613064565b929592945050506040919091013590565b63ffffffff8116811461307957600080fd5b60008060008060008060c0878903121561327857600080fd5b86359550602087013594506040870135935060608701356132988161324d565b925060808701356132a88161324d565b915060a08701356132b88161324d565b809150509295509295509295565b600080600080600060a086880312156132de57600080fd5b8535945060208601359350604086013592506060860135915060808601356133058161324d565b809150509295509295909350565b60008060008060006080868803121561332b57600080fd5b853561333681613064565b9450602086013561334681613064565b93506040860135925060608601356001600160401b0381111561336857600080fd5b6133748882890161307c565b969995985093965092949392505050565b6001600160701b038116811461307957600080fd5b600080600080600080600060e0888a0312156133b557600080fd5b8735965060208801356133c781613385565b955060408801356133d781613385565b945060608801356133e78161324d565b935060808801356133f78161324d565b925060a088013561340781613385565b915060c088013561341781613385565b8091505092959891949750929550565b60008060006060848603121561343c57600080fd5b505081359360208301359350604090920135919050565b60006020828403121561346557600080fd5b8135611a7681613064565b6001600160a01b0391909116815260200190565b6020808252601c908201527b0a4cae2ead2cada8cdee4daead8c27440929cac82989288bea082a8960231b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156134e3576134e36134ba565b500190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000600019821415613528576135286134ba565b5060010190565b60208082526026908201527f5265717569656d466f726d756c613a20494e56414c49445f544f4b454e5f4f556040820152650a8bea082a8960d31b606082015260800190565b60008060006060848603121561358a57600080fd5b83516135958161324d565b60208501519093506135a68161324d565b60408501519092506132018161324d565b6000806000606084860312156135cc57600080fd5b83516135d781613385565b60208501519093506135a681613385565b6000602082840312156135fa57600080fd5b8151611a7681613064565b6020808252601e908201527f5265717569656d466f726d756c613a20496e76616c696420746f6b656e410000604082015260600190565b60208082526026908201527f5265717569656d466f726d756c613a20494e53554646494349454e545f4c495160408201526555494449545960d01b606082015260800190565b600063ffffffff8381169083168181101561369f5761369f6134ba565b039392505050565b634e487b7160e01b600052601260045260246000fd5b6000826136cc576136cc6136a7565b500490565b6000828210156136e3576136e36134ba565b500390565b6000816136f7576136f76134ba565b506000190190565b60208082526025908201527f5265717569656d466f726d756c613a20494e56414c49445f544f4b454e5f494e6040820152640bea082a8960db1b606082015260800190565b6000806040838503121561375757600080fd5b82516137628161324d565b60208401519092506131b68161324d565b600060033d111561378c5760046000803e5060005160e01c5b90565b601f8201601f191681016001600160401b03811182821017156137c257634e487b7160e01b600052604160045260246000fd5b6040525050565b600060443d10156137d75790565b6040516003193d81016004833e81513d6001600160401b03808311602484018310171561380657505050505090565b828501915081518181111561381e5750505050505090565b843d87010160208285010111156138385750505050505090565b6138476020828601018761378f565b509095945050505050565b600060208083528351808285015260005b8181101561387f57858101830151858201604001528201613863565b81811115613891576000604083870101525b50601f01601f1916929092016040019392505050565b6000602082840312156138b957600080fd5b8151611a768161324d565b60008160001904831182151516156138de576138de6134ba565b500290565b600060ff821660ff8416808210156138fd576138fd6134ba565b90039392505050565b600060ff821680613919576139196134ba565b6000190192915050565b600082613932576139326136a7565b500690565b600060ff821660ff84168060ff03821115613954576139546134ba565b019392505050565b600060ff83168061396f5761396f6136a7565b8060ff8416049150509291505056fea2646970667358221220af60a3d3d61b4daa037fd05b57a622d0d4751e9d1665998aaae090538d0c6ad564736f6c634300080a0033";

export class RequiemFormula__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RequiemFormula> {
    return super.deploy(overrides || {}) as Promise<RequiemFormula>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RequiemFormula {
    return super.attach(address) as RequiemFormula;
  }
  connect(signer: Signer): RequiemFormula__factory {
    return super.connect(signer) as RequiemFormula__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RequiemFormulaInterface {
    return new utils.Interface(_abi) as RequiemFormulaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RequiemFormula {
    return new Contract(address, _abi, signerOrProvider) as RequiemFormula;
  }
}
