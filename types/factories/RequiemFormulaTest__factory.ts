/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RequiemFormulaTest,
  RequiemFormulaTestInterface,
} from "../RequiemFormulaTest";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reserve0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserve1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance0Adjusted",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance1Adjusted",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
    ],
    name: "ensureConstantValue",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
    ],
    name: "findPositionInMaxExpArray",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_n",
        type: "uint256",
      },
    ],
    name: "floorLog2",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_precision",
        type: "uint8",
      },
    ],
    name: "generalExp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "generalLog",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveOut",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightIn",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightOut",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    name: "getAmountIn",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveOut",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightIn",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightOut",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    name: "getAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getFactoryAmountsIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getFactoryAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    name: "getFactoryReserveAndWeights",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightA",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightB",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "getFactoryWeightsAndSwapFee",
    outputs: [
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    name: "getOtherToken",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "getPairAmountIn",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "getPairAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    name: "getReserveAndWeights",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightA",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightB",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "getWeightsAndSwapFee",
    outputs: [
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initMaxExpArray",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalLiquidity",
        type: "uint256",
      },
      {
        internalType: "uint112",
        name: "reserve0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "reserve1",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint112",
        name: "collectedFee0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "collectedFee1",
        type: "uint112",
      },
    ],
    name: "mintLiquidityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "optimalExp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "optimalLog",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_baseN",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_baseD",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_expN",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_expD",
        type: "uint32",
      },
    ],
    name: "power",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    name: "quote",
    outputs: [
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "sortTokens",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061073f6001641c35fedd1560601b036020556001646c3390ecc9605e1b036021556001640cf801476160611b0360225560016431bdb23e1d605f1b0360235560016502fb1d8fe083605b1b0360245560016505b771955b37605a1b036025556001650af67a93bb5160591b0360265560016515060c256cb360581b036027556001651428a2f98d7360581b036028556001654d515663970960561b03602955600165944620b0e70f60551b03602a55600166011c592761c66760541b03602b5560016602214d10d014eb60531b03602c55600166020ade36b7dbef60531b03602d5560016603eab73b3bbfe360521b03602e556001660782ee3593f6d760511b03602f556001661ccf4b44bb4821604f1b0360305560016606e7f88ad8a77760511b0360315560016669f3d1c921891d604d1b03603255600166cb2ff529eb71e5604c1b03603355600166c2d415c3db974b604c1b0360345560016702eb40f9f620fda7604a1b0360355560016705990681d961a1eb60491b03603655600167055e12902701414760491b0360375560016714962dee9dc9764160471b0360385560016704ef57b9b560fab560491b0360395560016712ed7b32a58f552b60471b03603a556001679131271922eaa60760441b03603b556001678b380f3558668c4760441b03603c556001680215f77c045fbe885760421b03603d556001600160831b03603e556001670f577eded5773a1160471b03603f556001680eb5ec597592befbf5603f1b036040556001681c35fedd14b861eb05603e1b036041556001683619c87664579bc94b603d1b0360425560016867c00a3b07ffc01fd7603c1b03604355600168c6f6c8f8739773a7a5603b1b03604455600168bec763f8209b7a72b1603b1b0360455560016902dbb8caad9b7097b91b60391b03604655600169057b3d49dda84556d6f760381b03604755600169054183095b2c8ececf3160381b036048556001690a14517cc6b9457111ef60371b0360495560016913545598e5c23276ccf160361b03604a556001692511882c39c3adea96ff60351b03604b55600169471649d87199aa99075760341b03604c557004429a21a029d4c1457cfbffffffffffff604d55700415bc6d6fb7dd71af2cb3ffffffffffff604e557003eab73b3bbfe282243ce1ffffffffffff604f557003c1771ac9fb6b4c18e229ffffffffffff605055700399e96897690418f785257fffffffffff605155700373fc456c53bb779bf0ea9fffffffffff60525570034f9e8e490c48e67e6ab8bfffffffffff60535570032cbfd4a7adc790560b3337ffffffffff60545570030b50570f6e5d2acca94613ffffffffff6055557002eb40f9f620fda6b56c2861ffffffffff6056557002cc8340ecb0d0f520a6af58ffffffffff6057557002af09481380a0a35cf1ba02ffffffffff605855700292c5bdd3b92ec810287b1b3fffffffff605955700277abdcdab07d5a77ac6d6b9fffffffff605a5570025daf6654b1eaa55fd64df5efffffffff605b55700244c49c648baa98192dce88b7ffffffff605c5570022ce03cd5619a311b2471268bffffffff605d55700215f77c045fbe885654a44a0fffffffff605e556001600160811b03605f557001eaefdbdaaee7421fc4d3ede5ffffffff6060557001d6bd8b2eb257df7e8ca57b09bfffffff6061557001c35fedd14b861eb0443f7f133fffffff6062557001b0ce43b322bcde4a56e8ada5afffffff60635570019f0028ec1fff007f5a195a39dfffffff60645570018ded91f0e72ee74f49b15ba527ffffff60655570017d8ec7f04136f4e5615fd41a63ffffff60665570016ddc6556cdb84bdc8d12d22e6fffffff60675570015ecf52776a1155b5bd8395814f7fffff60685570015060c256cb23b3b3cc3754cf40ffffff6069557001428a2f98d728ae223ddab715be3fffff606a5570013545598e5c23276ccf0ede68034fffff606b557001288c4161ce1d6f54b7f61081194fffff606c5570011c592761c666aa641d5a01a40f17ffff606d55700110a688680a7530515f3e6e6cfdcdffff606e557001056f1b5bedf75c6bcb2ce8aed428ffff606f556ffaadceceeff8a0890f3875f008277fff6070556ff05dc6b27edad306388a600f6ba0bfff6071556fe67a5a25da41063de1495d5b18cdbfff6072556fdcff115b14eedde6fc3aa5353f2e4fff6073556fd3e7a3924312399f9aae2e0f868f8fff6074556fcb2ff529eb71e41582cccd5a1ee26fff6075556fc2d415c3db974ab32a51840c0b67edff6076556fbad03e7d883f69ad5b0a186184e06bff6077556fb320d03b2c343d4829abd6075f0cc5ff6078556fabc25204e02828d73c6e80bcdb1a95bf6079556fa4b16f74ee4bb2040a1ec6c15fbbf2df607a556f9deaf736ac1f569deb1b5ae3f36c130f607b556f976bd9952c7aa957f5937d790ef65037607c556f9131271922eaa6064b73a22d0bd4f2bf607d556f8b380f3558668c46c91c49a2f8e967b9607e556f857ddf0117efa215952912839f6473e6607f55565b614623806200074f6000396000f3fe608060405234801561001057600080fd5b50600436106101ae5760003560e01c80638888a737116100ee578063ad615dec11610097578063b3923a9911610071578063b3923a9914610c15578063ca22297914610c28578063ce78456414610c3b578063d691093714610c4e57600080fd5b8063ad615dec14610bdc578063b19210b014610bef578063b33d96b014610c0257600080fd5b806395050862116100c857806395050862146103df578063a324cca0146103f2578063aa248a461461040557600080fd5b80638888a737146103a65780638fabd82d146103b957806392aec23c146103cc57600080fd5b80634c3eea9e1161015b5780636350d774116101355780636350d7741461034a578063671a11b51461035d57806367f84adc1461037057806379c91b371461038357600080fd5b80634c3eea9e146102ae578063544caa56146102c15780635bff1d92146102f457600080fd5b8063327494611161018c578063327494611461023757806332833d511461025f57806345b8bafc1461028957600080fd5b8063119220a5146101b357806329576c82146101dc5780632bb66e1d146101fd575b600080fd5b6101c66101c1366004613def565b610c79565b6040516101d39190613e74565b60405180910390f35b6101ef6101ea366004613eb8565b610e74565b6040519081526020016101d3565b61021061020b366004613eee565b6114db565b6040805163ffffffff948516815292841660208401529216918101919091526060016101d3565b61024a610245366004613f1c565b611573565b604080519283526020830191909152016101d3565b61027261026d366004613f79565b611776565b6040805192835260ff9091166020830152016101d3565b61029c610297366004613fc3565b6118c0565b60405160ff90911681526020016101d3565b6101ef6102bc366004613fc3565b61192d565b6102d46102cf366004613eee565b611a1d565b604080516001600160a01b039384168152929091166020830152016101d3565b610307610302366004613eee565b611b2d565b604080516001600160a01b03909716875260208701959095529385019290925263ffffffff908116606085015290811660808401521660a082015260c0016101d3565b6101ef610358366004613fdc565b611e04565b6101ef61036b36600461401d565b611e3d565b6101c661037e366004613def565b611ffc565b610396610391366004614084565b6121dc565b60405190151581526020016101d3565b6101ef6103b4366004613fdc565b6122ff565b6101c66103c73660046140d1565b61232b565b6101ef6103da366004614159565b61250d565b6101ef6103ed366004613fc3565b6125e0565b6101ef610400366004613fc3565b612c30565b610bda701c35fedd14ffffffffffffffffffffffff602055701b0ce43b323fffffffffffffffffffffff6021557019f0028ec1ffffffffffffffffffffffff6022557018ded91f0e7fffffffffffffffffffffff6023557017d8ec7f0417ffffffffffffffffffffff6024557016ddc6556cdbffffffffffffffffffffff6025557015ecf52776a1ffffffffffffffffffffff6026557015060c256cb2ffffffffffffffffffffff602755701428a2f98d72ffffffffffffffffffffff6028557013545598e5c23fffffffffffffffffffff602955701288c4161ce1dfffffffffffffffffffff602a557011c592761c666fffffffffffffffffffff602b5570110a688680a757ffffffffffffffffffff602c55701056f1b5bedf77ffffffffffffffffffff602d55700faadceceeff8bffffffffffffffffffff602e55700f05dc6b27edadffffffffffffffffffff602f55700e67a5a25da4107fffffffffffffffffff603055700dcff115b14eedffffffffffffffffffff603155700d3e7a392431239fffffffffffffffffff603255700cb2ff529eb71e4fffffffffffffffffff603355700c2d415c3db974afffffffffffffffffff603455700bad03e7d883f69bffffffffffffffffff603555700b320d03b2c343d5ffffffffffffffffff603655700abc25204e02828dffffffffffffffffff603755700a4b16f74ee4bb207fffffffffffffffff6038557009deaf736ac1f569ffffffffffffffffff603955700976bd9952c7aa957fffffffffffffffff603a557009131271922eaa606fffffffffffffffff603b557008b380f3558668c46fffffffffffffffff603c55700857ddf0117efa215bffffffffffffffff603d557007ffffffffffffffffffffffffffffffff603e557007abbf6f6abb9d087fffffffffffffffff603f5570075af62cbac95f7dfa7fffffffffffffff60405570070d7fb7452e187ac13fffffffffffffff6041557006c3390ecc8af379295fffffffffffffff60425570067c00a3b07ffc01fd6fffffffffffffff604355700637b647c39cbb9d3d27ffffffffffffff6044557005f63b1fc104dbd39587ffffffffffffff6045557005b771955b36e12f7235ffffffffffffff60465570057b3d49dda84556d6f6ffffffffffffff60475570054183095b2c8ececf30ffffffffffffff60485570050a28be635ca2b888f77fffffffffffff6049557004d5156639708c9db33c3fffffffffffff604a557004a23105873875bd52dfdfffffffffffff604b55700471649d87199aa990756fffffffffffff604c557004429a21a029d4c1457cfbffffffffffff604d55700415bc6d6fb7dd71af2cb3ffffffffffff604e557003eab73b3bbfe282243ce1ffffffffffff604f557003c1771ac9fb6b4c18e229ffffffffffff605055700399e96897690418f785257fffffffffff605155700373fc456c53bb779bf0ea9fffffffffff60525570034f9e8e490c48e67e6ab8bfffffffffff60535570032cbfd4a7adc790560b3337ffffffffff60545570030b50570f6e5d2acca94613ffffffffff6055557002eb40f9f620fda6b56c2861ffffffffff6056557002cc8340ecb0d0f520a6af58ffffffffff6057557002af09481380a0a35cf1ba02ffffffffff605855700292c5bdd3b92ec810287b1b3fffffffff605955700277abdcdab07d5a77ac6d6b9fffffffff605a5570025daf6654b1eaa55fd64df5efffffffff605b55700244c49c648baa98192dce88b7ffffffff605c5570022ce03cd5619a311b2471268bffffffff605d55700215f77c045fbe885654a44a0fffffffff605e557001ffffffffffffffffffffffffffffffff605f557001eaefdbdaaee7421fc4d3ede5ffffffff6060557001d6bd8b2eb257df7e8ca57b09bfffffff6061557001c35fedd14b861eb0443f7f133fffffff6062557001b0ce43b322bcde4a56e8ada5afffffff60635570019f0028ec1fff007f5a195a39dfffffff60645570018ded91f0e72ee74f49b15ba527ffffff60655570017d8ec7f04136f4e5615fd41a63ffffff60665570016ddc6556cdb84bdc8d12d22e6fffffff60675570015ecf52776a1155b5bd8395814f7fffff60685570015060c256cb23b3b3cc3754cf40ffffff6069557001428a2f98d728ae223ddab715be3fffff606a5570013545598e5c23276ccf0ede68034fffff606b557001288c4161ce1d6f54b7f61081194fffff606c5570011c592761c666aa641d5a01a40f17ffff606d55700110a688680a7530515f3e6e6cfdcdffff606e557001056f1b5bedf75c6bcb2ce8aed428ffff606f556ffaadceceeff8a0890f3875f008277fff6070556ff05dc6b27edad306388a600f6ba0bfff6071556fe67a5a25da41063de1495d5b18cdbfff6072556fdcff115b14eedde6fc3aa5353f2e4fff6073556fd3e7a3924312399f9aae2e0f868f8fff6074556fcb2ff529eb71e41582cccd5a1ee26fff6075556fc2d415c3db974ab32a51840c0b67edff6076556fbad03e7d883f69ad5b0a186184e06bff6077556fb320d03b2c343d4829abd6075f0cc5ff6078556fabc25204e02828d73c6e80bcdb1a95bf6079556fa4b16f74ee4bb2040a1ec6c15fbbf2df607a556f9deaf736ac1f569deb1b5ae3f36c130f607b556f976bd9952c7aa957f5937d790ef65037607c556f9131271922eaa6064b73a22d0bd4f2bf607d556f8b380f3558668c46c91c49a2f8e967b9607e556f857ddf0117efa215952912839f6473e6607f55565b005b6101ef610bea3660046141e6565b613240565b6101ef610bfd36600461401d565b61333f565b610307610c10366004613f1c565b613509565b6101c6610c233660046140d1565b613797565b610210610c36366004614212565b613964565b61029c610c49366004613fc3565b613abf565b610c61610c5c366004613eee565b613b72565b6040516001600160a01b0390911681526020016101d3565b606081610ccd5760405162461bcd60e51b815260206004820152601c60248201527f5265717569656d466f726d756c613a20494e56414c49445f504154480000000060448201526064015b60405180910390fd5b610cd8826001614245565b67ffffffffffffffff811115610cf057610cf061425d565b604051908082528060200260200182016040528015610d19578160200160208202803683370190505b5090508381600081518110610d3057610d30614273565b60209081029190910101528560005b83811015610df857600080600080600080610d818f8c8c8a818110610d6657610d66614273565b9050602002016020810190610d7b9190614212565b8a613509565b955095509550955095509550610db4898881518110610da257610da2614273565b60200260200101518686868686611e3d565b89610dc0896001614245565b81518110610dd057610dd0614273565b6020026020010181815250508597505050505050508080610df090614289565b915050610d3f565b50856001600160a01b0316816001600160a01b031614610e695760405162461bcd60e51b815260206004820152602660248201527f5265717569656d466f726d756c613a20494e56414c49445f544f4b454e5f4f556044820152650a8bea082a8960d31b6064820152608401610cc4565b509695505050505050565b6000828160ff8416610e8683806142a4565b901c9150610ea4826f03442c4e6074a82f1797f72ac00000006142a4565b610eae9082614245565b905060ff8416610ebe86846142a4565b901c9150610edc826f0116b96f757c380fb287fd0e400000006142a4565b610ee69082614245565b905060ff8416610ef686846142a4565b901c9150610f13826e45ae5bdd5f0e03eca1ff43900000006142a4565b610f1d9082614245565b905060ff8416610f2d86846142a4565b901c9150610f4a826e0defabf91302cd95b9ffda500000006142a4565b610f549082614245565b905060ff8416610f6486846142a4565b901c9150610f81826e02529ca9832b22439efff9b80000006142a4565b610f8b9082614245565b905060ff8416610f9b86846142a4565b901c9150610fb7826d54f1cf12bd04e516b6da880000006142a4565b610fc19082614245565b905060ff8416610fd186846142a4565b901c9150610fed826d0a9e39e257a09ca2d6db510000006142a4565b610ff79082614245565b905060ff841661100786846142a4565b901c9150611023826d012e066e7b839fa050c3090000006142a4565b61102d9082614245565b905060ff841661103d86846142a4565b901c9150611058826c1e33d7d926c329a1ad1a8000006142a4565b6110629082614245565b905060ff841661107286846142a4565b901c915061108d826c02bee513bdb4a6b19b5f8000006142a4565b6110979082614245565b905060ff84166110a786846142a4565b901c91506110c1826b3a9316fa79b88eccf2a000006142a4565b6110cb9082614245565b905060ff84166110db86846142a4565b901c91506110f5826b048177ebe1fa8123752000006142a4565b6110ff9082614245565b905060ff841661110f86846142a4565b901c9150611128826a5263fe90242dcbacf000006142a4565b6111329082614245565b905060ff841661114286846142a4565b901c915061115b826a057e22099c030d941000006142a4565b6111659082614245565b905060ff841661117586846142a4565b901c915061118d826957e22099c030d94100006142a4565b6111979082614245565b905060ff84166111a786846142a4565b901c91506111bf8269052b6b545699763100006142a4565b6111c99082614245565b905060ff84166111d986846142a4565b901c91506111f082684985f67696bf7480006142a4565b6111fa9082614245565b905060ff841661120a86846142a4565b901c9150611221826803dea12ea99e4980006142a4565b61122b9082614245565b905060ff841661123b86846142a4565b901c9150611251826731880f2214b6e0006142a4565b61125b9082614245565b905060ff841661126b86846142a4565b901c91506112818267025bcff56eb360006142a4565b61128b9082614245565b905060ff841661129b86846142a4565b901c91506112b082661b722e10ab10006142a4565b6112ba9082614245565b905060ff84166112ca86846142a4565b901c91506112df826601317c700770006142a4565b6112e99082614245565b905060ff84166112f986846142a4565b901c915061130d82650cba84aafa006142a4565b6113179082614245565b905060ff841661132786846142a4565b901c915061133a826482573a0a006142a4565b6113449082614245565b905060ff841661135486846142a4565b901c9150611367826405035ad9006142a4565b6113719082614245565b905060ff841661138186846142a4565b901c915061139382632f881b006142a4565b61139d9082614245565b905060ff84166113ad86846142a4565b901c91506113bf826301b293406142a4565b6113c99082614245565b905060ff84166113d986846142a4565b901c91506113ea82620efc406142a4565b6113f49082614245565b905060ff841661140486846142a4565b901c915061141482617fe06142a4565b61141e9082614245565b905060ff841661142e86846142a4565b901c915061143e826104206142a4565b6114489082614245565b905060ff841661145886846142a4565b901c91506114678260216142a4565b6114719082614245565b905060ff841661148186846142a4565b901c91506114908260016142a4565b61149a9082614245565b9050600160ff85161b856114be6f0688589cc0e9505e2f2fee5580000000846142d9565b6114c89190614245565b6114d29190614245565b95945050505050565b6040517fca2229790000000000000000000000000000000000000000000000000000000081526001600160a01b038281166004830152600091829182919086169063ca22297990602401606060405180830381865afa158015611542573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061156691906142ed565b9250925092509250925092565b6000806000806115838686611a1d565b91509150600080886001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156115c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ec919061432f565b506001600160701b031691506001600160701b03169150886001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611641573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116659190614360565b6001600160a01b0316846001600160a01b03161480156116f75750886001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116e29190614360565b6001600160a01b0316836001600160a01b0316145b6117435760405162461bcd60e51b815260206004820152601d60248201527f5265717569656d466f726d756c613a20496e76616c696420746f6b656e0000006044820152606401610cc4565b836001600160a01b0316886001600160a01b031614611763578082611766565b81815b909a909950975050505050505050565b600080848610156117c95760405162461bcd60e51b815260206004820152601b60248201527f6e6f7420737570706f7274205f626173654e203c205f626173654400000000006044820152606401610cc4565b600160811b86106117d957600080fd5b600080866117eb6001607f1b8a6142a4565b6117f591906142d9565b905070015bf0a8b1457695355fb8ac404e7a79e38110156118205761181981612c30565b915061182c565b6118298161192d565b91505b60008563ffffffff168763ffffffff168461184791906142a4565b61185191906142d9565b905070080000000000000000000000000000000081101561188357611875816125e0565b607f945094505050506118b7565b600061188e82613abf565b90506118aa61189e82607f61437d565b60ff1683901c82610e74565b955093506118b792505050565b94509492505050565b6000806101008310156118f3575b60018311156118ee57600192831c926118e790826143a0565b90506118ce565b611927565b60805b60ff81161561192557600160ff82161b841061191a5760ff81169390931c92908117905b60011c607f166118f6565b505b92915050565b600080600160801b831061196c57600061194e6102976001607f1b866142d9565b60ff811694851c94909150611968906001607f1b906142a4565b9150505b6001607f1b8311156119e157607f5b60ff8116156119df576001607f1b61199385806142a4565b61199d91906142d9565b9350600160801b84106119cf57600193841c936119ba908261437d565b60ff166001901b826119cc9190614245565b91505b6119d8816143c5565b905061197b565b505b6f05b9de1d10bf4103d647b0955897ba80611a0c6f03f80fe03f80fe03f80fe03f80fe03f8836142a4565b611a1691906142d9565b9392505050565b600080826001600160a01b0316846001600160a01b03161415611aa85760405162461bcd60e51b815260206004820152602360248201527f5265717569656d466f726d756c613a204944454e544943414c5f41444452455360448201527f53455300000000000000000000000000000000000000000000000000000000006064820152608401610cc4565b826001600160a01b0316846001600160a01b031610611ac8578284611acb565b83835b90925090506001600160a01b038216611b265760405162461bcd60e51b815260206004820152601c60248201527f5265717569656d466f726d756c613a205a45524f5f41444452455353000000006044820152606401610cc4565b9250929050565b600080600080600080600080896001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611b77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b9b919061432f565b506001600160701b031691506001600160701b03169150600080611bbe8c613964565b8097508193508294505050508b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c2c9190614360565b6001600160a01b03168b6001600160a01b03161415611cbc578b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ca79190614360565b99509297509095509350915084848484611df6565b8b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611cfa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d1e9190614360565b6001600160a01b03168b6001600160a01b03161415611dae578b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d999190614360565b99509197509195509350915083858385611df6565b60405162461bcd60e51b815260206004820152601e60248201527f5265717569656d466f726d756c613a20496e76616c696420746f6b656e4100006044820152606401610cc4565b505050509295509295509295565b600080600080600080611e178989611b2d565b9550955095509550955050611e3087858785878661333f565b9998505050505050505050565b6000808711611eb45760405162461bcd60e51b815260206004820152602960248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f494e5060448201527f55545f414d4f554e5400000000000000000000000000000000000000000000006064820152608401610cc4565b600086118015611ec45750600085115b611f1f5760405162461bcd60e51b815260206004820152602660248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f4c495160448201526555494449545960d01b6064820152608401610cc4565b6000611f45611f30846127106143e2565b63ffffffff1689613cdb90919063ffffffff16565b90508363ffffffff168563ffffffff161415611f8d57611f7181611f6b89612710613cdb565b90613ce7565b611f7b8783613cdb565b611f8591906142d9565b915050611ff2565b60008080611fa184611f6b8c612710613cdb565b9050611fba81611fb38c612710613cdb565b8a8a611776565b90935091506000611fcb8a85613cdb565b905060ff83168a901b84611fdf8284614407565b611fe991906142d9565b96505050505050505b9695505050505050565b60608161204b5760405162461bcd60e51b815260206004820152601c60248201527f5265717569656d466f726d756c613a20494e56414c49445f50415448000000006044820152606401610cc4565b612056826001614245565b67ffffffffffffffff81111561206e5761206e61425d565b604051908082528060200260200182016040528015612097578160200160208202803683370190505b5090508381600183516120aa9190614407565b815181106120ba576120ba614273565b602090810291909101015284825b801561216c57600080808080806120f58f8c8c6120e660018c614407565b818110610d6657610d66614273565b95509550955095509550955061212889888151811061211657612116614273565b6020026020010151858785878661333f565b8961213460018a614407565b8151811061214457612144614273565b60200260200101818152505085975050505050505080806121649061441e565b9150506120c8565b50866001600160a01b0316816001600160a01b031614610e695760405162461bcd60e51b815260206004820152602560248201527f5265717569656d466f726d756c613a20494e56414c49445f544f4b454e5f494e6044820152640bea082a8960db1b6064820152608401610cc4565b60008163ffffffff166032141561220a576121f78686613cdb565b6122018585613cdb565b101590506114d2565b85841015801561221a5750848310155b15612227575060016114d2565b8584111580156122375750848311155b15612244575060006114d2565b8160006122528260646143e2565b90506000806000808b8a106122905761226e8b8a876032611776565b90945060ff1692506122838a8d886032611776565b90925060ff1690506122bb565b61229d8c8b886032611776565b90945060ff1692506122b2898c876032611776565b90925060ff1690505b60008184106122ca57816122cc565b835b90506122d88185614407565b93506122e48183614407565b9290921c9390921c92909211159a9950505050505050505050565b6000806000806000806123128989611b2d565b9550955095509550955050611e30878686868686611e3d565b60608161237a5760405162461bcd60e51b815260206004820152601c60248201527f5265717569656d466f726d756c613a20494e56414c49445f50415448000000006044820152606401610cc4565b612385826001614245565b67ffffffffffffffff81111561239d5761239d61425d565b6040519080825280602002602001820160405280156123c6578160200160208202803683370190505b50905083816000815181106123dd576123dd614273565b60209081029190910101528560005b838110156124925760008060008060008061242d8b8b8981811061241257612412614273565b90506020020160208101906124279190614212565b89611b2d565b95509550955095509550955061244e898881518110610da257610da2614273565b8961245a896001614245565b8151811061246a5761246a614273565b602002602001018181525050859750505050505050808061248a90614289565b9150506123ec565b50856001600160a01b0316816001600160a01b0316146125035760405162461bcd60e51b815260206004820152602660248201527f5265717569656d466f726d756c613a20494e56414c49445f544f4b454e5f4f556044820152650a8bea082a8960d31b6064820152608401610cc4565b5095945050505050565b60006001600160701b038316156125795760008061254c61253a6001600160701b03878116908c16613ce7565b8a6001600160701b0316896064611776565b90925060ff1690506125748a61256e836125668387613cdb565b87911c613ce7565b90613d04565b925050505b6001600160701b038216156125d5576000806125b66125a46001600160701b03868116908b16613ce7565b896001600160701b0316886064611776565b90925060ff1690506125d08a61256e836125668387613cdb565b925050505b979650505050505050565b60008080806125f36001607c1b86614435565b91508190506001607f1b61260782806142a4565b61261191906142d9565b9050612625816710e1b3be415a00006142a4565b61262f9084614245565b92506001607f1b61264083836142a4565b61264a91906142d9565b905061265e816705a0913f6b1e00006142a4565b6126689084614245565b92506001607f1b61267983836142a4565b61268391906142d9565b905061269781670168244fdac780006142a4565b6126a19084614245565b92506001607f1b6126b283836142a4565b6126bc91906142d9565b90506126cf81664807432bc180006142a4565b6126d99084614245565b92506001607f1b6126ea83836142a4565b6126f491906142d9565b905061270781660c0135dca040006142a4565b6127119084614245565b92506001607f1b61272283836142a4565b61272c91906142d9565b905061273f816601b707b1cdc0006142a4565b6127499084614245565b92506001607f1b61275a83836142a4565b61276491906142d9565b9050612776816536e0f639b8006142a4565b6127809084614245565b92506001607f1b61279183836142a4565b61279b91906142d9565b90506127ad81650618fee9f8006142a4565b6127b79084614245565b92506001607f1b6127c883836142a4565b6127d291906142d9565b90506127e381649c197dcc006142a4565b6127ed9084614245565b92506001607f1b6127fe83836142a4565b61280891906142d9565b905061281981640e30dce4006142a4565b6128239084614245565b92506001607f1b61283483836142a4565b61283e91906142d9565b905061284f8164012ebd13006142a4565b6128599084614245565b92506001607f1b61286a83836142a4565b61287491906142d9565b9050612884816317499f006142a4565b61288e9084614245565b92506001607f1b61289f83836142a4565b6128a991906142d9565b90506128b9816301a9d4806142a4565b6128c39084614245565b92506001607f1b6128d483836142a4565b6128de91906142d9565b90506128ed81621c63806142a4565b6128f79084614245565b92506001607f1b61290883836142a4565b61291291906142d9565b9050612921816201c6386142a4565b61292b9084614245565b92506001607f1b61293c83836142a4565b61294691906142d9565b905061295481611ab86142a4565b61295e9084614245565b92506001607f1b61296f83836142a4565b61297991906142d9565b90506129878161017c6142a4565b6129919084614245565b92506001607f1b6129a283836142a4565b6129ac91906142d9565b90506129b98160146142a4565b6129c39084614245565b92506001607f1b6129d483836142a4565b6129de91906142d9565b90506129eb8160016142a4565b6129f59084614245565b92506001607f1b82612a0f6721c3677c82b40000866142d9565b612a199190614245565b612a239190614245565b92506001607c1b851615612a6b5770018ebef9eac820ae8682b9793ac6d1e776612a5e847001c3d6a24ed82218787d624d3e5eba95f96142a4565b612a6891906142d9565b92505b6f20000000000000000000000000000000851615612abd577001368b2fc6f9609fe7aceb46aa619baed4612ab08470018ebef9eac820ae8682b9793ac6d1e7786142a4565b612aba91906142d9565b92505b6f40000000000000000000000000000000851615612b0e576fbc5ab1b16779be3575bd8f0520a9f21f612b01847001368b2fc6f9609fe7aceb46aa619baed56142a4565b612b0b91906142d9565b92505b6001607f1b851615612b52576f454aaa8efe072e7f6ddbab84b40a55c9612b45846fbc5ab1b16779be3575bd8f0520a9f21e6142a4565b612b4f91906142d9565b92505b600160801b851615612b96576f0960aadc109e7a3bf4578099615711ea612b89846f454aaa8efe072e7f6ddbab84b40a55c56142a4565b612b9391906142d9565b92505b600160811b851615612bd9576e2bf84208204f5977f9a8cf01fdce3d612bcc846f0960aadc109e7a3bf4578099615711d76142a4565b612bd691906142d9565b92505b700400000000000000000000000000000000851615612c27576d03c6ab775dd0b95b4cbee7e65d11612c1a846e2bf84208204f5977f9a8cf01fdc3076142a4565b612c2491906142d9565b92505b50909392505050565b6000808080806fd3094c70f034de4b96ff7d5b6f99fcd88610612c9557612c676f4000000000000000000000000000000085614245565b93506fd3094c70f034de4b96ff7d5b6f99fcd8612c886001607f1b886142a4565b612c9291906142d9565b95505b6fa45af1e1f40c333b3de1db4dd55f29a78610612cf457612cc66f2000000000000000000000000000000085614245565b93506fa45af1e1f40c333b3de1db4dd55f29a7612ce76001607f1b886142a4565b612cf191906142d9565b95505b6f910b022db7ae67ce76b441c27035c6a18610612d4757612d196001607c1b85614245565b93506f910b022db7ae67ce76b441c27035c6a1612d3a6001607f1b886142a4565b612d4491906142d9565b95505b6f88415abbe9a76bead8d00cf112e4d4a88610612da657612d786f0800000000000000000000000000000085614245565b93506f88415abbe9a76bead8d00cf112e4d4a8612d996001607f1b886142a4565b612da391906142d9565b95505b6f84102b00893f64c705e841d5d4064bd38610612e0557612dd76f0400000000000000000000000000000085614245565b93506f84102b00893f64c705e841d5d4064bd3612df86001607f1b886142a4565b612e0291906142d9565b95505b6f8204055aaef1c8bd5c3259f4822735a28610612e6457612e366f0200000000000000000000000000000085614245565b93506f8204055aaef1c8bd5c3259f4822735a2612e576001607f1b886142a4565b612e6191906142d9565b95505b6f810100ab00222d861931c15e39b44e998610612ec357612e956f0100000000000000000000000000000085614245565b93506f810100ab00222d861931c15e39b44e99612eb66001607f1b886142a4565b612ec091906142d9565b95505b6f808040155aabbbe9451521693554f7338610612f2157612ef36e80000000000000000000000000000085614245565b93506f808040155aabbbe9451521693554f733612f146001607f1b886142a4565b612f1e91906142d9565b95505b612f2f6001607f1b87614407565b92508291506001607f1b612f4383806142a4565b612f4d91906142d9565b9050600160801b612f5e8482614407565b612f6890846142a4565b612f7291906142d9565b612f7c9085614245565b93506001607f1b612f8d82846142a4565b612f9791906142d9565b9150600160811b612fb8846faaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa614407565b612fc290846142a4565b612fcc91906142d9565b612fd69085614245565b93506001607f1b612fe782846142a4565b612ff191906142d9565b915070030000000000000000000000000000000061301f846f99999999999999999999999999999999614407565b61302990846142a4565b61303391906142d9565b61303d9085614245565b93506001607f1b61304e82846142a4565b61305891906142d9565b9150700400000000000000000000000000000000613086846f92492492492492492492492492492492614407565b61309090846142a4565b61309a91906142d9565b6130a49085614245565b93506001607f1b6130b582846142a4565b6130bf91906142d9565b91507005000000000000000000000000000000006130ed846f8e38e38e38e38e38e38e38e38e38e38e614407565b6130f790846142a4565b61310191906142d9565b61310b9085614245565b93506001607f1b61311c82846142a4565b61312691906142d9565b9150700600000000000000000000000000000000613154846f8ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b614407565b61315e90846142a4565b61316891906142d9565b6131729085614245565b93506001607f1b61318382846142a4565b61318d91906142d9565b91507007000000000000000000000000000000006131bb846f89d89d89d89d89d89d89d89d89d89d89614407565b6131c590846142a4565b6131cf91906142d9565b6131d99085614245565b93506001607f1b6131ea82846142a4565b6131f491906142d9565b9150700800000000000000000000000000000000613222846f88888888888888888888888888888888614407565b61322c90846142a4565b61323691906142d9565b611ff29085614245565b60008084116132b75760405162461bcd60e51b815260206004820152602360248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f414d4f60448201527f554e5400000000000000000000000000000000000000000000000000000000006064820152608401610cc4565b6000831180156132c75750600082115b6133225760405162461bcd60e51b815260206004820152602660248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f4c495160448201526555494449545960d01b6064820152608401610cc4565b8261332d8584613cdb565b61333791906142d9565b949350505050565b60008087116133b65760405162461bcd60e51b815260206004820152602a60248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f4f555460448201527f5055545f414d4f554e54000000000000000000000000000000000000000000006064820152608401610cc4565b6000861180156133c65750600085115b6134215760405162461bcd60e51b815260206004820152602660248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f4c495160448201526555494449545960d01b6064820152608401610cc4565b8263ffffffff168463ffffffff16141561349357600061344d612710613447898b613cdb565b90613cdb565b90506000613479613460856127106143e2565b63ffffffff166134478b8a613d0490919063ffffffff16565b905061348a6001611f6b83856142d9565b92505050611ff2565b600080806134a1888b613d04565b90506134af8882888a611776565b909350915060006134c28a612710613cdb565b905060006134d08286613cdb565b905060ff841682901b611fe960016134ea8a6127106143e2565b63ffffffff1660ff88166134fe8587614407565b611f6b92911c6142d9565b600080600080600080600080896001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015613553573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613577919061432f565b506001600160701b031691506001600160701b0316915060008061359b8d8d6114db565b8097508193508294505050508b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156135e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136099190614360565b6001600160a01b03168b6001600160a01b03161415613699578b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015613660573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136849190614360565b99509297509095509350915084848484613787565b8b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156136d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136fb9190614360565b6001600160a01b03168b6001600160a01b03161415611dae578b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015613752573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137769190614360565b995091975091955093509150838583855b5050505093975093979195509350565b6060816137e65760405162461bcd60e51b815260206004820152601c60248201527f5265717569656d466f726d756c613a20494e56414c49445f50415448000000006044820152606401610cc4565b6137f1826001614245565b67ffffffffffffffff8111156138095761380961425d565b604051908082528060200260200182016040528015613832578160200160208202803683370190505b5090508381600183516138459190614407565b8151811061385557613855614273565b602090810291909101015284825b80156138f4576000808080808061388f8b8b61388060018b614407565b81811061241257612412614273565b9550955095509550955095506138b089888151811061211657612116614273565b896138bc60018a614407565b815181106138cc576138cc614273565b60200260200101818152505085975050505050505080806138ec9061441e565b915050613863565b50866001600160a01b0316816001600160a01b0316146125035760405162461bcd60e51b815260206004820152602560248201527f5265717569656d466f726d756c613a20494e56414c49445f544f4b454e5f494e6044820152640bea082a8960db1b6064820152608401610cc4565b6000806000836001600160a01b03166332bfe4696040518163ffffffff1660e01b81526004016040805180830381865afa9250505080156139c2575060408051601f3d908101601f191682019092526139bf91810190614449565b60015b613a4b576139ce614478565b806308c379a01415613a0857506139e36144cf565b806139ee5750613a0a565b8060405162461bcd60e51b8152600401610cc49190614559565b505b3d808015613a34576040519150601f19603f3d011682016040523d82523d6000602084013e613a39565b606091505b50603280601e93509350935050613ab8565b8181876001600160a01b031663d4cadf686040518163ffffffff1660e01b8152600401602060405180830381865afa158015613a8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613aaf91906145ae565b94509450945050505b9193909250565b60006020607f5b60ff8116613ad58360016143a0565b60ff161015613b285760006002613aec83856143a0565b613af691906145cb565b90508460008260ff1660808110613b0f57613b0f614273565b015410613b1e57809250613b22565b8091505b50613ac6565b8360008260ff1660808110613b3f57613b3f614273565b015410613b4d579392505050565b8360008360ff1660808110613b6457613b64614273565b0154106101ae575092915050565b600080836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015613bb3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613bd79190614360565b90506000846001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015613c19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c3d9190614360565b9050836001600160a01b0316826001600160a01b03161480613c705750836001600160a01b0316816001600160a01b0316145b613cbc5760405162461bcd60e51b815260206004820152601e60248201527f5265717569656d466f726d756c613a20496e76616c696420746f6b656e4100006044820152606401610cc4565b836001600160a01b0316826001600160a01b03161461333757816114d2565b6000611a1682846142a4565b600080613cf48385614245565b9050611a16848210156000613d12565b6000611a1683836001613d24565b81613d2057613d2081613d3f565b5050565b6000613d338484111583613d12565b60006114d28486614407565b62461bcd60e51b6000908152602060045260076024526652455123000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6001600160a01b0381168114613da757600080fd5b50565b60008083601f840112613dbc57600080fd5b50813567ffffffffffffffff811115613dd457600080fd5b6020830191508360208260051b8501011115611b2657600080fd5b60008060008060008060a08789031215613e0857600080fd5b8635613e1381613d92565b95506020870135613e2381613d92565b94506040870135613e3381613d92565b935060608701359250608087013567ffffffffffffffff811115613e5657600080fd5b613e6289828a01613daa565b979a9699509497509295939492505050565b6020808252825182820181905260009190848201906040850190845b81811015613eac57835183529284019291840191600101613e90565b50909695505050505050565b60008060408385031215613ecb57600080fd5b82359150602083013560ff81168114613ee357600080fd5b809150509250929050565b60008060408385031215613f0157600080fd5b8235613f0c81613d92565b91506020830135613ee381613d92565b600080600060608486031215613f3157600080fd5b8335613f3c81613d92565b92506020840135613f4c81613d92565b91506040840135613f5c81613d92565b809150509250925092565b63ffffffff81168114613da757600080fd5b60008060008060808587031215613f8f57600080fd5b84359350602085013592506040850135613fa881613f67565b91506060850135613fb881613f67565b939692955090935050565b600060208284031215613fd557600080fd5b5035919050565b600080600060608486031215613ff157600080fd5b8335613ffc81613d92565b9250602084013561400c81613d92565b929592945050506040919091013590565b60008060008060008060c0878903121561403657600080fd5b863595506020870135945060408701359350606087013561405681613f67565b9250608087013561406681613f67565b915060a087013561407681613f67565b809150509295509295509295565b600080600080600060a0868803121561409c57600080fd5b8535945060208601359350604086013592506060860135915060808601356140c381613f67565b809150509295509295909350565b6000806000806000608086880312156140e957600080fd5b85356140f481613d92565b9450602086013561410481613d92565b935060408601359250606086013567ffffffffffffffff81111561412757600080fd5b61413388828901613daa565b969995985093965092949392505050565b6001600160701b0381168114613da757600080fd5b600080600080600080600060e0888a03121561417457600080fd5b87359650602088013561418681614144565b9550604088013561419681614144565b945060608801356141a681613f67565b935060808801356141b681613f67565b925060a08801356141c681614144565b915060c08801356141d681614144565b8091505092959891949750929550565b6000806000606084860312156141fb57600080fd5b505081359360208301359350604090920135919050565b60006020828403121561422457600080fd5b8135611a1681613d92565b634e487b7160e01b600052601160045260246000fd5b600082198211156142585761425861422f565b500190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060001982141561429d5761429d61422f565b5060010190565b60008160001904831182151516156142be576142be61422f565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826142e8576142e86142c3565b500490565b60008060006060848603121561430257600080fd5b835161430d81613f67565b602085015190935061431e81613f67565b6040850151909250613f5c81613f67565b60008060006060848603121561434457600080fd5b835161434f81614144565b602085015190935061431e81614144565b60006020828403121561437257600080fd5b8151611a1681613d92565b600060ff821660ff8416808210156143975761439761422f565b90039392505050565b600060ff821660ff84168060ff038211156143bd576143bd61422f565b019392505050565b600060ff8216806143d8576143d861422f565b6000190192915050565b600063ffffffff838116908316818110156143ff576143ff61422f565b039392505050565b6000828210156144195761441961422f565b500390565b60008161442d5761442d61422f565b506000190190565b600082614444576144446142c3565b500690565b6000806040838503121561445c57600080fd5b825161446781613f67565b6020840151909250613ee381613f67565b600060033d11156144915760046000803e5060005160e01c5b90565b601f8201601f1916810167ffffffffffffffff811182821017156144c857634e487b7160e01b600052604160045260246000fd5b6040525050565b600060443d10156144dd5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561450d57505050505090565b82850191508151818111156145255750505050505090565b843d870101602082850101111561453f5750505050505090565b61454e60208286010187614494565b509095945050505050565b600060208083528351808285015260005b818110156145865785810183015185820160400152820161456a565b81811115614598576000604083870101525b50601f01601f1916929092016040019392505050565b6000602082840312156145c057600080fd5b8151611a1681613f67565b600060ff8316806145de576145de6142c3565b8060ff8416049150509291505056fea26469706673582212204521656a45e4d2d86e038c873132115fcddb8d2c06df8682830c74a41819a2d464736f6c634300080c0033";

export class RequiemFormulaTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RequiemFormulaTest> {
    return super.deploy(overrides || {}) as Promise<RequiemFormulaTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RequiemFormulaTest {
    return super.attach(address) as RequiemFormulaTest;
  }
  connect(signer: Signer): RequiemFormulaTest__factory {
    return super.connect(signer) as RequiemFormulaTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RequiemFormulaTestInterface {
    return new utils.Interface(_abi) as RequiemFormulaTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RequiemFormulaTest {
    return new Contract(address, _abi, signerOrProvider) as RequiemFormulaTest;
  }
}
