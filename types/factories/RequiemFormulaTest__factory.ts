/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RequiemFormulaTest,
  RequiemFormulaTestInterface,
} from "../RequiemFormulaTest";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reserve0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserve1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance0Adjusted",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance1Adjusted",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
    ],
    name: "ensureConstantValue",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
    ],
    name: "findPositionInMaxExpArray",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_n",
        type: "uint256",
      },
    ],
    name: "floorLog2",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_precision",
        type: "uint8",
      },
    ],
    name: "generalExp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "generalLog",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveOut",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightIn",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightOut",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    name: "getAmountIn",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveOut",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightIn",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightOut",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    name: "getAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getFactoryAmountsIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getFactoryAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    name: "getFactoryReserveAndWeights",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightA",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightB",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "getFactoryWeightsAndSwapFee",
    outputs: [
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    name: "getOtherToken",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "getPairAmountIn",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "getPairAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    name: "getReserveAndWeights",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightA",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightB",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "getWeightsAndSwapFee",
    outputs: [
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initMaxExpArray",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalLiquidity",
        type: "uint256",
      },
      {
        internalType: "uint112",
        name: "reserve0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "reserve1",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint112",
        name: "collectedFee0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "collectedFee1",
        type: "uint112",
      },
    ],
    name: "mintLiquidityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "optimalExp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "optimalLog",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_baseN",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_baseD",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_expN",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_expD",
        type: "uint32",
      },
    ],
    name: "power",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    name: "quote",
    outputs: [
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "sortTokens",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061073f6001641c35fedd1560601b036020556001646c3390ecc9605e1b036021556001640cf801476160611b0360225560016431bdb23e1d605f1b0360235560016502fb1d8fe083605b1b0360245560016505b771955b37605a1b036025556001650af67a93bb5160591b0360265560016515060c256cb360581b036027556001651428a2f98d7360581b036028556001654d515663970960561b03602955600165944620b0e70f60551b03602a55600166011c592761c66760541b03602b5560016602214d10d014eb60531b03602c55600166020ade36b7dbef60531b03602d5560016603eab73b3bbfe360521b03602e556001660782ee3593f6d760511b03602f556001661ccf4b44bb4821604f1b0360305560016606e7f88ad8a77760511b0360315560016669f3d1c921891d604d1b03603255600166cb2ff529eb71e5604c1b03603355600166c2d415c3db974b604c1b0360345560016702eb40f9f620fda7604a1b0360355560016705990681d961a1eb60491b03603655600167055e12902701414760491b0360375560016714962dee9dc9764160471b0360385560016704ef57b9b560fab560491b0360395560016712ed7b32a58f552b60471b03603a556001679131271922eaa60760441b03603b556001678b380f3558668c4760441b03603c556001680215f77c045fbe885760421b03603d556001600160831b03603e556001670f577eded5773a1160471b03603f556001680eb5ec597592befbf5603f1b036040556001681c35fedd14b861eb05603e1b036041556001683619c87664579bc94b603d1b0360425560016867c00a3b07ffc01fd7603c1b03604355600168c6f6c8f8739773a7a5603b1b03604455600168bec763f8209b7a72b1603b1b0360455560016902dbb8caad9b7097b91b60391b03604655600169057b3d49dda84556d6f760381b03604755600169054183095b2c8ececf3160381b036048556001690a14517cc6b9457111ef60371b0360495560016913545598e5c23276ccf160361b03604a556001692511882c39c3adea96ff60351b03604b55600169471649d87199aa99075760341b03604c557004429a21a029d4c1457cfbffffffffffff604d55700415bc6d6fb7dd71af2cb3ffffffffffff604e557003eab73b3bbfe282243ce1ffffffffffff604f557003c1771ac9fb6b4c18e229ffffffffffff605055700399e96897690418f785257fffffffffff605155700373fc456c53bb779bf0ea9fffffffffff60525570034f9e8e490c48e67e6ab8bfffffffffff60535570032cbfd4a7adc790560b3337ffffffffff60545570030b50570f6e5d2acca94613ffffffffff6055557002eb40f9f620fda6b56c2861ffffffffff6056557002cc8340ecb0d0f520a6af58ffffffffff6057557002af09481380a0a35cf1ba02ffffffffff605855700292c5bdd3b92ec810287b1b3fffffffff605955700277abdcdab07d5a77ac6d6b9fffffffff605a5570025daf6654b1eaa55fd64df5efffffffff605b55700244c49c648baa98192dce88b7ffffffff605c5570022ce03cd5619a311b2471268bffffffff605d55700215f77c045fbe885654a44a0fffffffff605e556001600160811b03605f557001eaefdbdaaee7421fc4d3ede5ffffffff6060557001d6bd8b2eb257df7e8ca57b09bfffffff6061557001c35fedd14b861eb0443f7f133fffffff6062557001b0ce43b322bcde4a56e8ada5afffffff60635570019f0028ec1fff007f5a195a39dfffffff60645570018ded91f0e72ee74f49b15ba527ffffff60655570017d8ec7f04136f4e5615fd41a63ffffff60665570016ddc6556cdb84bdc8d12d22e6fffffff60675570015ecf52776a1155b5bd8395814f7fffff60685570015060c256cb23b3b3cc3754cf40ffffff6069557001428a2f98d728ae223ddab715be3fffff606a5570013545598e5c23276ccf0ede68034fffff606b557001288c4161ce1d6f54b7f61081194fffff606c5570011c592761c666aa641d5a01a40f17ffff606d55700110a688680a7530515f3e6e6cfdcdffff606e557001056f1b5bedf75c6bcb2ce8aed428ffff606f556ffaadceceeff8a0890f3875f008277fff6070556ff05dc6b27edad306388a600f6ba0bfff6071556fe67a5a25da41063de1495d5b18cdbfff6072556fdcff115b14eedde6fc3aa5353f2e4fff6073556fd3e7a3924312399f9aae2e0f868f8fff6074556fcb2ff529eb71e41582cccd5a1ee26fff6075556fc2d415c3db974ab32a51840c0b67edff6076556fbad03e7d883f69ad5b0a186184e06bff6077556fb320d03b2c343d4829abd6075f0cc5ff6078556fabc25204e02828d73c6e80bcdb1a95bf6079556fa4b16f74ee4bb2040a1ec6c15fbbf2df607a556f9deaf736ac1f569deb1b5ae3f36c130f607b556f976bd9952c7aa957f5937d790ef65037607c556f9131271922eaa6064b73a22d0bd4f2bf607d556f8b380f3558668c46c91c49a2f8e967b9607e556f857ddf0117efa215952912839f6473e6607f55565b614228806200074f6000396000f3fe608060405234801561001057600080fd5b506004361061013e5760003560e01c8063119220a51461014357806329576c821461016c5780632bb66e1d1461018d57806332749461146101c757806332833d51146101ef57806345b8bafc146102195780634c3eea9e1461023e578063544caa56146102515780635bff1d92146102845780636350d774146102da578063671a11b5146102ed57806367f84adc1461030057806379c91b37146103135780638888a737146103365780638fabd82d1461034957806392aec23c1461035c578063950508621461036f578063a324cca014610382578063aa248a4614610395578063ad615dec14610ac5578063b19210b014610ad8578063b33d96b014610aeb578063b3923a9914610afe578063ca22297914610b11578063ce78456414610b24578063d691093714610b37575b600080fd5b6101566101513660046138a6565b610b57565b604051610163919061392a565b60405180910390f35b61017f61017a36600461396e565b610ce6565b604051908152602001610163565b6101a061019b3660046139a4565b611348565b6040805163ffffffff94851681529284166020840152921691810191909152606001610163565b6101da6101d53660046139d2565b6113c7565b60408051928352602083019190915201610163565b6102026101fd366004613a2f565b6115ca565b6040805192835260ff909116602083015201610163565b61022c610227366004613a79565b611705565b60405160ff9091168152602001610163565b61017f61024c366004613a79565b611772565b61026461025f3660046139a4565b611862565b604080516001600160a01b03938416815292909116602083015201610163565b6102976102923660046139a4565b611957565b604080516001600160a01b03909716875260208701959095529385019290925263ffffffff908116606085015290811660808401521660a082015260c001610163565b61017f6102e8366004613a92565b611bfe565b61017f6102fb366004613ad3565b611c37565b61015661030e3660046138a6565b611da3565b610326610321366004613b3a565b611f14565b6040519015158152602001610163565b61017f610344366004613a92565b612037565b610156610357366004613b87565b612063565b61017f61036a366004613c0e565b6121d5565b61017f61037d366004613a79565b6122a8565b61017f610390366004613a79565b6128d3565b610ac36001641c35fedd1560601b036020556001646c3390ecc9605e1b036021556001640cf801476160611b0360225560016431bdb23e1d605f1b0360235560016502fb1d8fe083605b1b0360245560016505b771955b37605a1b036025556001650af67a93bb5160591b0360265560016515060c256cb360581b036027556001651428a2f98d7360581b036028556001654d515663970960561b03602955600165944620b0e70f60551b03602a55600166011c592761c66760541b03602b5560016602214d10d014eb60531b03602c55600166020ade36b7dbef60531b03602d5560016603eab73b3bbfe360521b03602e556001660782ee3593f6d760511b03602f556001661ccf4b44bb4821604f1b0360305560016606e7f88ad8a77760511b0360315560016669f3d1c921891d604d1b03603255600166cb2ff529eb71e5604c1b03603355600166c2d415c3db974b604c1b0360345560016702eb40f9f620fda7604a1b0360355560016705990681d961a1eb60491b03603655600167055e12902701414760491b0360375560016714962dee9dc9764160471b0360385560016704ef57b9b560fab560491b0360395560016712ed7b32a58f552b60471b03603a556001679131271922eaa60760441b03603b556001678b380f3558668c4760441b03603c556001680215f77c045fbe885760421b03603d556001600160831b03603e556001670f577eded5773a1160471b03603f556001680eb5ec597592befbf5603f1b036040556001681c35fedd14b861eb05603e1b036041556001683619c87664579bc94b603d1b0360425560016867c00a3b07ffc01fd7603c1b03604355600168c6f6c8f8739773a7a5603b1b03604455600168bec763f8209b7a72b1603b1b0360455560016902dbb8caad9b7097b91b60391b03604655600169057b3d49dda84556d6f760381b03604755600169054183095b2c8ececf3160381b036048556001690a14517cc6b9457111ef60371b0360495560016913545598e5c23276ccf160361b03604a556001692511882c39c3adea96ff60351b03604b55600169471649d87199aa99075760341b03604c557004429a21a029d4c1457cfbffffffffffff604d55700415bc6d6fb7dd71af2cb3ffffffffffff604e557003eab73b3bbfe282243ce1ffffffffffff604f557003c1771ac9fb6b4c18e229ffffffffffff605055700399e96897690418f785257fffffffffff605155700373fc456c53bb779bf0ea9fffffffffff60525570034f9e8e490c48e67e6ab8bfffffffffff60535570032cbfd4a7adc790560b3337ffffffffff60545570030b50570f6e5d2acca94613ffffffffff6055557002eb40f9f620fda6b56c2861ffffffffff6056557002cc8340ecb0d0f520a6af58ffffffffff6057557002af09481380a0a35cf1ba02ffffffffff605855700292c5bdd3b92ec810287b1b3fffffffff605955700277abdcdab07d5a77ac6d6b9fffffffff605a5570025daf6654b1eaa55fd64df5efffffffff605b55700244c49c648baa98192dce88b7ffffffff605c5570022ce03cd5619a311b2471268bffffffff605d55700215f77c045fbe885654a44a0fffffffff605e556001600160811b03605f557001eaefdbdaaee7421fc4d3ede5ffffffff6060557001d6bd8b2eb257df7e8ca57b09bfffffff6061557001c35fedd14b861eb0443f7f133fffffff6062557001b0ce43b322bcde4a56e8ada5afffffff60635570019f0028ec1fff007f5a195a39dfffffff60645570018ded91f0e72ee74f49b15ba527ffffff60655570017d8ec7f04136f4e5615fd41a63ffffff60665570016ddc6556cdb84bdc8d12d22e6fffffff60675570015ecf52776a1155b5bd8395814f7fffff60685570015060c256cb23b3b3cc3754cf40ffffff6069557001428a2f98d728ae223ddab715be3fffff606a5570013545598e5c23276ccf0ede68034fffff606b557001288c4161ce1d6f54b7f61081194fffff606c5570011c592761c666aa641d5a01a40f17ffff606d55700110a688680a7530515f3e6e6cfdcdffff606e557001056f1b5bedf75c6bcb2ce8aed428ffff606f556ffaadceceeff8a0890f3875f008277fff6070556ff05dc6b27edad306388a600f6ba0bfff6071556fe67a5a25da41063de1495d5b18cdbfff6072556fdcff115b14eedde6fc3aa5353f2e4fff6073556fd3e7a3924312399f9aae2e0f868f8fff6074556fcb2ff529eb71e41582cccd5a1ee26fff6075556fc2d415c3db974ab32a51840c0b67edff6076556fbad03e7d883f69ad5b0a186184e06bff6077556fb320d03b2c343d4829abd6075f0cc5ff6078556fabc25204e02828d73c6e80bcdb1a95bf6079556fa4b16f74ee4bb2040a1ec6c15fbbf2df607a556f9deaf736ac1f569deb1b5ae3f36c130f607b556f976bd9952c7aa957f5937d790ef65037607c556f9131271922eaa6064b73a22d0bd4f2bf607d556f8b380f3558668c46c91c49a2f8e967b9607e556f857ddf0117efa215952912839f6473e6607f55565b005b61017f610ad3366004613c9b565b612e42565b61017f610ae6366004613ad3565b612ee8565b610297610af93660046139d2565b613060565b610156610b0c366004613b87565b6132ee565b6101a0610b1f366004613cc7565b61344c565b61022c610b32366004613a79565b6135a7565b610b4a610b453660046139a4565b61365a565b6040516101639190613ce4565b606081610b7f5760405162461bcd60e51b8152600401610b7690613cf8565b60405180910390fd5b610b8a826001613d44565b6001600160401b03811115610ba157610ba1613d5c565b604051908082528060200260200182016040528015610bca578160200160208202803683370190505b5090508381600081518110610be157610be1613d72565b60209081029190910101528560005b83811015610ca957600080600080600080610c328f8c8c8a818110610c1757610c17613d72565b9050602002016020810190610c2c9190613cc7565b8a613060565b955095509550955095509550610c65898881518110610c5357610c53613d72565b60200260200101518686868686611c37565b89610c71896001613d44565b81518110610c8157610c81613d72565b6020026020010181815250508597505050505050508080610ca190613d88565b915050610bf0565b50856001600160a01b0316816001600160a01b031614610cdb5760405162461bcd60e51b8152600401610b7690613da3565b509695505050505050565b6000828160ff8416610cf88380613de9565b901c9150610d15826b0d10b13981d2a0bc5e5fdcab601e1b613de9565b610d1f9082613d44565b905060ff8416610d2f8684613de9565b901c9150610d4c826b045ae5bdd5f0e03eca1ff439601e1b613de9565b610d569082613d44565b905060ff8416610d668684613de9565b901c9150610d83826e45ae5bdd5f0e03eca1ff4390000000613de9565b610d8d9082613d44565b905060ff8416610d9d8684613de9565b901c9150610db9826adefabf91302cd95b9ffda5601c1b613de9565b610dc39082613d44565b905060ff8416610dd38684613de9565b901c9150610def826a4a53953065644873dfff37601b1b613de9565b610df99082613d44565b905060ff8416610e098684613de9565b901c9150610e25826d54f1cf12bd04e516b6da88000000613de9565b610e2f9082613d44565b905060ff8416610e3f8684613de9565b901c9150610e5b826d0a9e39e257a09ca2d6db51000000613de9565b610e659082613d44565b905060ff8416610e758684613de9565b901c9150610e91826d012e066e7b839fa050c309000000613de9565b610e9b9082613d44565b905060ff8416610eab8684613de9565b901c9150610ec6826c1e33d7d926c329a1ad1a800000613de9565b610ed09082613d44565b905060ff8416610ee08684613de9565b901c9150610efb826c02bee513bdb4a6b19b5f800000613de9565b610f059082613d44565b905060ff8416610f158684613de9565b901c9150610f2f826b3a9316fa79b88eccf2a00000613de9565b610f399082613d44565b905060ff8416610f498684613de9565b901c9150610f63826b048177ebe1fa812375200000613de9565b610f6d9082613d44565b905060ff8416610f7d8684613de9565b901c9150610f96826a5263fe90242dcbacf00000613de9565b610fa09082613d44565b905060ff8416610fb08684613de9565b901c9150610fc9826a057e22099c030d94100000613de9565b610fd39082613d44565b905060ff8416610fe38684613de9565b901c9150610ffb826957e22099c030d9410000613de9565b6110059082613d44565b905060ff84166110158684613de9565b901c915061102d8269052b6b54569976310000613de9565b6110379082613d44565b905060ff84166110478684613de9565b901c915061105e82684985f67696bf748000613de9565b6110689082613d44565b905060ff84166110788684613de9565b901c915061108f826803dea12ea99e498000613de9565b6110999082613d44565b905060ff84166110a98684613de9565b901c91506110bf826731880f2214b6e000613de9565b6110c99082613d44565b905060ff84166110d98684613de9565b901c91506110ef8267025bcff56eb36000613de9565b6110f99082613d44565b905060ff84166111098684613de9565b901c915061111e82661b722e10ab1000613de9565b6111289082613d44565b905060ff84166111388684613de9565b901c915061114d826601317c70077000613de9565b6111579082613d44565b905060ff84166111678684613de9565b901c915061117b82650cba84aafa00613de9565b6111859082613d44565b905060ff84166111958684613de9565b901c91506111a8826482573a0a00613de9565b6111b29082613d44565b905060ff84166111c28684613de9565b901c91506111d5826405035ad900613de9565b6111df9082613d44565b905060ff84166111ef8684613de9565b901c915061120182632f881b00613de9565b61120b9082613d44565b905060ff841661121b8684613de9565b901c915061122d826301b29340613de9565b6112379082613d44565b905060ff84166112478684613de9565b901c915061125882620efc40613de9565b6112629082613d44565b905060ff84166112728684613de9565b901c915061128282617fe0613de9565b61128c9082613d44565b905060ff841661129c8684613de9565b901c91506112ac82610420613de9565b6112b69082613d44565b905060ff84166112c68684613de9565b901c91506112d5826021613de9565b6112df9082613d44565b905060ff84166112ef8684613de9565b901c91506112fe826001613de9565b6113089082613d44565b9050600160ff85161b8561132b6b0d10b13981d2a0bc5e5fdcab601f1b84613e1e565b6113359190613d44565b61133f9190613d44565b95945050505050565b6000806000846001600160a01b031663ca222979856040518263ffffffff1660e01b81526004016113799190613ce4565b606060405180830381865afa158015611396573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ba9190613e32565b9250925092509250925092565b6000806000806113d78686611862565b91509150600080886001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa15801561141c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114409190613e74565b506001600160701b031691506001600160701b03169150886001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611495573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b99190613ea5565b6001600160a01b0316846001600160a01b031614801561154b5750886001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611512573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115369190613ea5565b6001600160a01b0316836001600160a01b0316145b6115975760405162461bcd60e51b815260206004820152601d60248201527f5265717569656d466f726d756c613a20496e76616c696420746f6b656e0000006044820152606401610b76565b836001600160a01b0316886001600160a01b0316146115b75780826115ba565b81815b909a909950975050505050505050565b6000808486101561161b5760405162461bcd60e51b815260206004820152601b60248201527a1b9bdd081cdd5c1c1bdc9d0817d8985cd953880f0817d8985cd951602a1b6044820152606401610b76565b600160811b861061162b57600080fd5b6000808661163d6001607f1b8a613de9565b6116479190613e1e565b905070015bf0a8b1457695355fb8ac404e7a79e38110156116725761166b816128d3565b915061167e565b61167b81611772565b91505b60008563ffffffff168763ffffffff16846116999190613de9565b6116a39190613e1e565b9050600160831b8110156116c8576116ba816122a8565b607f945094505050506116fc565b60006116d3826135a7565b90506116ef6116e382607f613ec2565b60ff1683901c82610ce6565b955093506116fc92505050565b94509492505050565b600080610100831015611738575b600183111561173357600192831c9261172c9082613ee5565b9050611713565b61176c565b60805b60ff81161561176a57600160ff82161b841061175f5760ff81169390931c92908117905b60011c607f1661173b565b505b92915050565b600080600160801b83106117b15760006117936102276001607f1b86613e1e565b60ff811694851c949091506117ad906001607f1b90613de9565b9150505b6001607f1b83111561182657607f5b60ff811615611824576001607f1b6117d88580613de9565b6117e29190613e1e565b9350600160801b841061181457600193841c936117ff9082613ec2565b60ff166001901b826118119190613d44565b91505b61181d81613f0a565b90506117c0565b505b6f05b9de1d10bf4103d647b0955897ba806118516f03f80fe03f80fe03f80fe03f80fe03f883613de9565b61185b9190613e1e565b9392505050565b600080826001600160a01b0316846001600160a01b031614156118d35760405162461bcd60e51b815260206004820152602360248201527f5265717569656d466f726d756c613a204944454e544943414c5f41444452455360448201526253455360e81b6064820152608401610b76565b826001600160a01b0316846001600160a01b0316106118f35782846118f6565b83835b90925090506001600160a01b0382166119505760405162461bcd60e51b815260206004820152601c60248201527b5265717569656d466f726d756c613a205a45524f5f4144445245535360201b6044820152606401610b76565b9250929050565b600080600080600080600080896001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156119a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119c59190613e74565b506001600160701b031691506001600160701b031691506000806119e88c61344c565b8097508193508294505050508b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a569190613ea5565b6001600160a01b03168b6001600160a01b03161415611ae6578b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611aad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad19190613ea5565b99509297509095509350915084848484611bf0565b8b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b489190613ea5565b6001600160a01b03168b6001600160a01b03161415611bd8578b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bc39190613ea5565b99509197509195509350915083858385611bf0565b60405162461bcd60e51b8152600401610b7690613f27565b505050509295509295509295565b600080600080600080611c118989611957565b9550955095509550955050611c2a878587858786612ee8565b9998505050505050505050565b6000808711611c9a5760405162461bcd60e51b815260206004820152602960248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f494e50604482015268155517d05353d5539560ba1b6064820152608401610b76565b600086118015611caa5750600085115b611cc65760405162461bcd60e51b8152600401610b7690613f5e565b6000611cec611cd784612710613fa4565b63ffffffff168961379390919063ffffffff16565b90508363ffffffff168563ffffffff161415611d3457611d1881611d1289612710613793565b9061379f565b611d228783613793565b611d2c9190613e1e565b915050611d99565b60008080611d4884611d128c612710613793565b9050611d6181611d5a8c612710613793565b8a8a6115ca565b90935091506000611d728a85613793565b905060ff83168a901b84611d868284613fc9565b611d909190613e1e565b96505050505050505b9695505050505050565b606081611dc25760405162461bcd60e51b8152600401610b7690613cf8565b611dcd826001613d44565b6001600160401b03811115611de457611de4613d5c565b604051908082528060200260200182016040528015611e0d578160200160208202803683370190505b509050838160018351611e209190613fc9565b81518110611e3057611e30613d72565b602090810291909101015284825b8015611ee25760008080808080611e6b8f8c8c611e5c60018c613fc9565b818110610c1757610c17613d72565b955095509550955095509550611e9e898881518110611e8c57611e8c613d72565b60200260200101518587858786612ee8565b89611eaa60018a613fc9565b81518110611eba57611eba613d72565b6020026020010181815250508597505050505050508080611eda90613fe0565b915050611e3e565b50866001600160a01b0316816001600160a01b031614610cdb5760405162461bcd60e51b8152600401610b7690613ff7565b60008163ffffffff1660321415611f4257611f2f8686613793565b611f398585613793565b1015905061133f565b858410158015611f525750848310155b15611f5f5750600161133f565b858411158015611f6f5750848311155b15611f7c5750600061133f565b816000611f8a826064613fa4565b90506000806000808b8a10611fc857611fa68b8a8760326115ca565b90945060ff169250611fbb8a8d8860326115ca565b90925060ff169050611ff3565b611fd58c8b8860326115ca565b90945060ff169250611fea898c8760326115ca565b90925060ff1690505b60008184106120025781612004565b835b90506120108185613fc9565b935061201c8183613fc9565b9290921c9390921c92909211159a9950505050505050505050565b60008060008060008061204a8989611957565b9550955095509550955050611c2a878686868686611c37565b6060816120825760405162461bcd60e51b8152600401610b7690613cf8565b61208d826001613d44565b6001600160401b038111156120a4576120a4613d5c565b6040519080825280602002602001820160405280156120cd578160200160208202803683370190505b50905083816000815181106120e4576120e4613d72565b60209081029190910101528560005b83811015612199576000806000806000806121348b8b8981811061211957612119613d72565b905060200201602081019061212e9190613cc7565b89611957565b955095509550955095509550612155898881518110610c5357610c53613d72565b89612161896001613d44565b8151811061217157612171613d72565b602002602001018181525050859750505050505050808061219190613d88565b9150506120f3565b50856001600160a01b0316816001600160a01b0316146121cb5760405162461bcd60e51b8152600401610b7690613da3565b5095945050505050565b60006001600160701b03831615612241576000806122146122026001600160701b03878116908c1661379f565b8a6001600160701b03168960646115ca565b90925060ff16905061223c8a6122368361222e8387613793565b87911c61379f565b906137bc565b925050505b6001600160701b0382161561229d5760008061227e61226c6001600160701b03868116908b1661379f565b896001600160701b03168860646115ca565b90925060ff1690506122988a6122368361222e8387613793565b925050505b979650505050505050565b60008080806122bb6001607c1b8661403c565b91508190506001607f1b6122cf8280613de9565b6122d99190613e1e565b90506122ed816710e1b3be415a0000613de9565b6122f79084613d44565b92506001607f1b6123088383613de9565b6123129190613e1e565b9050612326816705a0913f6b1e0000613de9565b6123309084613d44565b92506001607f1b6123418383613de9565b61234b9190613e1e565b905061235f81670168244fdac78000613de9565b6123699084613d44565b92506001607f1b61237a8383613de9565b6123849190613e1e565b905061239781664807432bc18000613de9565b6123a19084613d44565b92506001607f1b6123b28383613de9565b6123bc9190613e1e565b90506123cf81660c0135dca04000613de9565b6123d99084613d44565b92506001607f1b6123ea8383613de9565b6123f49190613e1e565b9050612407816601b707b1cdc000613de9565b6124119084613d44565b92506001607f1b6124228383613de9565b61242c9190613e1e565b905061243e816536e0f639b800613de9565b6124489084613d44565b92506001607f1b6124598383613de9565b6124639190613e1e565b905061247581650618fee9f800613de9565b61247f9084613d44565b92506001607f1b6124908383613de9565b61249a9190613e1e565b90506124ab81649c197dcc00613de9565b6124b59084613d44565b92506001607f1b6124c68383613de9565b6124d09190613e1e565b90506124e181640e30dce400613de9565b6124eb9084613d44565b92506001607f1b6124fc8383613de9565b6125069190613e1e565b90506125178164012ebd1300613de9565b6125219084613d44565b92506001607f1b6125328383613de9565b61253c9190613e1e565b905061254c816317499f00613de9565b6125569084613d44565b92506001607f1b6125678383613de9565b6125719190613e1e565b9050612581816301a9d480613de9565b61258b9084613d44565b92506001607f1b61259c8383613de9565b6125a69190613e1e565b90506125b581621c6380613de9565b6125bf9084613d44565b92506001607f1b6125d08383613de9565b6125da9190613e1e565b90506125e9816201c638613de9565b6125f39084613d44565b92506001607f1b6126048383613de9565b61260e9190613e1e565b905061261c81611ab8613de9565b6126269084613d44565b92506001607f1b6126378383613de9565b6126419190613e1e565b905061264f8161017c613de9565b6126599084613d44565b92506001607f1b61266a8383613de9565b6126749190613e1e565b9050612681816014613de9565b61268b9084613d44565b92506001607f1b61269c8383613de9565b6126a69190613e1e565b90506126b3816001613de9565b6126bd9084613d44565b92506001607f1b826126d76721c3677c82b4000086613e1e565b6126e19190613d44565b6126eb9190613d44565b92506001607c1b8516156127335770018ebef9eac820ae8682b9793ac6d1e776612726847001c3d6a24ed82218787d624d3e5eba95f9613de9565b6127309190613e1e565b92505b6001607d1b851615612779577001368b2fc6f9609fe7aceb46aa619baed461276c8470018ebef9eac820ae8682b9793ac6d1e778613de9565b6127769190613e1e565b92505b6001607e1b8516156127be576fbc5ab1b16779be3575bd8f0520a9f21f6127b1847001368b2fc6f9609fe7aceb46aa619baed5613de9565b6127bb9190613e1e565b92505b6001607f1b851615612802576f454aaa8efe072e7f6ddbab84b40a55c96127f5846fbc5ab1b16779be3575bd8f0520a9f21e613de9565b6127ff9190613e1e565b92505b600160801b851615612846576f0960aadc109e7a3bf4578099615711ea612839846f454aaa8efe072e7f6ddbab84b40a55c5613de9565b6128439190613e1e565b92505b600160811b851615612889576e2bf84208204f5977f9a8cf01fdce3d61287c846f0960aadc109e7a3bf4578099615711d7613de9565b6128869190613e1e565b92505b600160821b8516156128ca576d03c6ab775dd0b95b4cbee7e65d116128bd846e2bf84208204f5977f9a8cf01fdc307613de9565b6128c79190613e1e565b92505b50909392505050565b6000808080806fd3094c70f034de4b96ff7d5b6f99fcd8861061292c576128fe6001607e1b85613d44565b93506fd3094c70f034de4b96ff7d5b6f99fcd861291f6001607f1b88613de9565b6129299190613e1e565b95505b6fa45af1e1f40c333b3de1db4dd55f29a7861061297f576129516001607d1b85613d44565b93506fa45af1e1f40c333b3de1db4dd55f29a76129726001607f1b88613de9565b61297c9190613e1e565b95505b6f910b022db7ae67ce76b441c27035c6a186106129d2576129a46001607c1b85613d44565b93506f910b022db7ae67ce76b441c27035c6a16129c56001607f1b88613de9565b6129cf9190613e1e565b95505b6f88415abbe9a76bead8d00cf112e4d4a88610612a25576129f76001607b1b85613d44565b93506f88415abbe9a76bead8d00cf112e4d4a8612a186001607f1b88613de9565b612a229190613e1e565b95505b6f84102b00893f64c705e841d5d4064bd38610612a7857612a4a6001607a1b85613d44565b93506f84102b00893f64c705e841d5d4064bd3612a6b6001607f1b88613de9565b612a759190613e1e565b95505b6f8204055aaef1c8bd5c3259f4822735a28610612acb57612a9d600160791b85613d44565b93506f8204055aaef1c8bd5c3259f4822735a2612abe6001607f1b88613de9565b612ac89190613e1e565b95505b6f810100ab00222d861931c15e39b44e998610612b1e57612af0600160781b85613d44565b93506f810100ab00222d861931c15e39b44e99612b116001607f1b88613de9565b612b1b9190613e1e565b95505b6f808040155aabbbe9451521693554f7338610612b7157612b43600160771b85613d44565b93506f808040155aabbbe9451521693554f733612b646001607f1b88613de9565b612b6e9190613e1e565b95505b612b7f6001607f1b87613fc9565b92508291506001607f1b612b938380613de9565b612b9d9190613e1e565b9050600160801b612bae8482613fc9565b612bb89084613de9565b612bc29190613e1e565b612bcc9085613d44565b93506001607f1b612bdd8284613de9565b612be79190613e1e565b9150600160811b612c08846faaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa613fc9565b612c129084613de9565b612c1c9190613e1e565b612c269085613d44565b93506001607f1b612c378284613de9565b612c419190613e1e565b9150600360801b612c62846f99999999999999999999999999999999613fc9565b612c6c9084613de9565b612c769190613e1e565b612c809085613d44565b93506001607f1b612c918284613de9565b612c9b9190613e1e565b9150600160821b612cbc846f92492492492492492492492492492492613fc9565b612cc69084613de9565b612cd09190613e1e565b612cda9085613d44565b93506001607f1b612ceb8284613de9565b612cf59190613e1e565b9150600560801b612d16846f8e38e38e38e38e38e38e38e38e38e38e613fc9565b612d209084613de9565b612d2a9190613e1e565b612d349085613d44565b93506001607f1b612d458284613de9565b612d4f9190613e1e565b9150600360811b612d70846f8ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b613fc9565b612d7a9084613de9565b612d849190613e1e565b612d8e9085613d44565b93506001607f1b612d9f8284613de9565b612da99190613e1e565b9150600760801b612dca846f89d89d89d89d89d89d89d89d89d89d89613fc9565b612dd49084613de9565b612dde9190613e1e565b612de89085613d44565b93506001607f1b612df98284613de9565b612e039190613e1e565b9150600160831b612e24846f88888888888888888888888888888888613fc9565b612e2e9084613de9565b612e389190613e1e565b611d999085613d44565b6000808411612e9f5760405162461bcd60e51b815260206004820152602360248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f414d4f60448201526215539560ea1b6064820152608401610b76565b600083118015612eaf5750600082115b612ecb5760405162461bcd60e51b8152600401610b7690613f5e565b82612ed68584613793565b612ee09190613e1e565b949350505050565b6000808711612f4c5760405162461bcd60e51b815260206004820152602a60248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f4f555460448201526914155517d05353d5539560b21b6064820152608401610b76565b600086118015612f5c5750600085115b612f785760405162461bcd60e51b8152600401610b7690613f5e565b8263ffffffff168463ffffffff161415612fea576000612fa4612710612f9e898b613793565b90613793565b90506000612fd0612fb785612710613fa4565b63ffffffff16612f9e8b8a6137bc90919063ffffffff16565b9050612fe16001611d128385613e1e565b92505050611d99565b60008080612ff8888b6137bc565b90506130068882888a6115ca565b909350915060006130198a612710613793565b905060006130278286613793565b905060ff841682901b611d9060016130418a612710613fa4565b63ffffffff1660ff88166130558587613fc9565b611d1292911c613e1e565b600080600080600080600080896001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156130aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130ce9190613e74565b506001600160701b031691506001600160701b031691506000806130f28d8d611348565b8097508193508294505050508b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561313c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131609190613ea5565b6001600160a01b03168b6001600160a01b031614156131f0578b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156131b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131db9190613ea5565b995092975090955093509150848484846132de565b8b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561322e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132529190613ea5565b6001600160a01b03168b6001600160a01b03161415611bd8578b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156132a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132cd9190613ea5565b995091975091955093509150838583855b5050505093975093979195509350565b60608161330d5760405162461bcd60e51b8152600401610b7690613cf8565b613318826001613d44565b6001600160401b0381111561332f5761332f613d5c565b604051908082528060200260200182016040528015613358578160200160208202803683370190505b50905083816001835161336b9190613fc9565b8151811061337b5761337b613d72565b602090810291909101015284825b801561341a57600080808080806133b58b8b6133a660018b613fc9565b81811061211957612119613d72565b9550955095509550955095506133d6898881518110611e8c57611e8c613d72565b896133e260018a613fc9565b815181106133f2576133f2613d72565b602002602001018181525050859750505050505050808061341290613fe0565b915050613389565b50866001600160a01b0316816001600160a01b0316146121cb5760405162461bcd60e51b8152600401610b7690613ff7565b6000806000836001600160a01b03166332bfe4696040518163ffffffff1660e01b81526004016040805180830381865afa9250505080156134aa575060408051601f3d908101601f191682019092526134a791810190614050565b60015b613533576134b661407f565b806308c379a014156134f057506134cb6140d5565b806134d657506134f2565b8060405162461bcd60e51b8152600401610b76919061415e565b505b3d80801561351c576040519150601f19603f3d011682016040523d82523d6000602084013e613521565b606091505b50603280601e935093509350506135a0565b8181876001600160a01b031663d4cadf686040518163ffffffff1660e01b8152600401602060405180830381865afa158015613573573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061359791906141b3565b94509450945050505b9193909250565b60006020607f5b60ff81166135bd836001613ee5565b60ff16101561361057600060026135d48385613ee5565b6135de91906141d0565b90508460008260ff16608081106135f7576135f7613d72565b0154106136065780925061360a565b8091505b506135ae565b8360008260ff166080811061362757613627613d72565b015410613635579392505050565b8360008360ff166080811061364c5761364c613d72565b01541061013e575092915050565b600080836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561369b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136bf9190613ea5565b90506000846001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015613701573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137259190613ea5565b9050836001600160a01b0316826001600160a01b031614806137585750836001600160a01b0316816001600160a01b0316145b6137745760405162461bcd60e51b8152600401610b7690613f27565b836001600160a01b0316826001600160a01b031614612ee0578161133f565b600061185b8284613de9565b6000806137ac8385613d44565b905061185b8482101560006137ca565b600061185b838360016137dc565b816137d8576137d8816137f7565b5050565b60006137eb84841115836137ca565b600061133f8486613fc9565b62461bcd60e51b6000908152602060045260076024526652455123000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6001600160a01b038116811461385f57600080fd5b50565b60008083601f84011261387457600080fd5b5081356001600160401b0381111561388b57600080fd5b6020830191508360208260051b850101111561195057600080fd5b60008060008060008060a087890312156138bf57600080fd5b86356138ca8161384a565b955060208701356138da8161384a565b945060408701356138ea8161384a565b93506060870135925060808701356001600160401b0381111561390c57600080fd5b61391889828a01613862565b979a9699509497509295939492505050565b6020808252825182820181905260009190848201906040850190845b8181101561396257835183529284019291840191600101613946565b50909695505050505050565b6000806040838503121561398157600080fd5b82359150602083013560ff8116811461399957600080fd5b809150509250929050565b600080604083850312156139b757600080fd5b82356139c28161384a565b915060208301356139998161384a565b6000806000606084860312156139e757600080fd5b83356139f28161384a565b92506020840135613a028161384a565b91506040840135613a128161384a565b809150509250925092565b63ffffffff8116811461385f57600080fd5b60008060008060808587031215613a4557600080fd5b84359350602085013592506040850135613a5e81613a1d565b91506060850135613a6e81613a1d565b939692955090935050565b600060208284031215613a8b57600080fd5b5035919050565b600080600060608486031215613aa757600080fd5b8335613ab28161384a565b92506020840135613ac28161384a565b929592945050506040919091013590565b60008060008060008060c08789031215613aec57600080fd5b8635955060208701359450604087013593506060870135613b0c81613a1d565b92506080870135613b1c81613a1d565b915060a0870135613b2c81613a1d565b809150509295509295509295565b600080600080600060a08688031215613b5257600080fd5b853594506020860135935060408601359250606086013591506080860135613b7981613a1d565b809150509295509295909350565b600080600080600060808688031215613b9f57600080fd5b8535613baa8161384a565b94506020860135613bba8161384a565b93506040860135925060608601356001600160401b03811115613bdc57600080fd5b613be888828901613862565b969995985093965092949392505050565b6001600160701b038116811461385f57600080fd5b600080600080600080600060e0888a031215613c2957600080fd5b873596506020880135613c3b81613bf9565b95506040880135613c4b81613bf9565b94506060880135613c5b81613a1d565b93506080880135613c6b81613a1d565b925060a0880135613c7b81613bf9565b915060c0880135613c8b81613bf9565b8091505092959891949750929550565b600080600060608486031215613cb057600080fd5b505081359360208301359350604090920135919050565b600060208284031215613cd957600080fd5b813561185b8161384a565b6001600160a01b0391909116815260200190565b6020808252601c908201527b0a4cae2ead2cada8cdee4daead8c27440929cac82989288bea082a8960231b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115613d5757613d57613d2e565b500190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000600019821415613d9c57613d9c613d2e565b5060010190565b60208082526026908201527f5265717569656d466f726d756c613a20494e56414c49445f544f4b454e5f4f556040820152650a8bea082a8960d31b606082015260800190565b6000816000190483118215151615613e0357613e03613d2e565b500290565b634e487b7160e01b600052601260045260246000fd5b600082613e2d57613e2d613e08565b500490565b600080600060608486031215613e4757600080fd5b8351613e5281613a1d565b6020850151909350613e6381613a1d565b6040850151909250613a1281613a1d565b600080600060608486031215613e8957600080fd5b8351613e9481613bf9565b6020850151909350613e6381613bf9565b600060208284031215613eb757600080fd5b815161185b8161384a565b600060ff821660ff841680821015613edc57613edc613d2e565b90039392505050565b600060ff821660ff84168060ff03821115613f0257613f02613d2e565b019392505050565b600060ff821680613f1d57613f1d613d2e565b6000190192915050565b6020808252601e908201527f5265717569656d466f726d756c613a20496e76616c696420746f6b656e410000604082015260600190565b60208082526026908201527f5265717569656d466f726d756c613a20494e53554646494349454e545f4c495160408201526555494449545960d01b606082015260800190565b600063ffffffff83811690831681811015613fc157613fc1613d2e565b039392505050565b600082821015613fdb57613fdb613d2e565b500390565b600081613fef57613fef613d2e565b506000190190565b60208082526025908201527f5265717569656d466f726d756c613a20494e56414c49445f544f4b454e5f494e6040820152640bea082a8960db1b606082015260800190565b60008261404b5761404b613e08565b500690565b6000806040838503121561406357600080fd5b825161406e81613a1d565b602084015190925061399981613a1d565b600060033d11156140985760046000803e5060005160e01c5b90565b601f8201601f191681016001600160401b03811182821017156140ce57634e487b7160e01b600052604160045260246000fd5b6040525050565b600060443d10156140e35790565b6040516003193d81016004833e81513d6001600160401b03808311602484018310171561411257505050505090565b828501915081518181111561412a5750505050505090565b843d87010160208285010111156141445750505050505090565b6141536020828601018761409b565b509095945050505050565b600060208083528351808285015260005b8181101561418b5785810183015185820160400152820161416f565b8181111561419d576000604083870101525b50601f01601f1916929092016040019392505050565b6000602082840312156141c557600080fd5b815161185b81613a1d565b600060ff8316806141e3576141e3613e08565b8060ff8416049150509291505056fea264697066735822122049444f659b70897fd1bde93194e2ab197326e2e42c1884bfe400336ca6f2409b64736f6c634300080a0033";

export class RequiemFormulaTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RequiemFormulaTest> {
    return super.deploy(overrides || {}) as Promise<RequiemFormulaTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RequiemFormulaTest {
    return super.attach(address) as RequiemFormulaTest;
  }
  connect(signer: Signer): RequiemFormulaTest__factory {
    return super.connect(signer) as RequiemFormulaTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RequiemFormulaTestInterface {
    return new utils.Interface(_abi) as RequiemFormulaTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RequiemFormulaTest {
    return new Contract(address, _abi, signerOrProvider) as RequiemFormulaTest;
  }
}
