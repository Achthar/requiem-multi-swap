/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RequiemFormulaTest,
  RequiemFormulaTestInterface,
} from "../RequiemFormulaTest";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reserve0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserve1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance0Adjusted",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance1Adjusted",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
    ],
    name: "ensureConstantValue",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
    ],
    name: "findPositionInMaxExpArray",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_n",
        type: "uint256",
      },
    ],
    name: "floorLog2",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_precision",
        type: "uint8",
      },
    ],
    name: "generalExp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "generalLog",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveOut",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightIn",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightOut",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    name: "getAmountIn",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveOut",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightIn",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightOut",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    name: "getAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getFactoryAmountsIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getFactoryAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    name: "getFactoryReserveAndWeights",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightA",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightB",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "getFactoryWeightsAndSwapFee",
    outputs: [
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    name: "getOtherToken",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "getPairAmountIn",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "getPairAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    name: "getReserveAndWeights",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightA",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightB",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "getWeightsAndSwapFee",
    outputs: [
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initMaxExpArray",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalLiquidity",
        type: "uint256",
      },
      {
        internalType: "uint112",
        name: "reserve0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "reserve1",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint112",
        name: "collectedFee0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "collectedFee1",
        type: "uint112",
      },
    ],
    name: "mintLiquidityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "optimalExp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "optimalLog",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_baseN",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_baseD",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_expN",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_expD",
        type: "uint32",
      },
    ],
    name: "power",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    name: "quote",
    outputs: [
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "sortTokens",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061073f6001641c35fedd1560601b036020556001646c3390ecc9605e1b036021556001640cf801476160611b0360225560016431bdb23e1d605f1b0360235560016502fb1d8fe083605b1b0360245560016505b771955b37605a1b036025556001650af67a93bb5160591b0360265560016515060c256cb360581b036027556001651428a2f98d7360581b036028556001654d515663970960561b03602955600165944620b0e70f60551b03602a55600166011c592761c66760541b03602b5560016602214d10d014eb60531b03602c55600166020ade36b7dbef60531b03602d5560016603eab73b3bbfe360521b03602e556001660782ee3593f6d760511b03602f556001661ccf4b44bb4821604f1b0360305560016606e7f88ad8a77760511b0360315560016669f3d1c921891d604d1b03603255600166cb2ff529eb71e5604c1b03603355600166c2d415c3db974b604c1b0360345560016702eb40f9f620fda7604a1b0360355560016705990681d961a1eb60491b03603655600167055e12902701414760491b0360375560016714962dee9dc9764160471b0360385560016704ef57b9b560fab560491b0360395560016712ed7b32a58f552b60471b03603a556001679131271922eaa60760441b03603b556001678b380f3558668c4760441b03603c556001680215f77c045fbe885760421b03603d556001600160831b03603e556001670f577eded5773a1160471b03603f556001680eb5ec597592befbf5603f1b036040556001681c35fedd14b861eb05603e1b036041556001683619c87664579bc94b603d1b0360425560016867c00a3b07ffc01fd7603c1b03604355600168c6f6c8f8739773a7a5603b1b03604455600168bec763f8209b7a72b1603b1b0360455560016902dbb8caad9b7097b91b60391b03604655600169057b3d49dda84556d6f760381b03604755600169054183095b2c8ececf3160381b036048556001690a14517cc6b9457111ef60371b0360495560016913545598e5c23276ccf160361b03604a556001692511882c39c3adea96ff60351b03604b55600169471649d87199aa99075760341b03604c557004429a21a029d4c1457cfbffffffffffff604d55700415bc6d6fb7dd71af2cb3ffffffffffff604e557003eab73b3bbfe282243ce1ffffffffffff604f557003c1771ac9fb6b4c18e229ffffffffffff605055700399e96897690418f785257fffffffffff605155700373fc456c53bb779bf0ea9fffffffffff60525570034f9e8e490c48e67e6ab8bfffffffffff60535570032cbfd4a7adc790560b3337ffffffffff60545570030b50570f6e5d2acca94613ffffffffff6055557002eb40f9f620fda6b56c2861ffffffffff6056557002cc8340ecb0d0f520a6af58ffffffffff6057557002af09481380a0a35cf1ba02ffffffffff605855700292c5bdd3b92ec810287b1b3fffffffff605955700277abdcdab07d5a77ac6d6b9fffffffff605a5570025daf6654b1eaa55fd64df5efffffffff605b55700244c49c648baa98192dce88b7ffffffff605c5570022ce03cd5619a311b2471268bffffffff605d55700215f77c045fbe885654a44a0fffffffff605e556001600160811b03605f557001eaefdbdaaee7421fc4d3ede5ffffffff6060557001d6bd8b2eb257df7e8ca57b09bfffffff6061557001c35fedd14b861eb0443f7f133fffffff6062557001b0ce43b322bcde4a56e8ada5afffffff60635570019f0028ec1fff007f5a195a39dfffffff60645570018ded91f0e72ee74f49b15ba527ffffff60655570017d8ec7f04136f4e5615fd41a63ffffff60665570016ddc6556cdb84bdc8d12d22e6fffffff60675570015ecf52776a1155b5bd8395814f7fffff60685570015060c256cb23b3b3cc3754cf40ffffff6069557001428a2f98d728ae223ddab715be3fffff606a5570013545598e5c23276ccf0ede68034fffff606b557001288c4161ce1d6f54b7f61081194fffff606c5570011c592761c666aa641d5a01a40f17ffff606d55700110a688680a7530515f3e6e6cfdcdffff606e557001056f1b5bedf75c6bcb2ce8aed428ffff606f556ffaadceceeff8a0890f3875f008277fff6070556ff05dc6b27edad306388a600f6ba0bfff6071556fe67a5a25da41063de1495d5b18cdbfff6072556fdcff115b14eedde6fc3aa5353f2e4fff6073556fd3e7a3924312399f9aae2e0f868f8fff6074556fcb2ff529eb71e41582cccd5a1ee26fff6075556fc2d415c3db974ab32a51840c0b67edff6076556fbad03e7d883f69ad5b0a186184e06bff6077556fb320d03b2c343d4829abd6075f0cc5ff6078556fabc25204e02828d73c6e80bcdb1a95bf6079556fa4b16f74ee4bb2040a1ec6c15fbbf2df607a556f9deaf736ac1f569deb1b5ae3f36c130f607b556f976bd9952c7aa957f5937d790ef65037607c556f9131271922eaa6064b73a22d0bd4f2bf607d556f8b380f3558668c46c91c49a2f8e967b9607e556f857ddf0117efa215952912839f6473e6607f55565b614903806200074f6000396000f3fe608060405234801561001057600080fd5b50600436106101ae5760003560e01c80638888a737116100ee578063ad615dec11610097578063b3923a9911610071578063b3923a9914610c15578063ca22297914610c28578063ce78456414610c3b578063d691093714610c4e57600080fd5b8063ad615dec14610bdc578063b19210b014610bef578063b33d96b014610c0257600080fd5b806395050862116100c857806395050862146103df578063a324cca0146103f2578063aa248a461461040557600080fd5b80638888a737146103a65780638fabd82d146103b957806392aec23c146103cc57600080fd5b80634c3eea9e1161015b5780636350d774116101355780636350d7741461034a578063671a11b51461035d57806367f84adc1461037057806379c91b371461038357600080fd5b80634c3eea9e146102ae578063544caa56146102c15780635bff1d92146102f457600080fd5b8063327494611161018c578063327494611461023757806332833d511461025f57806345b8bafc1461028957600080fd5b8063119220a5146101b357806329576c82146101dc5780632bb66e1d146101fd575b600080fd5b6101c66101c1366004613f7a565b610c79565b6040516101d39190613fff565b60405180910390f35b6101ef6101ea366004614043565b610e8b565b6040519081526020016101d3565b61021061020b366004614079565b6114f2565b6040805163ffffffff948516815292841660208401529216918101919091526060016101d3565b61024a6102453660046140a7565b61158a565b604080519283526020830191909152016101d3565b61027261026d366004614104565b61179b565b6040805192835260ff9091166020830152016101d3565b61029c61029736600461414e565b6118f2565b60405160ff90911681526020016101d3565b6101ef6102bc36600461414e565b61195f565b6102d46102cf366004614079565b611a69565b604080516001600160a01b039384168152929091166020830152016101d3565b610307610302366004614079565b611b78565b604080516001600160a01b03909716875260208701959095529385019290925263ffffffff908116606085015290811660808401521660a082015260c0016101d3565b6101ef610358366004614167565b611e5b565b6101ef61036b3660046141a8565b611e94565b6101c661037e366004613f7a565b612069565b61039661039136600461420f565b612261565b60405190151581526020016101d3565b6101ef6103b4366004614167565b612383565b6101c66103c736600461425c565b6123af565b6101ef6103da3660046142eb565b6125a8565b6101ef6103ed36600461414e565b6126a5565b6101ef61040036600461414e565b612d27565b610bda701c35fedd14ffffffffffffffffffffffff602055701b0ce43b323fffffffffffffffffffffff6021557019f0028ec1ffffffffffffffffffffffff6022557018ded91f0e7fffffffffffffffffffffff6023557017d8ec7f0417ffffffffffffffffffffff6024557016ddc6556cdbffffffffffffffffffffff6025557015ecf52776a1ffffffffffffffffffffff6026557015060c256cb2ffffffffffffffffffffff602755701428a2f98d72ffffffffffffffffffffff6028557013545598e5c23fffffffffffffffffffff602955701288c4161ce1dfffffffffffffffffffff602a557011c592761c666fffffffffffffffffffff602b5570110a688680a757ffffffffffffffffffff602c55701056f1b5bedf77ffffffffffffffffffff602d55700faadceceeff8bffffffffffffffffffff602e55700f05dc6b27edadffffffffffffffffffff602f55700e67a5a25da4107fffffffffffffffffff603055700dcff115b14eedffffffffffffffffffff603155700d3e7a392431239fffffffffffffffffff603255700cb2ff529eb71e4fffffffffffffffffff603355700c2d415c3db974afffffffffffffffffff603455700bad03e7d883f69bffffffffffffffffff603555700b320d03b2c343d5ffffffffffffffffff603655700abc25204e02828dffffffffffffffffff603755700a4b16f74ee4bb207fffffffffffffffff6038557009deaf736ac1f569ffffffffffffffffff603955700976bd9952c7aa957fffffffffffffffff603a557009131271922eaa606fffffffffffffffff603b557008b380f3558668c46fffffffffffffffff603c55700857ddf0117efa215bffffffffffffffff603d557007ffffffffffffffffffffffffffffffff603e557007abbf6f6abb9d087fffffffffffffffff603f5570075af62cbac95f7dfa7fffffffffffffff60405570070d7fb7452e187ac13fffffffffffffff6041557006c3390ecc8af379295fffffffffffffff60425570067c00a3b07ffc01fd6fffffffffffffff604355700637b647c39cbb9d3d27ffffffffffffff6044557005f63b1fc104dbd39587ffffffffffffff6045557005b771955b36e12f7235ffffffffffffff60465570057b3d49dda84556d6f6ffffffffffffff60475570054183095b2c8ececf30ffffffffffffff60485570050a28be635ca2b888f77fffffffffffff6049557004d5156639708c9db33c3fffffffffffff604a557004a23105873875bd52dfdfffffffffffff604b55700471649d87199aa990756fffffffffffff604c557004429a21a029d4c1457cfbffffffffffff604d55700415bc6d6fb7dd71af2cb3ffffffffffff604e557003eab73b3bbfe282243ce1ffffffffffff604f557003c1771ac9fb6b4c18e229ffffffffffff605055700399e96897690418f785257fffffffffff605155700373fc456c53bb779bf0ea9fffffffffff60525570034f9e8e490c48e67e6ab8bfffffffffff60535570032cbfd4a7adc790560b3337ffffffffff60545570030b50570f6e5d2acca94613ffffffffff6055557002eb40f9f620fda6b56c2861ffffffffff6056557002cc8340ecb0d0f520a6af58ffffffffff6057557002af09481380a0a35cf1ba02ffffffffff605855700292c5bdd3b92ec810287b1b3fffffffff605955700277abdcdab07d5a77ac6d6b9fffffffff605a5570025daf6654b1eaa55fd64df5efffffffff605b55700244c49c648baa98192dce88b7ffffffff605c5570022ce03cd5619a311b2471268bffffffff605d55700215f77c045fbe885654a44a0fffffffff605e557001ffffffffffffffffffffffffffffffff605f557001eaefdbdaaee7421fc4d3ede5ffffffff6060557001d6bd8b2eb257df7e8ca57b09bfffffff6061557001c35fedd14b861eb0443f7f133fffffff6062557001b0ce43b322bcde4a56e8ada5afffffff60635570019f0028ec1fff007f5a195a39dfffffff60645570018ded91f0e72ee74f49b15ba527ffffff60655570017d8ec7f04136f4e5615fd41a63ffffff60665570016ddc6556cdb84bdc8d12d22e6fffffff60675570015ecf52776a1155b5bd8395814f7fffff60685570015060c256cb23b3b3cc3754cf40ffffff6069557001428a2f98d728ae223ddab715be3fffff606a5570013545598e5c23276ccf0ede68034fffff606b557001288c4161ce1d6f54b7f61081194fffff606c5570011c592761c666aa641d5a01a40f17ffff606d55700110a688680a7530515f3e6e6cfdcdffff606e557001056f1b5bedf75c6bcb2ce8aed428ffff606f556ffaadceceeff8a0890f3875f008277fff6070556ff05dc6b27edad306388a600f6ba0bfff6071556fe67a5a25da41063de1495d5b18cdbfff6072556fdcff115b14eedde6fc3aa5353f2e4fff6073556fd3e7a3924312399f9aae2e0f868f8fff6074556fcb2ff529eb71e41582cccd5a1ee26fff6075556fc2d415c3db974ab32a51840c0b67edff6076556fbad03e7d883f69ad5b0a186184e06bff6077556fb320d03b2c343d4829abd6075f0cc5ff6078556fabc25204e02828d73c6e80bcdb1a95bf6079556fa4b16f74ee4bb2040a1ec6c15fbbf2df607a556f9deaf736ac1f569deb1b5ae3f36c130f607b556f976bd9952c7aa957f5937d790ef65037607c556f9131271922eaa6064b73a22d0bd4f2bf607d556f8b380f3558668c46c91c49a2f8e967b9607e556f857ddf0117efa215952912839f6473e6607f55565b005b6101ef610bea366004614378565b61335d565b6101ef610bfd3660046141a8565b613473565b610307610c103660046140a7565b613653565b6101c6610c2336600461425c565b6138ed565b610210610c363660046143a4565b613ad2565b61029c610c4936600461414e565b613c4a565b610c61610c5c366004614079565b613cfd565b6040516001600160a01b0390911681526020016101d3565b606081610ccd5760405162461bcd60e51b815260206004820152601c60248201527f5265717569656d466f726d756c613a20494e56414c49445f504154480000000060448201526064015b60405180910390fd5b610cd88260016143f0565b67ffffffffffffffff811115610cf057610cf0614408565b604051908082528060200260200182016040528015610d19578160200160208202803683370190505b5090508381600081518110610d3057610d30614437565b60209081029190910101528560005b83811015610df857600080600080600080610d818f8c8c8a818110610d6657610d66614437565b9050602002016020810190610d7b91906143a4565b8a613653565b955095509550955095509550610db4898881518110610da257610da2614437565b60200260200101518686868686611e94565b89610dc08960016143f0565b81518110610dd057610dd0614437565b6020026020010181815250508597505050505050508080610df090614466565b915050610d3f565b50856001600160a01b0316816001600160a01b031614610e805760405162461bcd60e51b815260206004820152602660248201527f5265717569656d466f726d756c613a20494e56414c49445f544f4b454e5f4f5560448201527f545f5041544800000000000000000000000000000000000000000000000000006064820152608401610cc4565b509695505050505050565b6000828160ff8416610e9d838061449e565b901c9150610ebb826f03442c4e6074a82f1797f72ac000000061449e565b610ec590826143f0565b905060ff8416610ed5868461449e565b901c9150610ef3826f0116b96f757c380fb287fd0e4000000061449e565b610efd90826143f0565b905060ff8416610f0d868461449e565b901c9150610f2a826e45ae5bdd5f0e03eca1ff439000000061449e565b610f3490826143f0565b905060ff8416610f44868461449e565b901c9150610f61826e0defabf91302cd95b9ffda5000000061449e565b610f6b90826143f0565b905060ff8416610f7b868461449e565b901c9150610f98826e02529ca9832b22439efff9b800000061449e565b610fa290826143f0565b905060ff8416610fb2868461449e565b901c9150610fce826d54f1cf12bd04e516b6da8800000061449e565b610fd890826143f0565b905060ff8416610fe8868461449e565b901c9150611004826d0a9e39e257a09ca2d6db5100000061449e565b61100e90826143f0565b905060ff841661101e868461449e565b901c915061103a826d012e066e7b839fa050c30900000061449e565b61104490826143f0565b905060ff8416611054868461449e565b901c915061106f826c1e33d7d926c329a1ad1a80000061449e565b61107990826143f0565b905060ff8416611089868461449e565b901c91506110a4826c02bee513bdb4a6b19b5f80000061449e565b6110ae90826143f0565b905060ff84166110be868461449e565b901c91506110d8826b3a9316fa79b88eccf2a0000061449e565b6110e290826143f0565b905060ff84166110f2868461449e565b901c915061110c826b048177ebe1fa81237520000061449e565b61111690826143f0565b905060ff8416611126868461449e565b901c915061113f826a5263fe90242dcbacf0000061449e565b61114990826143f0565b905060ff8416611159868461449e565b901c9150611172826a057e22099c030d9410000061449e565b61117c90826143f0565b905060ff841661118c868461449e565b901c91506111a4826957e22099c030d941000061449e565b6111ae90826143f0565b905060ff84166111be868461449e565b901c91506111d68269052b6b5456997631000061449e565b6111e090826143f0565b905060ff84166111f0868461449e565b901c915061120782684985f67696bf74800061449e565b61121190826143f0565b905060ff8416611221868461449e565b901c9150611238826803dea12ea99e49800061449e565b61124290826143f0565b905060ff8416611252868461449e565b901c9150611268826731880f2214b6e00061449e565b61127290826143f0565b905060ff8416611282868461449e565b901c91506112988267025bcff56eb3600061449e565b6112a290826143f0565b905060ff84166112b2868461449e565b901c91506112c782661b722e10ab100061449e565b6112d190826143f0565b905060ff84166112e1868461449e565b901c91506112f6826601317c7007700061449e565b61130090826143f0565b905060ff8416611310868461449e565b901c915061132482650cba84aafa0061449e565b61132e90826143f0565b905060ff841661133e868461449e565b901c9150611351826482573a0a0061449e565b61135b90826143f0565b905060ff841661136b868461449e565b901c915061137e826405035ad90061449e565b61138890826143f0565b905060ff8416611398868461449e565b901c91506113aa82632f881b0061449e565b6113b490826143f0565b905060ff84166113c4868461449e565b901c91506113d6826301b2934061449e565b6113e090826143f0565b905060ff84166113f0868461449e565b901c915061140182620efc4061449e565b61140b90826143f0565b905060ff841661141b868461449e565b901c915061142b82617fe061449e565b61143590826143f0565b905060ff8416611445868461449e565b901c91506114558261042061449e565b61145f90826143f0565b905060ff841661146f868461449e565b901c915061147e82602161449e565b61148890826143f0565b905060ff8416611498868461449e565b901c91506114a782600161449e565b6114b190826143f0565b9050600160ff85161b856114d56f0688589cc0e9505e2f2fee55800000008461450a565b6114df91906143f0565b6114e991906143f0565b95945050505050565b6040517fca2229790000000000000000000000000000000000000000000000000000000081526001600160a01b038281166004830152600091829182919086169063ca22297990602401606060405180830381865afa158015611559573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061157d919061451e565b9250925092509250925092565b60008060008061159a8686611a69565b91509150600080886001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156115df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116039190614560565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff169150886001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611666573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168a9190614591565b6001600160a01b0316846001600160a01b031614801561171c5750886001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117079190614591565b6001600160a01b0316836001600160a01b0316145b6117685760405162461bcd60e51b815260206004820152601d60248201527f5265717569656d466f726d756c613a20496e76616c696420746f6b656e0000006044820152606401610cc4565b836001600160a01b0316886001600160a01b03161461178857808261178b565b81815b909a909950975050505050505050565b600080848610156117ee5760405162461bcd60e51b815260206004820152601b60248201527f6e6f7420737570706f7274205f626173654e203c205f626173654400000000006044820152606401610cc4565b700200000000000000000000000000000000861061180b57600080fd5b6000808661181d6001607f1b8a61449e565b611827919061450a565b905070015bf0a8b1457695355fb8ac404e7a79e38110156118525761184b81612d27565b915061185e565b61185b8161195f565b91505b60008563ffffffff168763ffffffff1684611879919061449e565b611883919061450a565b90507008000000000000000000000000000000008110156118b5576118a7816126a5565b607f945094505050506118e9565b60006118c082613c4a565b90506118dc6118d082607f6145ae565b60ff1683901c82610e8b565b955093506118e992505050565b94509492505050565b600080610100831015611925575b600183111561192057600192831c9261191990826145d1565b9050611900565b611959565b60805b60ff81161561195757600160ff82161b841061194c5760ff81169390931c92908117905b60011c607f16611928565b505b92915050565b60008070010000000000000000000000000000000083106119ab57600061198d6102976001607f1b8661450a565b60ff811694851c949091506119a7906001607f1b9061449e565b9150505b6001607f1b831115611a2d57607f5b60ff811615611a2b576001607f1b6119d2858061449e565b6119dc919061450a565b93507001000000000000000000000000000000008410611a1b57600193841c93611a0690826145ae565b60ff166001901b82611a1891906143f0565b91505b611a24816145f6565b90506119ba565b505b6f05b9de1d10bf4103d647b0955897ba80611a586f03f80fe03f80fe03f80fe03f80fe03f88361449e565b611a62919061450a565b9392505050565b600080826001600160a01b0316846001600160a01b031603611af35760405162461bcd60e51b815260206004820152602360248201527f5265717569656d466f726d756c613a204944454e544943414c5f41444452455360448201527f53455300000000000000000000000000000000000000000000000000000000006064820152608401610cc4565b826001600160a01b0316846001600160a01b031610611b13578284611b16565b83835b90925090506001600160a01b038216611b715760405162461bcd60e51b815260206004820152601c60248201527f5265717569656d466f726d756c613a205a45524f5f41444452455353000000006044820152606401610cc4565b9250929050565b600080600080600080600080896001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611bc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611be69190614560565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff169150600080611c178c613ad2565b8097508193508294505050508b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c859190614591565b6001600160a01b03168b6001600160a01b031603611d14578b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611cdb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cff9190614591565b99509297509095509350915084848484611e4d565b8b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d769190614591565b6001600160a01b03168b6001600160a01b031603611e05578b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611dcc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611df09190614591565b99509197509195509350915083858385611e4d565b60405162461bcd60e51b815260206004820152601e60248201527f5265717569656d466f726d756c613a20496e76616c696420746f6b656e4100006044820152606401610cc4565b505050509295509295509295565b600080600080600080611e6e8989611b78565b9550955095509550955050611e87878587858786613473565b9998505050505050505050565b6000808711611f0b5760405162461bcd60e51b815260206004820152602960248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f494e5060448201527f55545f414d4f554e5400000000000000000000000000000000000000000000006064820152608401610cc4565b600086118015611f1b5750600085115b611f8d5760405162461bcd60e51b815260206004820152602660248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f4c495160448201527f55494449545900000000000000000000000000000000000000000000000000006064820152608401610cc4565b6000611fb3611f9e84612710614631565b63ffffffff1689613e6690919063ffffffff16565b90508363ffffffff168563ffffffff1603611ffa57611fde81611fd889612710613e66565b90613e72565b611fe88783613e66565b611ff2919061450a565b91505061205f565b6000808061200e84611fd88c612710613e66565b9050612027816120208c612710613e66565b8a8a61179b565b909350915060006120388a85613e66565b905060ff83168a901b8461204c8284614656565b612056919061450a565b96505050505050505b9695505050505050565b6060816120b85760405162461bcd60e51b815260206004820152601c60248201527f5265717569656d466f726d756c613a20494e56414c49445f50415448000000006044820152606401610cc4565b6120c38260016143f0565b67ffffffffffffffff8111156120db576120db614408565b604051908082528060200260200182016040528015612104578160200160208202803683370190505b5090508381600183516121179190614656565b8151811061212757612127614437565b602090810291909101015284825b80156121d957600080808080806121628f8c8c61215360018c614656565b818110610d6657610d66614437565b95509550955095509550955061219589888151811061218357612183614437565b60200260200101518587858786613473565b896121a160018a614656565b815181106121b1576121b1614437565b60200260200101818152505085975050505050505080806121d19061466d565b915050612135565b50866001600160a01b0316816001600160a01b031614610e805760405162461bcd60e51b815260206004820152602560248201527f5265717569656d466f726d756c613a20494e56414c49445f544f4b454e5f494e60448201527f5f504154480000000000000000000000000000000000000000000000000000006064820152608401610cc4565b60008163ffffffff1660320361228e5761227b8686613e66565b6122858585613e66565b101590506114e9565b85841015801561229e5750848310155b156122ab575060016114e9565b8584111580156122bb5750848311155b156122c8575060006114e9565b8160006122d6826064614631565b90506000806000808b8a10612314576122f28b8a87603261179b565b90945060ff1692506123078a8d88603261179b565b90925060ff16905061233f565b6123218c8b88603261179b565b90945060ff169250612336898c87603261179b565b90925060ff1690505b600081841061234e5781612350565b835b905061235c8185614656565b93506123688183614656565b9290921c9390921c92909211159a9950505050505050505050565b6000806000806000806123968989611b78565b9550955095509550955050611e87878686868686611e94565b6060816123fe5760405162461bcd60e51b815260206004820152601c60248201527f5265717569656d466f726d756c613a20494e56414c49445f50415448000000006044820152606401610cc4565b6124098260016143f0565b67ffffffffffffffff81111561242157612421614408565b60405190808252806020026020018201604052801561244a578160200160208202803683370190505b509050838160008151811061246157612461614437565b60209081029190910101528560005b83811015612516576000806000806000806124b18b8b8981811061249657612496614437565b90506020020160208101906124ab91906143a4565b89611b78565b9550955095509550955095506124d2898881518110610da257610da2614437565b896124de8960016143f0565b815181106124ee576124ee614437565b602002602001018181525050859750505050505050808061250e90614466565b915050612470565b50856001600160a01b0316816001600160a01b03161461259e5760405162461bcd60e51b815260206004820152602660248201527f5265717569656d466f726d756c613a20494e56414c49445f544f4b454e5f4f5560448201527f545f5041544800000000000000000000000000000000000000000000000000006064820152608401610cc4565b5095945050505050565b60006dffffffffffffffffffffffffffff831615612629576000806125fc6125e36dffffffffffffffffffffffffffff878116908c16613e72565b8a6dffffffffffffffffffffffffffff1689606461179b565b90925060ff1690506126248a61261e836126168387613e66565b87911c613e72565b90613e8f565b925050505b6dffffffffffffffffffffffffffff82161561269a5760008061267b6126626dffffffffffffffffffffffffffff868116908b16613e72565b896dffffffffffffffffffffffffffff1688606461179b565b90925060ff1690506126958a61261e836126168387613e66565b925050505b979650505050505050565b60008080806126c46f10000000000000000000000000000000866146a2565b91508190506001607f1b6126d8828061449e565b6126e2919061450a565b90506126f6816710e1b3be415a000061449e565b61270090846143f0565b92506001607f1b612711838361449e565b61271b919061450a565b905061272f816705a0913f6b1e000061449e565b61273990846143f0565b92506001607f1b61274a838361449e565b612754919061450a565b905061276881670168244fdac7800061449e565b61277290846143f0565b92506001607f1b612783838361449e565b61278d919061450a565b90506127a081664807432bc1800061449e565b6127aa90846143f0565b92506001607f1b6127bb838361449e565b6127c5919061450a565b90506127d881660c0135dca0400061449e565b6127e290846143f0565b92506001607f1b6127f3838361449e565b6127fd919061450a565b9050612810816601b707b1cdc00061449e565b61281a90846143f0565b92506001607f1b61282b838361449e565b612835919061450a565b9050612847816536e0f639b80061449e565b61285190846143f0565b92506001607f1b612862838361449e565b61286c919061450a565b905061287e81650618fee9f80061449e565b61288890846143f0565b92506001607f1b612899838361449e565b6128a3919061450a565b90506128b481649c197dcc0061449e565b6128be90846143f0565b92506001607f1b6128cf838361449e565b6128d9919061450a565b90506128ea81640e30dce40061449e565b6128f490846143f0565b92506001607f1b612905838361449e565b61290f919061450a565b90506129208164012ebd130061449e565b61292a90846143f0565b92506001607f1b61293b838361449e565b612945919061450a565b9050612955816317499f0061449e565b61295f90846143f0565b92506001607f1b612970838361449e565b61297a919061450a565b905061298a816301a9d48061449e565b61299490846143f0565b92506001607f1b6129a5838361449e565b6129af919061450a565b90506129be81621c638061449e565b6129c890846143f0565b92506001607f1b6129d9838361449e565b6129e3919061450a565b90506129f2816201c63861449e565b6129fc90846143f0565b92506001607f1b612a0d838361449e565b612a17919061450a565b9050612a2581611ab861449e565b612a2f90846143f0565b92506001607f1b612a40838361449e565b612a4a919061450a565b9050612a588161017c61449e565b612a6290846143f0565b92506001607f1b612a73838361449e565b612a7d919061450a565b9050612a8a81601461449e565b612a9490846143f0565b92506001607f1b612aa5838361449e565b612aaf919061450a565b9050612abc81600161449e565b612ac690846143f0565b92506001607f1b82612ae06721c3677c82b400008661450a565b612aea91906143f0565b612af491906143f0565b92506f10000000000000000000000000000000851615612b485770018ebef9eac820ae8682b9793ac6d1e776612b3b847001c3d6a24ed82218787d624d3e5eba95f961449e565b612b45919061450a565b92505b6f20000000000000000000000000000000851615612b9a577001368b2fc6f9609fe7aceb46aa619baed4612b8d8470018ebef9eac820ae8682b9793ac6d1e77861449e565b612b97919061450a565b92505b6f40000000000000000000000000000000851615612beb576fbc5ab1b16779be3575bd8f0520a9f21f612bde847001368b2fc6f9609fe7aceb46aa619baed561449e565b612be8919061450a565b92505b6001607f1b851615612c2f576f454aaa8efe072e7f6ddbab84b40a55c9612c22846fbc5ab1b16779be3575bd8f0520a9f21e61449e565b612c2c919061450a565b92505b700100000000000000000000000000000000851615612c80576f0960aadc109e7a3bf4578099615711ea612c73846f454aaa8efe072e7f6ddbab84b40a55c561449e565b612c7d919061450a565b92505b700200000000000000000000000000000000851615612cd0576e2bf84208204f5977f9a8cf01fdce3d612cc3846f0960aadc109e7a3bf4578099615711d761449e565b612ccd919061450a565b92505b700400000000000000000000000000000000851615612d1e576d03c6ab775dd0b95b4cbee7e65d11612d11846e2bf84208204f5977f9a8cf01fdc30761449e565b612d1b919061450a565b92505b50909392505050565b6000808080806fd3094c70f034de4b96ff7d5b6f99fcd88610612d8c57612d5e6f40000000000000000000000000000000856143f0565b93506fd3094c70f034de4b96ff7d5b6f99fcd8612d7f6001607f1b8861449e565b612d89919061450a565b95505b6fa45af1e1f40c333b3de1db4dd55f29a78610612deb57612dbd6f20000000000000000000000000000000856143f0565b93506fa45af1e1f40c333b3de1db4dd55f29a7612dde6001607f1b8861449e565b612de8919061450a565b95505b6f910b022db7ae67ce76b441c27035c6a18610612e4a57612e1c6f10000000000000000000000000000000856143f0565b93506f910b022db7ae67ce76b441c27035c6a1612e3d6001607f1b8861449e565b612e47919061450a565b95505b6f88415abbe9a76bead8d00cf112e4d4a88610612ea957612e7b6f08000000000000000000000000000000856143f0565b93506f88415abbe9a76bead8d00cf112e4d4a8612e9c6001607f1b8861449e565b612ea6919061450a565b95505b6f84102b00893f64c705e841d5d4064bd38610612f0857612eda6f04000000000000000000000000000000856143f0565b93506f84102b00893f64c705e841d5d4064bd3612efb6001607f1b8861449e565b612f05919061450a565b95505b6f8204055aaef1c8bd5c3259f4822735a28610612f6757612f396f02000000000000000000000000000000856143f0565b93506f8204055aaef1c8bd5c3259f4822735a2612f5a6001607f1b8861449e565b612f64919061450a565b95505b6f810100ab00222d861931c15e39b44e998610612fc657612f986f01000000000000000000000000000000856143f0565b93506f810100ab00222d861931c15e39b44e99612fb96001607f1b8861449e565b612fc3919061450a565b95505b6f808040155aabbbe9451521693554f733861061302457612ff66e800000000000000000000000000000856143f0565b93506f808040155aabbbe9451521693554f7336130176001607f1b8861449e565b613021919061450a565b95505b6130326001607f1b87614656565b92508291506001607f1b613046838061449e565b613050919061450a565b905070010000000000000000000000000000000061306e8482614656565b613078908461449e565b613082919061450a565b61308c90856143f0565b93506001607f1b61309d828461449e565b6130a7919061450a565b91507002000000000000000000000000000000006130d5846faaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa614656565b6130df908461449e565b6130e9919061450a565b6130f390856143f0565b93506001607f1b613104828461449e565b61310e919061450a565b915070030000000000000000000000000000000061313c846f99999999999999999999999999999999614656565b613146908461449e565b613150919061450a565b61315a90856143f0565b93506001607f1b61316b828461449e565b613175919061450a565b91507004000000000000000000000000000000006131a3846f92492492492492492492492492492492614656565b6131ad908461449e565b6131b7919061450a565b6131c190856143f0565b93506001607f1b6131d2828461449e565b6131dc919061450a565b915070050000000000000000000000000000000061320a846f8e38e38e38e38e38e38e38e38e38e38e614656565b613214908461449e565b61321e919061450a565b61322890856143f0565b93506001607f1b613239828461449e565b613243919061450a565b9150700600000000000000000000000000000000613271846f8ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b614656565b61327b908461449e565b613285919061450a565b61328f90856143f0565b93506001607f1b6132a0828461449e565b6132aa919061450a565b91507007000000000000000000000000000000006132d8846f89d89d89d89d89d89d89d89d89d89d89614656565b6132e2908461449e565b6132ec919061450a565b6132f690856143f0565b93506001607f1b613307828461449e565b613311919061450a565b915070080000000000000000000000000000000061333f846f88888888888888888888888888888888614656565b613349908461449e565b613353919061450a565b61205f90856143f0565b60008084116133d45760405162461bcd60e51b815260206004820152602360248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f414d4f60448201527f554e5400000000000000000000000000000000000000000000000000000000006064820152608401610cc4565b6000831180156133e45750600082115b6134565760405162461bcd60e51b815260206004820152602660248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f4c495160448201527f55494449545900000000000000000000000000000000000000000000000000006064820152608401610cc4565b826134618584613e66565b61346b919061450a565b949350505050565b60008087116134ea5760405162461bcd60e51b815260206004820152602a60248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f4f555460448201527f5055545f414d4f554e54000000000000000000000000000000000000000000006064820152608401610cc4565b6000861180156134fa5750600085115b61356c5760405162461bcd60e51b815260206004820152602660248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f4c495160448201527f55494449545900000000000000000000000000000000000000000000000000006064820152608401610cc4565b8263ffffffff168463ffffffff16036135dd576000613597612710613591898b613e66565b90613e66565b905060006135c36135aa85612710614631565b63ffffffff166135918b8a613e8f90919063ffffffff16565b90506135d46001611fd8838561450a565b9250505061205f565b600080806135eb888b613e8f565b90506135f98882888a61179b565b9093509150600061360c8a612710613e66565b9050600061361a8286613e66565b905060ff841682901b61205660016136348a612710614631565b63ffffffff1660ff88166136488587614656565b611fd892911c61450a565b600080600080600080600080896001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa15801561369d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136c19190614560565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff1691506000806136f38d8d6114f2565b8097508193508294505050508b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561373d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137619190614591565b6001600160a01b03168b6001600160a01b0316036137f0578b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156137b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137db9190614591565b995092975090955093509150848484846138dd565b8b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561382e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138529190614591565b6001600160a01b03168b6001600160a01b031603611e05578b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156138a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138cc9190614591565b995091975091955093509150838583855b5050505093975093979195509350565b60608161393c5760405162461bcd60e51b815260206004820152601c60248201527f5265717569656d466f726d756c613a20494e56414c49445f50415448000000006044820152606401610cc4565b6139478260016143f0565b67ffffffffffffffff81111561395f5761395f614408565b604051908082528060200260200182016040528015613988578160200160208202803683370190505b50905083816001835161399b9190614656565b815181106139ab576139ab614437565b602090810291909101015284825b8015613a4a57600080808080806139e58b8b6139d660018b614656565b81811061249657612496614437565b955095509550955095509550613a0689888151811061218357612183614437565b89613a1260018a614656565b81518110613a2257613a22614437565b6020026020010181815250508597505050505050508080613a429061466d565b9150506139b9565b50866001600160a01b0316816001600160a01b03161461259e5760405162461bcd60e51b815260206004820152602560248201527f5265717569656d466f726d756c613a20494e56414c49445f544f4b454e5f494e60448201527f5f504154480000000000000000000000000000000000000000000000000000006064820152608401610cc4565b6000806000836001600160a01b03166332bfe4696040518163ffffffff1660e01b81526004016040805180830381865afa925050508015613b4e575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252613b4b918101906146b6565b60015b613bd657613b5a6146e5565b806308c379a003613b935750613b6e614773565b80613b795750613b95565b8060405162461bcd60e51b8152600401610cc4919061481b565b505b3d808015613bbf576040519150601f19603f3d011682016040523d82523d6000602084013e613bc4565b606091505b50603280601e93509350935050613c43565b8181876001600160a01b031663d4cadf686040518163ffffffff1660e01b8152600401602060405180830381865afa158015613c16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c3a919061488e565b94509450945050505b9193909250565b60006020607f5b60ff8116613c608360016145d1565b60ff161015613cb35760006002613c7783856145d1565b613c8191906148ab565b90508460008260ff1660808110613c9a57613c9a614437565b015410613ca957809250613cad565b8091505b50613c51565b8360008260ff1660808110613cca57613cca614437565b015410613cd8579392505050565b8360008360ff1660808110613cef57613cef614437565b0154106101ae575092915050565b600080836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015613d3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613d629190614591565b90506000846001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015613da4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613dc89190614591565b9050836001600160a01b0316826001600160a01b03161480613dfb5750836001600160a01b0316816001600160a01b0316145b613e475760405162461bcd60e51b815260206004820152601e60248201527f5265717569656d466f726d756c613a20496e76616c696420746f6b656e4100006044820152606401610cc4565b836001600160a01b0316826001600160a01b03161461346b57816114e9565b6000611a62828461449e565b600080613e7f83856143f0565b9050611a62848210156000613e9d565b6000611a6283836001613eaf565b81613eab57613eab81613eca565b5050565b6000613ebe8484111583613e9d565b60006114e98486614656565b62461bcd60e51b6000908152602060045260076024526652455123000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6001600160a01b0381168114613f3257600080fd5b50565b60008083601f840112613f4757600080fd5b50813567ffffffffffffffff811115613f5f57600080fd5b6020830191508360208260051b8501011115611b7157600080fd5b60008060008060008060a08789031215613f9357600080fd5b8635613f9e81613f1d565b95506020870135613fae81613f1d565b94506040870135613fbe81613f1d565b935060608701359250608087013567ffffffffffffffff811115613fe157600080fd5b613fed89828a01613f35565b979a9699509497509295939492505050565b6020808252825182820181905260009190848201906040850190845b818110156140375783518352928401929184019160010161401b565b50909695505050505050565b6000806040838503121561405657600080fd5b82359150602083013560ff8116811461406e57600080fd5b809150509250929050565b6000806040838503121561408c57600080fd5b823561409781613f1d565b9150602083013561406e81613f1d565b6000806000606084860312156140bc57600080fd5b83356140c781613f1d565b925060208401356140d781613f1d565b915060408401356140e781613f1d565b809150509250925092565b63ffffffff81168114613f3257600080fd5b6000806000806080858703121561411a57600080fd5b84359350602085013592506040850135614133816140f2565b91506060850135614143816140f2565b939692955090935050565b60006020828403121561416057600080fd5b5035919050565b60008060006060848603121561417c57600080fd5b833561418781613f1d565b9250602084013561419781613f1d565b929592945050506040919091013590565b60008060008060008060c087890312156141c157600080fd5b86359550602087013594506040870135935060608701356141e1816140f2565b925060808701356141f1816140f2565b915060a0870135614201816140f2565b809150509295509295509295565b600080600080600060a0868803121561422757600080fd5b85359450602086013593506040860135925060608601359150608086013561424e816140f2565b809150509295509295909350565b60008060008060006080868803121561427457600080fd5b853561427f81613f1d565b9450602086013561428f81613f1d565b935060408601359250606086013567ffffffffffffffff8111156142b257600080fd5b6142be88828901613f35565b969995985093965092949392505050565b6dffffffffffffffffffffffffffff81168114613f3257600080fd5b600080600080600080600060e0888a03121561430657600080fd5b873596506020880135614318816142cf565b95506040880135614328816142cf565b94506060880135614338816140f2565b93506080880135614348816140f2565b925060a0880135614358816142cf565b915060c0880135614368816142cf565b8091505092959891949750929550565b60008060006060848603121561438d57600080fd5b505081359360208301359350604090920135919050565b6000602082840312156143b657600080fd5b8135611a6281613f1d565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115614403576144036143c1565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203614497576144976143c1565b5060010190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156144d6576144d66143c1565b500290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082614519576145196144db565b500490565b60008060006060848603121561453357600080fd5b835161453e816140f2565b602085015190935061454f816140f2565b60408501519092506140e7816140f2565b60008060006060848603121561457557600080fd5b8351614580816142cf565b602085015190935061454f816142cf565b6000602082840312156145a357600080fd5b8151611a6281613f1d565b600060ff821660ff8416808210156145c8576145c86143c1565b90039392505050565b600060ff821660ff84168060ff038211156145ee576145ee6143c1565b019392505050565b600060ff821680614609576146096143c1565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0192915050565b600063ffffffff8381169083168181101561464e5761464e6143c1565b039392505050565b600082821015614668576146686143c1565b500390565b60008161467c5761467c6143c1565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b6000826146b1576146b16144db565b500690565b600080604083850312156146c957600080fd5b82516146d4816140f2565b602084015190925061406e816140f2565b600060033d11156146fe5760046000803e5060005160e01c5b90565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff8211171561476c577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040525050565b600060443d10156147815790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc803d016004833e81513d67ffffffffffffffff81602484011181841117156147cf57505050505090565b82850191508151818111156147e75750505050505090565b843d87010160208285010111156148015750505050505090565b61481060208286010187614701565b509095945050505050565b600060208083528351808285015260005b818110156148485785810183015185820160400152820161482c565b8181111561485a576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b6000602082840312156148a057600080fd5b8151611a62816140f2565b600060ff8316806148be576148be6144db565b8060ff8416049150509291505056fea264697066735822122009e44702a605fc12a7b4fb35f01e6cbf1119fed942a340ce91cf55422ebe5c6e64736f6c634300080d0033";

export class RequiemFormulaTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RequiemFormulaTest> {
    return super.deploy(overrides || {}) as Promise<RequiemFormulaTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RequiemFormulaTest {
    return super.attach(address) as RequiemFormulaTest;
  }
  connect(signer: Signer): RequiemFormulaTest__factory {
    return super.connect(signer) as RequiemFormulaTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RequiemFormulaTestInterface {
    return new utils.Interface(_abi) as RequiemFormulaTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RequiemFormulaTest {
    return new Contract(address, _abi, signerOrProvider) as RequiemFormulaTest;
  }
}
