/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RequiemFormulaTest,
  RequiemFormulaTestInterface,
} from "../RequiemFormulaTest";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reserve0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserve1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance0Adjusted",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance1Adjusted",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
    ],
    name: "ensureConstantValue",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
    ],
    name: "findPositionInMaxExpArray",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_n",
        type: "uint256",
      },
    ],
    name: "floorLog2",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_precision",
        type: "uint8",
      },
    ],
    name: "generalExp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "generalLog",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveOut",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightIn",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightOut",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    name: "getAmountIn",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveOut",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightIn",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightOut",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    name: "getAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getFactoryAmountsIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getFactoryAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    name: "getFactoryReserveAndWeights",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightA",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightB",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "getFactoryWeightsAndSwapFee",
    outputs: [
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    name: "getOtherToken",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "getPairAmountIn",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "getPairAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    name: "getReserveAndWeights",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightA",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightB",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "getWeightsAndSwapFee",
    outputs: [
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initMaxExpArray",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalLiquidity",
        type: "uint256",
      },
      {
        internalType: "uint112",
        name: "reserve0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "reserve1",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint112",
        name: "collectedFee0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "collectedFee1",
        type: "uint112",
      },
    ],
    name: "mintLiquidityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "optimalExp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "optimalLog",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_baseN",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_baseD",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_expN",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_expD",
        type: "uint32",
      },
    ],
    name: "power",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    name: "quote",
    outputs: [
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "sortTokens",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061073f6001641c35fedd1560601b036020556001646c3390ecc9605e1b036021556001640cf801476160611b0360225560016431bdb23e1d605f1b0360235560016502fb1d8fe083605b1b0360245560016505b771955b37605a1b036025556001650af67a93bb5160591b0360265560016515060c256cb360581b036027556001651428a2f98d7360581b036028556001654d515663970960561b03602955600165944620b0e70f60551b03602a55600166011c592761c66760541b03602b5560016602214d10d014eb60531b03602c55600166020ade36b7dbef60531b03602d5560016603eab73b3bbfe360521b03602e556001660782ee3593f6d760511b03602f556001661ccf4b44bb4821604f1b0360305560016606e7f88ad8a77760511b0360315560016669f3d1c921891d604d1b03603255600166cb2ff529eb71e5604c1b03603355600166c2d415c3db974b604c1b0360345560016702eb40f9f620fda7604a1b0360355560016705990681d961a1eb60491b03603655600167055e12902701414760491b0360375560016714962dee9dc9764160471b0360385560016704ef57b9b560fab560491b0360395560016712ed7b32a58f552b60471b03603a556001679131271922eaa60760441b03603b556001678b380f3558668c4760441b03603c556001680215f77c045fbe885760421b03603d556001600160831b03603e556001670f577eded5773a1160471b03603f556001680eb5ec597592befbf5603f1b036040556001681c35fedd14b861eb05603e1b036041556001683619c87664579bc94b603d1b0360425560016867c00a3b07ffc01fd7603c1b03604355600168c6f6c8f8739773a7a5603b1b03604455600168bec763f8209b7a72b1603b1b0360455560016902dbb8caad9b7097b91b60391b03604655600169057b3d49dda84556d6f760381b03604755600169054183095b2c8ececf3160381b036048556001690a14517cc6b9457111ef60371b0360495560016913545598e5c23276ccf160361b03604a556001692511882c39c3adea96ff60351b03604b55600169471649d87199aa99075760341b03604c557004429a21a029d4c1457cfbffffffffffff604d55700415bc6d6fb7dd71af2cb3ffffffffffff604e557003eab73b3bbfe282243ce1ffffffffffff604f557003c1771ac9fb6b4c18e229ffffffffffff605055700399e96897690418f785257fffffffffff605155700373fc456c53bb779bf0ea9fffffffffff60525570034f9e8e490c48e67e6ab8bfffffffffff60535570032cbfd4a7adc790560b3337ffffffffff60545570030b50570f6e5d2acca94613ffffffffff6055557002eb40f9f620fda6b56c2861ffffffffff6056557002cc8340ecb0d0f520a6af58ffffffffff6057557002af09481380a0a35cf1ba02ffffffffff605855700292c5bdd3b92ec810287b1b3fffffffff605955700277abdcdab07d5a77ac6d6b9fffffffff605a5570025daf6654b1eaa55fd64df5efffffffff605b55700244c49c648baa98192dce88b7ffffffff605c5570022ce03cd5619a311b2471268bffffffff605d55700215f77c045fbe885654a44a0fffffffff605e556001600160811b03605f557001eaefdbdaaee7421fc4d3ede5ffffffff6060557001d6bd8b2eb257df7e8ca57b09bfffffff6061557001c35fedd14b861eb0443f7f133fffffff6062557001b0ce43b322bcde4a56e8ada5afffffff60635570019f0028ec1fff007f5a195a39dfffffff60645570018ded91f0e72ee74f49b15ba527ffffff60655570017d8ec7f04136f4e5615fd41a63ffffff60665570016ddc6556cdb84bdc8d12d22e6fffffff60675570015ecf52776a1155b5bd8395814f7fffff60685570015060c256cb23b3b3cc3754cf40ffffff6069557001428a2f98d728ae223ddab715be3fffff606a5570013545598e5c23276ccf0ede68034fffff606b557001288c4161ce1d6f54b7f61081194fffff606c5570011c592761c666aa641d5a01a40f17ffff606d55700110a688680a7530515f3e6e6cfdcdffff606e557001056f1b5bedf75c6bcb2ce8aed428ffff606f556ffaadceceeff8a0890f3875f008277fff6070556ff05dc6b27edad306388a600f6ba0bfff6071556fe67a5a25da41063de1495d5b18cdbfff6072556fdcff115b14eedde6fc3aa5353f2e4fff6073556fd3e7a3924312399f9aae2e0f868f8fff6074556fcb2ff529eb71e41582cccd5a1ee26fff6075556fc2d415c3db974ab32a51840c0b67edff6076556fbad03e7d883f69ad5b0a186184e06bff6077556fb320d03b2c343d4829abd6075f0cc5ff6078556fabc25204e02828d73c6e80bcdb1a95bf6079556fa4b16f74ee4bb2040a1ec6c15fbbf2df607a556f9deaf736ac1f569deb1b5ae3f36c130f607b556f976bd9952c7aa957f5937d790ef65037607c556f9131271922eaa6064b73a22d0bd4f2bf607d556f8b380f3558668c46c91c49a2f8e967b9607e556f857ddf0117efa215952912839f6473e6607f55565b614be9806200074f6000396000f3fe608060405234801561001057600080fd5b50600436106101ae5760003560e01c80638888a737116100ee578063ad615dec11610097578063b3923a9911610071578063b3923a9914610c2f578063ca22297914610c42578063ce78456414610c55578063d691093714610c6857600080fd5b8063ad615dec14610bf6578063b19210b014610c09578063b33d96b014610c1c57600080fd5b806395050862116100c857806395050862146103f9578063a324cca01461040c578063aa248a461461041f57600080fd5b80638888a737146103c05780638fabd82d146103d357806392aec23c146103e657600080fd5b80634c3eea9e1161015b5780636350d774116101355780636350d77414610364578063671a11b51461037757806367f84adc1461038a57806379c91b371461039d57600080fd5b80634c3eea9e146102ae578063544caa56146102c15780635bff1d921461030157600080fd5b8063327494611161018c578063327494611461023757806332833d511461025f57806345b8bafc1461028957600080fd5b8063119220a5146101b357806329576c82146101dc5780632bb66e1d146101fd575b600080fd5b6101c66101c136600461425f565b610ca0565b6040516101d391906142e4565b60405180910390f35b6101ef6101ea366004614328565b610ecc565b6040519081526020016101d3565b61021061020b36600461435e565b611533565b6040805163ffffffff948516815292841660208401529216918101919091526060016101d3565b61024a61024536600461438c565b6115d8565b604080519283526020830191909152016101d3565b61027261026d3660046143e9565b61185e565b6040805192835260ff9091166020830152016101d3565b61029c610297366004614433565b6119b5565b60405160ff90911681526020016101d3565b6101ef6102bc366004614433565b611a22565b6102d46102cf36600461435e565b611b2c565b6040805173ffffffffffffffffffffffffffffffffffffffff9384168152929091166020830152016101d3565b61031461030f36600461435e565b611c7d565b6040805173ffffffffffffffffffffffffffffffffffffffff909716875260208701959095529385019290925263ffffffff908116606085015290811660808401521660a082015260c0016101d3565b6101ef61037236600461444c565b611fd7565b6101ef61038536600461448d565b612014565b6101c661039836600461425f565b6121ea565b6103b06103ab3660046144f4565b6123fc565b60405190151581526020016101d3565b6101ef6103ce36600461444c565b61251f565b6101c66103e1366004614541565b612558565b6101ef6103f43660046145d0565b61276b565b6101ef610407366004614433565b612868565b6101ef61041a366004614433565b612eea565b610bf4701c35fedd14ffffffffffffffffffffffff602055701b0ce43b323fffffffffffffffffffffff6021557019f0028ec1ffffffffffffffffffffffff6022557018ded91f0e7fffffffffffffffffffffff6023557017d8ec7f0417ffffffffffffffffffffff6024557016ddc6556cdbffffffffffffffffffffff6025557015ecf52776a1ffffffffffffffffffffff6026557015060c256cb2ffffffffffffffffffffff602755701428a2f98d72ffffffffffffffffffffff6028557013545598e5c23fffffffffffffffffffff602955701288c4161ce1dfffffffffffffffffffff602a557011c592761c666fffffffffffffffffffff602b5570110a688680a757ffffffffffffffffffff602c55701056f1b5bedf77ffffffffffffffffffff602d55700faadceceeff8bffffffffffffffffffff602e55700f05dc6b27edadffffffffffffffffffff602f55700e67a5a25da4107fffffffffffffffffff603055700dcff115b14eedffffffffffffffffffff603155700d3e7a392431239fffffffffffffffffff603255700cb2ff529eb71e4fffffffffffffffffff603355700c2d415c3db974afffffffffffffffffff603455700bad03e7d883f69bffffffffffffffffff603555700b320d03b2c343d5ffffffffffffffffff603655700abc25204e02828dffffffffffffffffff603755700a4b16f74ee4bb207fffffffffffffffff6038557009deaf736ac1f569ffffffffffffffffff603955700976bd9952c7aa957fffffffffffffffff603a557009131271922eaa606fffffffffffffffff603b557008b380f3558668c46fffffffffffffffff603c55700857ddf0117efa215bffffffffffffffff603d557007ffffffffffffffffffffffffffffffff603e557007abbf6f6abb9d087fffffffffffffffff603f5570075af62cbac95f7dfa7fffffffffffffff60405570070d7fb7452e187ac13fffffffffffffff6041557006c3390ecc8af379295fffffffffffffff60425570067c00a3b07ffc01fd6fffffffffffffff604355700637b647c39cbb9d3d27ffffffffffffff6044557005f63b1fc104dbd39587ffffffffffffff6045557005b771955b36e12f7235ffffffffffffff60465570057b3d49dda84556d6f6ffffffffffffff60475570054183095b2c8ececf30ffffffffffffff60485570050a28be635ca2b888f77fffffffffffff6049557004d5156639708c9db33c3fffffffffffff604a557004a23105873875bd52dfdfffffffffffff604b55700471649d87199aa990756fffffffffffff604c557004429a21a029d4c1457cfbffffffffffff604d55700415bc6d6fb7dd71af2cb3ffffffffffff604e557003eab73b3bbfe282243ce1ffffffffffff604f557003c1771ac9fb6b4c18e229ffffffffffff605055700399e96897690418f785257fffffffffff605155700373fc456c53bb779bf0ea9fffffffffff60525570034f9e8e490c48e67e6ab8bfffffffffff60535570032cbfd4a7adc790560b3337ffffffffff60545570030b50570f6e5d2acca94613ffffffffff6055557002eb40f9f620fda6b56c2861ffffffffff6056557002cc8340ecb0d0f520a6af58ffffffffff6057557002af09481380a0a35cf1ba02ffffffffff605855700292c5bdd3b92ec810287b1b3fffffffff605955700277abdcdab07d5a77ac6d6b9fffffffff605a5570025daf6654b1eaa55fd64df5efffffffff605b55700244c49c648baa98192dce88b7ffffffff605c5570022ce03cd5619a311b2471268bffffffff605d55700215f77c045fbe885654a44a0fffffffff605e557001ffffffffffffffffffffffffffffffff605f557001eaefdbdaaee7421fc4d3ede5ffffffff6060557001d6bd8b2eb257df7e8ca57b09bfffffff6061557001c35fedd14b861eb0443f7f133fffffff6062557001b0ce43b322bcde4a56e8ada5afffffff60635570019f0028ec1fff007f5a195a39dfffffff60645570018ded91f0e72ee74f49b15ba527ffffff60655570017d8ec7f04136f4e5615fd41a63ffffff60665570016ddc6556cdb84bdc8d12d22e6fffffff60675570015ecf52776a1155b5bd8395814f7fffff60685570015060c256cb23b3b3cc3754cf40ffffff6069557001428a2f98d728ae223ddab715be3fffff606a5570013545598e5c23276ccf0ede68034fffff606b557001288c4161ce1d6f54b7f61081194fffff606c5570011c592761c666aa641d5a01a40f17ffff606d55700110a688680a7530515f3e6e6cfdcdffff606e557001056f1b5bedf75c6bcb2ce8aed428ffff606f556ffaadceceeff8a0890f3875f008277fff6070556ff05dc6b27edad306388a600f6ba0bfff6071556fe67a5a25da41063de1495d5b18cdbfff6072556fdcff115b14eedde6fc3aa5353f2e4fff6073556fd3e7a3924312399f9aae2e0f868f8fff6074556fcb2ff529eb71e41582cccd5a1ee26fff6075556fc2d415c3db974ab32a51840c0b67edff6076556fbad03e7d883f69ad5b0a186184e06bff6077556fb320d03b2c343d4829abd6075f0cc5ff6078556fabc25204e02828d73c6e80bcdb1a95bf6079556fa4b16f74ee4bb2040a1ec6c15fbbf2df607a556f9deaf736ac1f569deb1b5ae3f36c130f607b556f976bd9952c7aa957f5937d790ef65037607c556f9131271922eaa6064b73a22d0bd4f2bf607d556f8b380f3558668c46c91c49a2f8e967b9607e556f857ddf0117efa215952912839f6473e6607f55565b005b6101ef610c0436600461465d565b613520565b6101ef610c1736600461448d565b613636565b610314610c2a36600461438c565b613817565b6101c6610c3d366004614541565b613b28565b610210610c50366004614689565b613d27565b61029c610c63366004614433565b613eba565b610c7b610c7636600461435e565b613f6d565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101d3565b606081610cf45760405162461bcd60e51b815260206004820152601c60248201527f5265717569656d466f726d756c613a20494e56414c49445f504154480000000060448201526064015b60405180910390fd5b610cff8260016146d5565b67ffffffffffffffff811115610d1757610d176146ed565b604051908082528060200260200182016040528015610d40578160200160208202803683370190505b5090508381600081518110610d5757610d5761471c565b60209081029190910101528560005b83811015610e1f57600080600080600080610da88f8c8c8a818110610d8d57610d8d61471c565b9050602002016020810190610da29190614689565b8a613817565b955095509550955095509550610ddb898881518110610dc957610dc961471c565b60200260200101518686868686612014565b89610de78960016146d5565b81518110610df757610df761471c565b6020026020010181815250508597505050505050508080610e179061474b565b915050610d66565b508573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ec15760405162461bcd60e51b815260206004820152602660248201527f5265717569656d466f726d756c613a20494e56414c49445f544f4b454e5f4f5560448201527f545f5041544800000000000000000000000000000000000000000000000000006064820152608401610ceb565b509695505050505050565b6000828160ff8416610ede8380614784565b901c9150610efc826f03442c4e6074a82f1797f72ac0000000614784565b610f0690826146d5565b905060ff8416610f168684614784565b901c9150610f34826f0116b96f757c380fb287fd0e40000000614784565b610f3e90826146d5565b905060ff8416610f4e8684614784565b901c9150610f6b826e45ae5bdd5f0e03eca1ff4390000000614784565b610f7590826146d5565b905060ff8416610f858684614784565b901c9150610fa2826e0defabf91302cd95b9ffda50000000614784565b610fac90826146d5565b905060ff8416610fbc8684614784565b901c9150610fd9826e02529ca9832b22439efff9b8000000614784565b610fe390826146d5565b905060ff8416610ff38684614784565b901c915061100f826d54f1cf12bd04e516b6da88000000614784565b61101990826146d5565b905060ff84166110298684614784565b901c9150611045826d0a9e39e257a09ca2d6db51000000614784565b61104f90826146d5565b905060ff841661105f8684614784565b901c915061107b826d012e066e7b839fa050c309000000614784565b61108590826146d5565b905060ff84166110958684614784565b901c91506110b0826c1e33d7d926c329a1ad1a800000614784565b6110ba90826146d5565b905060ff84166110ca8684614784565b901c91506110e5826c02bee513bdb4a6b19b5f800000614784565b6110ef90826146d5565b905060ff84166110ff8684614784565b901c9150611119826b3a9316fa79b88eccf2a00000614784565b61112390826146d5565b905060ff84166111338684614784565b901c915061114d826b048177ebe1fa812375200000614784565b61115790826146d5565b905060ff84166111678684614784565b901c9150611180826a5263fe90242dcbacf00000614784565b61118a90826146d5565b905060ff841661119a8684614784565b901c91506111b3826a057e22099c030d94100000614784565b6111bd90826146d5565b905060ff84166111cd8684614784565b901c91506111e5826957e22099c030d9410000614784565b6111ef90826146d5565b905060ff84166111ff8684614784565b901c91506112178269052b6b54569976310000614784565b61122190826146d5565b905060ff84166112318684614784565b901c915061124882684985f67696bf748000614784565b61125290826146d5565b905060ff84166112628684614784565b901c9150611279826803dea12ea99e498000614784565b61128390826146d5565b905060ff84166112938684614784565b901c91506112a9826731880f2214b6e000614784565b6112b390826146d5565b905060ff84166112c38684614784565b901c91506112d98267025bcff56eb36000614784565b6112e390826146d5565b905060ff84166112f38684614784565b901c915061130882661b722e10ab1000614784565b61131290826146d5565b905060ff84166113228684614784565b901c9150611337826601317c70077000614784565b61134190826146d5565b905060ff84166113518684614784565b901c915061136582650cba84aafa00614784565b61136f90826146d5565b905060ff841661137f8684614784565b901c9150611392826482573a0a00614784565b61139c90826146d5565b905060ff84166113ac8684614784565b901c91506113bf826405035ad900614784565b6113c990826146d5565b905060ff84166113d98684614784565b901c91506113eb82632f881b00614784565b6113f590826146d5565b905060ff84166114058684614784565b901c9150611417826301b29340614784565b61142190826146d5565b905060ff84166114318684614784565b901c915061144282620efc40614784565b61144c90826146d5565b905060ff841661145c8684614784565b901c915061146c82617fe0614784565b61147690826146d5565b905060ff84166114868684614784565b901c915061149682610420614784565b6114a090826146d5565b905060ff84166114b08684614784565b901c91506114bf826021614784565b6114c990826146d5565b905060ff84166114d98684614784565b901c91506114e8826001614784565b6114f290826146d5565b9050600160ff85161b856115166f0688589cc0e9505e2f2fee5580000000846147f0565b61152091906146d5565b61152a91906146d5565b95945050505050565b6040517fca22297900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8281166004830152600091829182919086169063ca22297990602401606060405180830381865afa1580156115a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115cb9190614804565b9250925092509250925092565b6000806000806115e88686611b2c565b915091506000808873ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa15801561163a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165e9190614846565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff1691508873ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116f29190614877565b73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480156117c557508873ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611772573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117969190614877565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b6118115760405162461bcd60e51b815260206004820152601d60248201527f5265717569656d466f726d756c613a20496e76616c696420746f6b656e0000006044820152606401610ceb565b8373ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161461184b57808261184e565b81815b909a909950975050505050505050565b600080848610156118b15760405162461bcd60e51b815260206004820152601b60248201527f6e6f7420737570706f7274205f626173654e203c205f626173654400000000006044820152606401610ceb565b70020000000000000000000000000000000086106118ce57600080fd5b600080866118e06001607f1b8a614784565b6118ea91906147f0565b905070015bf0a8b1457695355fb8ac404e7a79e38110156119155761190e81612eea565b9150611921565b61191e81611a22565b91505b60008563ffffffff168763ffffffff168461193c9190614784565b61194691906147f0565b90507008000000000000000000000000000000008110156119785761196a81612868565b607f945094505050506119ac565b600061198382613eba565b905061199f61199382607f614894565b60ff1683901c82610ecc565b955093506119ac92505050565b94509492505050565b6000806101008310156119e8575b60018311156119e357600192831c926119dc90826148b7565b90506119c3565b611a1c565b60805b60ff811615611a1a57600160ff82161b8410611a0f5760ff81169390931c92908117905b60011c607f166119eb565b505b92915050565b6000807001000000000000000000000000000000008310611a6e576000611a506102976001607f1b866147f0565b60ff811694851c94909150611a6a906001607f1b90614784565b9150505b6001607f1b831115611af057607f5b60ff811615611aee576001607f1b611a958580614784565b611a9f91906147f0565b93507001000000000000000000000000000000008410611ade57600193841c93611ac99082614894565b60ff166001901b82611adb91906146d5565b91505b611ae7816148dc565b9050611a7d565b505b6f05b9de1d10bf4103d647b0955897ba80611b1b6f03f80fe03f80fe03f80fe03f80fe03f883614784565b611b2591906147f0565b9392505050565b6000808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415611bd15760405162461bcd60e51b815260206004820152602360248201527f5265717569656d466f726d756c613a204944454e544943414c5f41444452455360448201527f53455300000000000000000000000000000000000000000000000000000000006064820152608401610ceb565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1610611c0b578284611c0e565b83835b909250905073ffffffffffffffffffffffffffffffffffffffff8216611c765760405162461bcd60e51b815260206004820152601c60248201527f5265717569656d466f726d756c613a205a45524f5f41444452455353000000006044820152606401610ceb565b9250929050565b6000806000806000806000808973ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611cd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cf89190614846565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff169150600080611d298c613d27565b8097508193508294505050508b73ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611da49190614877565b73ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff161415611e5b578b73ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611e22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e469190614877565b99509297509095509350915084848484611fc9565b8b73ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ea6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eca9190614877565b73ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff161415611f81578b73ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f6c9190614877565b99509197509195509350915083858385611fc9565b60405162461bcd60e51b815260206004820152601e60248201527f5265717569656d466f726d756c613a20496e76616c696420746f6b656e4100006044820152606401610ceb565b505050509295509295509295565b6000806000806000806000611fec8a8a611c7d565b955095509550955095509550612006888587858786613636565b9a9950505050505050505050565b600080871161208b5760405162461bcd60e51b815260206004820152602960248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f494e5060448201527f55545f414d4f554e5400000000000000000000000000000000000000000000006064820152608401610ceb565b60008611801561209b5750600085115b61210d5760405162461bcd60e51b815260206004820152602660248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f4c495160448201527f55494449545900000000000000000000000000000000000000000000000000006064820152608401610ceb565b600061213361211e84612710614917565b63ffffffff168961413e90919063ffffffff16565b90508363ffffffff168563ffffffff16141561217b5761215f816121598961271061413e565b9061414a565b612169878361413e565b61217391906147f0565b9150506121e0565b6000808061218f846121598c61271061413e565b90506121a8816121a18c61271061413e565b8a8a61185e565b909350915060006121b98a8561413e565b905060ff83168a901b846121cd828461493c565b6121d791906147f0565b96505050505050505b9695505050505050565b6060816122395760405162461bcd60e51b815260206004820152601c60248201527f5265717569656d466f726d756c613a20494e56414c49445f50415448000000006044820152606401610ceb565b6122448260016146d5565b67ffffffffffffffff81111561225c5761225c6146ed565b604051908082528060200260200182016040528015612285578160200160208202803683370190505b509050838160018351612298919061493c565b815181106122a8576122a861471c565b602090810291909101015284825b801561235a57600080808080806122e38f8c8c6122d460018c61493c565b818110610d8d57610d8d61471c565b9550955095509550955095506123168988815181106123045761230461471c565b60200260200101518587858786613636565b8961232260018a61493c565b815181106123325761233261471c565b602002602001018181525050859750505050505050808061235290614953565b9150506122b6565b508673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ec15760405162461bcd60e51b815260206004820152602560248201527f5265717569656d466f726d756c613a20494e56414c49445f544f4b454e5f494e60448201527f5f504154480000000000000000000000000000000000000000000000000000006064820152608401610ceb565b60008163ffffffff166032141561242a57612417868661413e565b612421858561413e565b1015905061152a565b85841015801561243a5750848310155b156124475750600161152a565b8584111580156124575750848311155b156124645750600061152a565b816000612472826064614917565b90506000806000808b8a106124b05761248e8b8a87603261185e565b90945060ff1692506124a38a8d88603261185e565b90925060ff1690506124db565b6124bd8c8b88603261185e565b90945060ff1692506124d2898c87603261185e565b90925060ff1690505b60008184106124ea57816124ec565b835b90506124f8818561493c565b9350612504818361493c565b9290921c9390921c92909211159a9950505050505050505050565b6000806000806000806125328989611c7d565b955095509550955095505061254b878686868686612014565b9998505050505050505050565b6060816125a75760405162461bcd60e51b815260206004820152601c60248201527f5265717569656d466f726d756c613a20494e56414c49445f50415448000000006044820152606401610ceb565b6125b28260016146d5565b67ffffffffffffffff8111156125ca576125ca6146ed565b6040519080825280602002602001820160405280156125f3578160200160208202803683370190505b509050838160008151811061260a5761260a61471c565b60209081029190910101528560005b838110156126bf5760008060008060008061265a8b8b8981811061263f5761263f61471c565b90506020020160208101906126549190614689565b89611c7d565b95509550955095509550955061267b898881518110610dc957610dc961471c565b896126878960016146d5565b815181106126975761269761471c565b60200260200101818152505085975050505050505080806126b79061474b565b915050612619565b508573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146127615760405162461bcd60e51b815260206004820152602660248201527f5265717569656d466f726d756c613a20494e56414c49445f544f4b454e5f4f5560448201527f545f5041544800000000000000000000000000000000000000000000000000006064820152608401610ceb565b5095945050505050565b60006dffffffffffffffffffffffffffff8316156127ec576000806127bf6127a66dffffffffffffffffffffffffffff878116908c1661414a565b8a6dffffffffffffffffffffffffffff1689606461185e565b90925060ff1690506127e78a6127e1836127d9838761413e565b87911c61414a565b90614167565b925050505b6dffffffffffffffffffffffffffff82161561285d5760008061283e6128256dffffffffffffffffffffffffffff868116908b1661414a565b896dffffffffffffffffffffffffffff1688606461185e565b90925060ff1690506128588a6127e1836127d9838761413e565b925050505b979650505050505050565b60008080806128876f1000000000000000000000000000000086614988565b91508190506001607f1b61289b8280614784565b6128a591906147f0565b90506128b9816710e1b3be415a0000614784565b6128c390846146d5565b92506001607f1b6128d48383614784565b6128de91906147f0565b90506128f2816705a0913f6b1e0000614784565b6128fc90846146d5565b92506001607f1b61290d8383614784565b61291791906147f0565b905061292b81670168244fdac78000614784565b61293590846146d5565b92506001607f1b6129468383614784565b61295091906147f0565b905061296381664807432bc18000614784565b61296d90846146d5565b92506001607f1b61297e8383614784565b61298891906147f0565b905061299b81660c0135dca04000614784565b6129a590846146d5565b92506001607f1b6129b68383614784565b6129c091906147f0565b90506129d3816601b707b1cdc000614784565b6129dd90846146d5565b92506001607f1b6129ee8383614784565b6129f891906147f0565b9050612a0a816536e0f639b800614784565b612a1490846146d5565b92506001607f1b612a258383614784565b612a2f91906147f0565b9050612a4181650618fee9f800614784565b612a4b90846146d5565b92506001607f1b612a5c8383614784565b612a6691906147f0565b9050612a7781649c197dcc00614784565b612a8190846146d5565b92506001607f1b612a928383614784565b612a9c91906147f0565b9050612aad81640e30dce400614784565b612ab790846146d5565b92506001607f1b612ac88383614784565b612ad291906147f0565b9050612ae38164012ebd1300614784565b612aed90846146d5565b92506001607f1b612afe8383614784565b612b0891906147f0565b9050612b18816317499f00614784565b612b2290846146d5565b92506001607f1b612b338383614784565b612b3d91906147f0565b9050612b4d816301a9d480614784565b612b5790846146d5565b92506001607f1b612b688383614784565b612b7291906147f0565b9050612b8181621c6380614784565b612b8b90846146d5565b92506001607f1b612b9c8383614784565b612ba691906147f0565b9050612bb5816201c638614784565b612bbf90846146d5565b92506001607f1b612bd08383614784565b612bda91906147f0565b9050612be881611ab8614784565b612bf290846146d5565b92506001607f1b612c038383614784565b612c0d91906147f0565b9050612c1b8161017c614784565b612c2590846146d5565b92506001607f1b612c368383614784565b612c4091906147f0565b9050612c4d816014614784565b612c5790846146d5565b92506001607f1b612c688383614784565b612c7291906147f0565b9050612c7f816001614784565b612c8990846146d5565b92506001607f1b82612ca36721c3677c82b40000866147f0565b612cad91906146d5565b612cb791906146d5565b92506f10000000000000000000000000000000851615612d0b5770018ebef9eac820ae8682b9793ac6d1e776612cfe847001c3d6a24ed82218787d624d3e5eba95f9614784565b612d0891906147f0565b92505b6f20000000000000000000000000000000851615612d5d577001368b2fc6f9609fe7aceb46aa619baed4612d508470018ebef9eac820ae8682b9793ac6d1e778614784565b612d5a91906147f0565b92505b6f40000000000000000000000000000000851615612dae576fbc5ab1b16779be3575bd8f0520a9f21f612da1847001368b2fc6f9609fe7aceb46aa619baed5614784565b612dab91906147f0565b92505b6001607f1b851615612df2576f454aaa8efe072e7f6ddbab84b40a55c9612de5846fbc5ab1b16779be3575bd8f0520a9f21e614784565b612def91906147f0565b92505b700100000000000000000000000000000000851615612e43576f0960aadc109e7a3bf4578099615711ea612e36846f454aaa8efe072e7f6ddbab84b40a55c5614784565b612e4091906147f0565b92505b700200000000000000000000000000000000851615612e93576e2bf84208204f5977f9a8cf01fdce3d612e86846f0960aadc109e7a3bf4578099615711d7614784565b612e9091906147f0565b92505b700400000000000000000000000000000000851615612ee1576d03c6ab775dd0b95b4cbee7e65d11612ed4846e2bf84208204f5977f9a8cf01fdc307614784565b612ede91906147f0565b92505b50909392505050565b6000808080806fd3094c70f034de4b96ff7d5b6f99fcd88610612f4f57612f216f40000000000000000000000000000000856146d5565b93506fd3094c70f034de4b96ff7d5b6f99fcd8612f426001607f1b88614784565b612f4c91906147f0565b95505b6fa45af1e1f40c333b3de1db4dd55f29a78610612fae57612f806f20000000000000000000000000000000856146d5565b93506fa45af1e1f40c333b3de1db4dd55f29a7612fa16001607f1b88614784565b612fab91906147f0565b95505b6f910b022db7ae67ce76b441c27035c6a1861061300d57612fdf6f10000000000000000000000000000000856146d5565b93506f910b022db7ae67ce76b441c27035c6a16130006001607f1b88614784565b61300a91906147f0565b95505b6f88415abbe9a76bead8d00cf112e4d4a8861061306c5761303e6f08000000000000000000000000000000856146d5565b93506f88415abbe9a76bead8d00cf112e4d4a861305f6001607f1b88614784565b61306991906147f0565b95505b6f84102b00893f64c705e841d5d4064bd386106130cb5761309d6f04000000000000000000000000000000856146d5565b93506f84102b00893f64c705e841d5d4064bd36130be6001607f1b88614784565b6130c891906147f0565b95505b6f8204055aaef1c8bd5c3259f4822735a2861061312a576130fc6f02000000000000000000000000000000856146d5565b93506f8204055aaef1c8bd5c3259f4822735a261311d6001607f1b88614784565b61312791906147f0565b95505b6f810100ab00222d861931c15e39b44e9986106131895761315b6f01000000000000000000000000000000856146d5565b93506f810100ab00222d861931c15e39b44e9961317c6001607f1b88614784565b61318691906147f0565b95505b6f808040155aabbbe9451521693554f73386106131e7576131b96e800000000000000000000000000000856146d5565b93506f808040155aabbbe9451521693554f7336131da6001607f1b88614784565b6131e491906147f0565b95505b6131f56001607f1b8761493c565b92508291506001607f1b6132098380614784565b61321391906147f0565b9050700100000000000000000000000000000000613231848261493c565b61323b9084614784565b61324591906147f0565b61324f90856146d5565b93506001607f1b6132608284614784565b61326a91906147f0565b9150700200000000000000000000000000000000613298846faaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa61493c565b6132a29084614784565b6132ac91906147f0565b6132b690856146d5565b93506001607f1b6132c78284614784565b6132d191906147f0565b91507003000000000000000000000000000000006132ff846f9999999999999999999999999999999961493c565b6133099084614784565b61331391906147f0565b61331d90856146d5565b93506001607f1b61332e8284614784565b61333891906147f0565b9150700400000000000000000000000000000000613366846f9249249249249249249249249249249261493c565b6133709084614784565b61337a91906147f0565b61338490856146d5565b93506001607f1b6133958284614784565b61339f91906147f0565b91507005000000000000000000000000000000006133cd846f8e38e38e38e38e38e38e38e38e38e38e61493c565b6133d79084614784565b6133e191906147f0565b6133eb90856146d5565b93506001607f1b6133fc8284614784565b61340691906147f0565b9150700600000000000000000000000000000000613434846f8ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b61493c565b61343e9084614784565b61344891906147f0565b61345290856146d5565b93506001607f1b6134638284614784565b61346d91906147f0565b915070070000000000000000000000000000000061349b846f89d89d89d89d89d89d89d89d89d89d8961493c565b6134a59084614784565b6134af91906147f0565b6134b990856146d5565b93506001607f1b6134ca8284614784565b6134d491906147f0565b9150700800000000000000000000000000000000613502846f8888888888888888888888888888888861493c565b61350c9084614784565b61351691906147f0565b6121e090856146d5565b60008084116135975760405162461bcd60e51b815260206004820152602360248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f414d4f60448201527f554e5400000000000000000000000000000000000000000000000000000000006064820152608401610ceb565b6000831180156135a75750600082115b6136195760405162461bcd60e51b815260206004820152602660248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f4c495160448201527f55494449545900000000000000000000000000000000000000000000000000006064820152608401610ceb565b82613624858461413e565b61362e91906147f0565b949350505050565b60008087116136ad5760405162461bcd60e51b815260206004820152602a60248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f4f555460448201527f5055545f414d4f554e54000000000000000000000000000000000000000000006064820152608401610ceb565b6000861180156136bd5750600085115b61372f5760405162461bcd60e51b815260206004820152602660248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f4c495160448201527f55494449545900000000000000000000000000000000000000000000000000006064820152608401610ceb565b8263ffffffff168463ffffffff1614156137a157600061375b612710613755898b61413e565b9061413e565b9050600061378761376e85612710614917565b63ffffffff166137558b8a61416790919063ffffffff16565b9050613798600161215983856147f0565b925050506121e0565b600080806137af888b614167565b90506137bd8882888a61185e565b909350915060006137d08a61271061413e565b905060006137de828661413e565b905060ff841682901b6121d760016137f88a612710614917565b63ffffffff1660ff881661380c858761493c565b61215992911c6147f0565b6000806000806000806000808973ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa15801561386e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138929190614846565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff1691506000806138c48d8d611533565b8097508193508294505050508b73ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561391b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061393f9190614877565b73ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff1614156139f6578b73ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156139bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139e19190614877565b99509297509095509350915084848484613b18565b8b73ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015613a41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a659190614877565b73ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff161415611f81578b73ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015613ae3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b079190614877565b995091975091955093509150838583855b5050505093975093979195509350565b606081613b775760405162461bcd60e51b815260206004820152601c60248201527f5265717569656d466f726d756c613a20494e56414c49445f50415448000000006044820152606401610ceb565b613b828260016146d5565b67ffffffffffffffff811115613b9a57613b9a6146ed565b604051908082528060200260200182016040528015613bc3578160200160208202803683370190505b509050838160018351613bd6919061493c565b81518110613be657613be661471c565b602090810291909101015284825b8015613c855760008080808080613c208b8b613c1160018b61493c565b81811061263f5761263f61471c565b955095509550955095509550613c418988815181106123045761230461471c565b89613c4d60018a61493c565b81518110613c5d57613c5d61471c565b6020026020010181815250508597505050505050508080613c7d90614953565b915050613bf4565b508673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146127615760405162461bcd60e51b815260206004820152602560248201527f5265717569656d466f726d756c613a20494e56414c49445f544f4b454e5f494e60448201527f5f504154480000000000000000000000000000000000000000000000000000006064820152608401610ceb565b60008060008373ffffffffffffffffffffffffffffffffffffffff166332bfe4696040518163ffffffff1660e01b81526004016040805180830381865afa925050508015613db0575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252613dad9181019061499c565b60015b613e3957613dbc6149cb565b806308c379a01415613df65750613dd1614a59565b80613ddc5750613df8565b8060405162461bcd60e51b8152600401610ceb9190614b01565b505b3d808015613e22576040519150601f19603f3d011682016040523d82523d6000602084013e613e27565b606091505b50603280601e93509350935050613eb3565b81818773ffffffffffffffffffffffffffffffffffffffff1663d4cadf686040518163ffffffff1660e01b8152600401602060405180830381865afa158015613e86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613eaa9190614b74565b94509450945050505b9193909250565b60006020607f5b60ff8116613ed08360016148b7565b60ff161015613f235760006002613ee783856148b7565b613ef19190614b91565b90508460008260ff1660808110613f0a57613f0a61471c565b015410613f1957809250613f1d565b8091505b50613ec1565b8360008260ff1660808110613f3a57613f3a61471c565b015410613f48579392505050565b8360008360ff1660808110613f5f57613f5f61471c565b0154106101ae575092915050565b6000808373ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015613fbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613fdf9190614877565b905060008473ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561402e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906140529190614877565b90508373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614806140b957508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b6141055760405162461bcd60e51b815260206004820152601e60248201527f5265717569656d466f726d756c613a20496e76616c696420746f6b656e4100006044820152606401610ceb565b8373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461362e578161152a565b6000611b258284614784565b60008061415783856146d5565b9050611b25848210156000614175565b6000611b2583836001614187565b8161418357614183816141a2565b5050565b60006141968484111583614175565b600061152a848661493c565b62461bcd60e51b6000908152602060045260076024526652455123000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461421757600080fd5b50565b60008083601f84011261422c57600080fd5b50813567ffffffffffffffff81111561424457600080fd5b6020830191508360208260051b8501011115611c7657600080fd5b60008060008060008060a0878903121561427857600080fd5b8635614283816141f5565b95506020870135614293816141f5565b945060408701356142a3816141f5565b935060608701359250608087013567ffffffffffffffff8111156142c657600080fd5b6142d289828a0161421a565b979a9699509497509295939492505050565b6020808252825182820181905260009190848201906040850190845b8181101561431c57835183529284019291840191600101614300565b50909695505050505050565b6000806040838503121561433b57600080fd5b82359150602083013560ff8116811461435357600080fd5b809150509250929050565b6000806040838503121561437157600080fd5b823561437c816141f5565b91506020830135614353816141f5565b6000806000606084860312156143a157600080fd5b83356143ac816141f5565b925060208401356143bc816141f5565b915060408401356143cc816141f5565b809150509250925092565b63ffffffff8116811461421757600080fd5b600080600080608085870312156143ff57600080fd5b84359350602085013592506040850135614418816143d7565b91506060850135614428816143d7565b939692955090935050565b60006020828403121561444557600080fd5b5035919050565b60008060006060848603121561446157600080fd5b833561446c816141f5565b9250602084013561447c816141f5565b929592945050506040919091013590565b60008060008060008060c087890312156144a657600080fd5b86359550602087013594506040870135935060608701356144c6816143d7565b925060808701356144d6816143d7565b915060a08701356144e6816143d7565b809150509295509295509295565b600080600080600060a0868803121561450c57600080fd5b853594506020860135935060408601359250606086013591506080860135614533816143d7565b809150509295509295909350565b60008060008060006080868803121561455957600080fd5b8535614564816141f5565b94506020860135614574816141f5565b935060408601359250606086013567ffffffffffffffff81111561459757600080fd5b6145a38882890161421a565b969995985093965092949392505050565b6dffffffffffffffffffffffffffff8116811461421757600080fd5b600080600080600080600060e0888a0312156145eb57600080fd5b8735965060208801356145fd816145b4565b9550604088013561460d816145b4565b9450606088013561461d816143d7565b9350608088013561462d816143d7565b925060a088013561463d816145b4565b915060c088013561464d816145b4565b8091505092959891949750929550565b60008060006060848603121561467257600080fd5b505081359360208301359350604090920135919050565b60006020828403121561469b57600080fd5b8135611b25816141f5565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082198211156146e8576146e86146a6565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561477d5761477d6146a6565b5060010190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156147bc576147bc6146a6565b500290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826147ff576147ff6147c1565b500490565b60008060006060848603121561481957600080fd5b8351614824816143d7565b6020850151909350614835816143d7565b60408501519092506143cc816143d7565b60008060006060848603121561485b57600080fd5b8351614866816145b4565b6020850151909350614835816145b4565b60006020828403121561488957600080fd5b8151611b25816141f5565b600060ff821660ff8416808210156148ae576148ae6146a6565b90039392505050565b600060ff821660ff84168060ff038211156148d4576148d46146a6565b019392505050565b600060ff8216806148ef576148ef6146a6565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0192915050565b600063ffffffff83811690831681811015614934576149346146a6565b039392505050565b60008282101561494e5761494e6146a6565b500390565b600081614962576149626146a6565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b600082614997576149976147c1565b500690565b600080604083850312156149af57600080fd5b82516149ba816143d7565b6020840151909250614353816143d7565b600060033d11156149e45760046000803e5060005160e01c5b90565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff82111715614a52577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040525050565b600060443d1015614a675790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc803d016004833e81513d67ffffffffffffffff8160248401118184111715614ab557505050505090565b8285019150815181811115614acd5750505050505090565b843d8701016020828501011115614ae75750505050505090565b614af6602082860101876149e7565b509095945050505050565b600060208083528351808285015260005b81811015614b2e57858101830151858201604001528201614b12565b81811115614b40576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b600060208284031215614b8657600080fd5b8151611b25816143d7565b600060ff831680614ba457614ba46147c1565b8060ff8416049150509291505056fea2646970667358221220179abfaa970027bcbe6c383f619562b32fd76058664d13d62e0601fb6620d50f64736f6c634300080a0033";

export class RequiemFormulaTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RequiemFormulaTest> {
    return super.deploy(overrides || {}) as Promise<RequiemFormulaTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RequiemFormulaTest {
    return super.attach(address) as RequiemFormulaTest;
  }
  connect(signer: Signer): RequiemFormulaTest__factory {
    return super.connect(signer) as RequiemFormulaTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RequiemFormulaTestInterface {
    return new utils.Interface(_abi) as RequiemFormulaTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RequiemFormulaTest {
    return new Contract(address, _abi, signerOrProvider) as RequiemFormulaTest;
  }
}
