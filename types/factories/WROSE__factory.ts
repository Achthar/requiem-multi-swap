/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { WROSE, WROSEInterface } from "../WROSE";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "guy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052600c60808190526b5772617070656420524f534560a01b60a090815261002d916000919061007a565b506040805180820190915260058082526457524f534560d81b602090920191825261005a9160019161007a565b506002805460ff1916601217905534801561007457600080fd5b5061014e565b82805461008690610113565b90600052602060002090601f0160209004810192826100a857600085556100ee565b82601f106100c157805160ff19168380011785556100ee565b828001600101855582156100ee579182015b828111156100ee5782518255916020019190600101906100d3565b506100fa9291506100fe565b5090565b5b808211156100fa57600081556001016100ff565b600181811c9082168061012757607f821691505b6020821081141561014857634e487b7160e01b600052602260045260246000fd5b50919050565b6107a88061015d6000396000f3fe60806040526004361061008c5760003560e01c806306fdde0314610096578063095ea7b3146100c157806318160ddd146100f157806323b872dd1461010e5780632e1a7d4d1461012e578063313ce5671461014e57806370a082311461017a57806395d89b41146101a7578063a9059cbb146101bc578063d0e30db01461008c578063dd62ed3e146101dc575b610094610214565b005b3480156100a257600080fd5b506100ab61026f565b6040516100b891906105b4565b60405180910390f35b3480156100cd57600080fd5b506100e16100dc366004610625565b6102fd565b60405190151581526020016100b8565b3480156100fd57600080fd5b50475b6040519081526020016100b8565b34801561011a57600080fd5b506100e161012936600461064f565b610369565b34801561013a57600080fd5b5061009461014936600461068b565b6104ed565b34801561015a57600080fd5b506002546101689060ff1681565b60405160ff90911681526020016100b8565b34801561018657600080fd5b506101006101953660046106a4565b60036020526000908152604090205481565b3480156101b357600080fd5b506100ab610593565b3480156101c857600080fd5b506100e16101d7366004610625565b6105a0565b3480156101e857600080fd5b506101006101f73660046106bf565b600460209081526000928352604080842090915290825290205481565b3360009081526003602052604081208054349290610233908490610708565b909155505060405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2565b6000805461027c90610720565b80601f01602080910402602001604051908101604052809291908181526020018280546102a890610720565b80156102f55780601f106102ca576101008083540402835291602001916102f5565b820191906000526020600020905b8154815290600101906020018083116102d857829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103589086815260200190565b60405180910390a350600192915050565b6001600160a01b03831660009081526003602052604081205482111561038e57600080fd5b6001600160a01b03841633148015906103cc57506001600160a01b038416600090815260046020908152604080832033845290915290205460001914155b1561043a576001600160a01b038416600090815260046020908152604080832033845290915290205482111561040157600080fd5b6001600160a01b03841660009081526004602090815260408083203384529091528120805484929061043490849061075b565b90915550505b6001600160a01b0384166000908152600360205260408120805484929061046290849061075b565b90915550506001600160a01b0383166000908152600360205260408120805484929061048f908490610708565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516104db91815260200190565b60405180910390a35060019392505050565b3360009081526003602052604090205481111561050957600080fd5b336000908152600360205260408120805483929061052890849061075b565b9091555050604051339082156108fc029083906000818181858888f1935050505015801561055a573d6000803e3d6000fd5b5060405181815233907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659060200160405180910390a250565b6001805461027c90610720565b60006105ad338484610369565b9392505050565b600060208083528351808285015260005b818110156105e1578581018301518582016040015282016105c5565b818111156105f3576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461062057600080fd5b919050565b6000806040838503121561063857600080fd5b61064183610609565b946020939093013593505050565b60008060006060848603121561066457600080fd5b61066d84610609565b925061067b60208501610609565b9150604084013590509250925092565b60006020828403121561069d57600080fd5b5035919050565b6000602082840312156106b657600080fd5b6105ad82610609565b600080604083850312156106d257600080fd5b6106db83610609565b91506106e960208401610609565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561071b5761071b6106f2565b500190565b600181811c9082168061073457607f821691505b6020821081141561075557634e487b7160e01b600052602260045260246000fd5b50919050565b60008282101561076d5761076d6106f2565b50039056fea264697066735822122040ada53f522dc3ff315e5b5ac11f3fa706dddab6635cd79a66b9a7a8b42b183264736f6c634300080a0033";

export class WROSE__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WROSE> {
    return super.deploy(overrides || {}) as Promise<WROSE>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WROSE {
    return super.attach(address) as WROSE;
  }
  connect(signer: Signer): WROSE__factory {
    return super.connect(signer) as WROSE__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WROSEInterface {
    return new utils.Interface(_abi) as WROSEInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): WROSE {
    return new Contract(address, _abi, signerOrProvider) as WROSE;
  }
}
