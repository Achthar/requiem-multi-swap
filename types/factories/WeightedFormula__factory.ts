/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WeightedFormula,
  WeightedFormulaInterface,
} from "../WeightedFormula";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reserve0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserve1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance0Adjusted",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance1Adjusted",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
    ],
    name: "ensureConstantValue",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveOut",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightIn",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightOut",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    name: "getAmountIn",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveOut",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightIn",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightOut",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    name: "getAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getFactoryAmountsIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getFactoryAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "getFactoryPairData",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "amp",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "reserve0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reserve1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vReserve0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vReserve1",
            type: "uint256",
          },
        ],
        internalType: "struct IWeightedPair.ReserveData",
        name: "reserveData",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    name: "getFactoryParameters",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightA",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightB",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "getFactoryStaticData",
    outputs: [
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "amp",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    name: "getOtherToken",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "getPairAmountIn",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "getPairAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    name: "getPairParameters",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightA",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightB",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "getPairStaticData",
    outputs: [
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "amp",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "vReserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "vReserveB",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalLiquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserve0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserve1",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint112",
        name: "collectedFee0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "collectedFee1",
        type: "uint112",
      },
    ],
    name: "mintLiquidityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    name: "quote",
    outputs: [
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "sortTokens",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061073f6001641c35fedd1560601b036020556001646c3390ecc9605e1b036021556001640cf801476160611b0360225560016431bdb23e1d605f1b0360235560016502fb1d8fe083605b1b0360245560016505b771955b37605a1b036025556001650af67a93bb5160591b0360265560016515060c256cb360581b036027556001651428a2f98d7360581b036028556001654d515663970960561b03602955600165944620b0e70f60551b03602a55600166011c592761c66760541b03602b5560016602214d10d014eb60531b03602c55600166020ade36b7dbef60531b03602d5560016603eab73b3bbfe360521b03602e556001660782ee3593f6d760511b03602f556001661ccf4b44bb4821604f1b0360305560016606e7f88ad8a77760511b0360315560016669f3d1c921891d604d1b03603255600166cb2ff529eb71e5604c1b03603355600166c2d415c3db974b604c1b0360345560016702eb40f9f620fda7604a1b0360355560016705990681d961a1eb60491b03603655600167055e12902701414760491b0360375560016714962dee9dc9764160471b0360385560016704ef57b9b560fab560491b0360395560016712ed7b32a58f552b60471b03603a556001679131271922eaa60760441b03603b556001678b380f3558668c4760441b03603c556001680215f77c045fbe885760421b03603d556001600160831b03603e556001670f577eded5773a1160471b03603f556001680eb5ec597592befbf5603f1b036040556001681c35fedd14b861eb05603e1b036041556001683619c87664579bc94b603d1b0360425560016867c00a3b07ffc01fd7603c1b03604355600168c6f6c8f8739773a7a5603b1b03604455600168bec763f8209b7a72b1603b1b0360455560016902dbb8caad9b7097b91b60391b03604655600169057b3d49dda84556d6f760381b03604755600169054183095b2c8ececf3160381b036048556001690a14517cc6b9457111ef60371b0360495560016913545598e5c23276ccf160361b03604a556001692511882c39c3adea96ff60351b03604b55600169471649d87199aa99075760341b03604c557004429a21a029d4c1457cfbffffffffffff604d55700415bc6d6fb7dd71af2cb3ffffffffffff604e557003eab73b3bbfe282243ce1ffffffffffff604f557003c1771ac9fb6b4c18e229ffffffffffff605055700399e96897690418f785257fffffffffff605155700373fc456c53bb779bf0ea9fffffffffff60525570034f9e8e490c48e67e6ab8bfffffffffff60535570032cbfd4a7adc790560b3337ffffffffff60545570030b50570f6e5d2acca94613ffffffffff6055557002eb40f9f620fda6b56c2861ffffffffff6056557002cc8340ecb0d0f520a6af58ffffffffff6057557002af09481380a0a35cf1ba02ffffffffff605855700292c5bdd3b92ec810287b1b3fffffffff605955700277abdcdab07d5a77ac6d6b9fffffffff605a5570025daf6654b1eaa55fd64df5efffffffff605b55700244c49c648baa98192dce88b7ffffffff605c5570022ce03cd5619a311b2471268bffffffff605d55700215f77c045fbe885654a44a0fffffffff605e556001600160811b03605f557001eaefdbdaaee7421fc4d3ede5ffffffff6060557001d6bd8b2eb257df7e8ca57b09bfffffff6061557001c35fedd14b861eb0443f7f133fffffff6062557001b0ce43b322bcde4a56e8ada5afffffff60635570019f0028ec1fff007f5a195a39dfffffff60645570018ded91f0e72ee74f49b15ba527ffffff60655570017d8ec7f04136f4e5615fd41a63ffffff60665570016ddc6556cdb84bdc8d12d22e6fffffff60675570015ecf52776a1155b5bd8395814f7fffff60685570015060c256cb23b3b3cc3754cf40ffffff6069557001428a2f98d728ae223ddab715be3fffff606a5570013545598e5c23276ccf0ede68034fffff606b557001288c4161ce1d6f54b7f61081194fffff606c5570011c592761c666aa641d5a01a40f17ffff606d55700110a688680a7530515f3e6e6cfdcdffff606e557001056f1b5bedf75c6bcb2ce8aed428ffff606f556ffaadceceeff8a0890f3875f008277fff6070556ff05dc6b27edad306388a600f6ba0bfff6071556fe67a5a25da41063de1495d5b18cdbfff6072556fdcff115b14eedde6fc3aa5353f2e4fff6073556fd3e7a3924312399f9aae2e0f868f8fff6074556fcb2ff529eb71e41582cccd5a1ee26fff6075556fc2d415c3db974ab32a51840c0b67edff6076556fbad03e7d883f69ad5b0a186184e06bff6077556fb320d03b2c343d4829abd6075f0cc5ff6078556fabc25204e02828d73c6e80bcdb1a95bf6079556fa4b16f74ee4bb2040a1ec6c15fbbf2df607a556f9deaf736ac1f569deb1b5ae3f36c130f607b556f976bd9952c7aa957f5937d790ef65037607c556f9131271922eaa6064b73a22d0bd4f2bf607d556f8b380f3558668c46c91c49a2f8e967b9607e556f857ddf0117efa215952912839f6473e6607f55565b614556806200074f6000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c8063692d6d97116100cd578063ad615dec11610081578063b3923a9911610066578063b3923a9914610400578063d691093714610413578063e02764c01461044b57600080fd5b8063ad615dec146103da578063b19210b0146103ed57600080fd5b80638888a737116100b25780638888a737146103a15780638fabd82d146103b45780639ed45e47146103c757600080fd5b8063692d6d97146102ee57806379c91b371461037e57600080fd5b806344419c1a116101245780636350d774116101095780636350d774146102a7578063671a11b5146102c857806367f84adc146102db57600080fd5b806344419c1a14610254578063544caa561461026757600080fd5b80630e64312014610156578063119220a5146101be57806318d1e803146101de5780633274946114610221575b600080fd5b610169610164366004613bfa565b61045e565b6040805173ffffffffffffffffffffffffffffffffffffffff909716875260208701959095529385019290925263ffffffff908116606085015290811660808401521660a082015260c0015b60405180910390f35b6101d16101cc366004613c78565b6107c0565b6040516101b59190613cfd565b6101f16101ec366004613bfa565b6109f5565b6040805163ffffffff958616815293851660208501529184169183019190915290911660608201526080016101b5565b61023461022f366004613d41565b610a9e565b6040805194855260208501939093529183015260608201526080016101b5565b6101f1610262366004613d8c565b610d3f565b61027a610275366004613bfa565b610e44565b6040805173ffffffffffffffffffffffffffffffffffffffff9384168152929091166020830152016101b5565b6102ba6102b5366004613da9565b610fa2565b6040519081526020016101b5565b6102ba6102d6366004613dfc565b610fdb565b6101d16102e9366004613c78565b6110b8565b6103016102fc366004613bfa565b6112d8565b6040805173ffffffffffffffffffffffffffffffffffffffff98891681529790961660208089019190915263ffffffff958616888801529385166060808901919091529285166080880152931660a0860152825160c08601529082015160e0850152918101516101008401520151610120820152610140016101b5565b61039161038c366004613e63565b61147f565b60405190151581526020016101b5565b6102ba6103af366004613da9565b61159b565b6101d16103c2366004613eb0565b6115c7565b6102ba6103d5366004613f46565b6117e8565b6102ba6103e8366004613fbb565b6118cf565b6102ba6103fb366004613dfc565b6119cd565b6101d161040e366004613eb0565b611ac0565b610426610421366004613bfa565b611ccd565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101b5565b610169610459366004613d41565b611eb8565b60008060008060008060008873ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401608060405180830381865afa1580156104b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d89190614088565b90506000806104e68b610d3f565b508096508193508294505050508a73ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561053e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105629190614115565b73ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff1603610620578a73ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106039190614115565b60408401516060850151919a5098509650909450925083836107b3565b8a73ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561066b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068f9190614115565b73ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff160361074c578a73ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561070c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107309190614115565b60608401516040850151919a50985096509450925082846107b3565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f524551463a20494100000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b5050509295509295509295565b606081610829576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f524551463a20495000000000000000000000000000000000000000000000000060448201526064016107aa565b610834826001614161565b67ffffffffffffffff81111561084c5761084c613fe7565b604051908082528060200260200182016040528015610875578160200160208202803683370190505b509050838160008151811061088c5761088c614179565b60209081029190910101528560005b83811015610954576000806000806000806108dd8f8c8c8a8181106108c2576108c2614179565b90506020020160208101906108d79190613d8c565b8a611eb8565b9550955095509550955095506109108988815181106108fe576108fe614179565b60200260200101518686868686610fdb565b8961091c896001614161565b8151811061092c5761092c614179565b602002602001018181525050859750505050505050808061094c906141a8565b91505061089b565b508573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146109ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f524551463a20494f50000000000000000000000000000000000000000000000060448201526064016107aa565b509695505050505050565b6040517f59c96c1100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301526000918291829182918716906359c96c1190602401608060405180830381865afa158015610a6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8e91906141e0565b9299919850965090945092505050565b600080600080600080610ab18888610e44565b9150915060008973ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401608060405180830381865afa158015610b02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b269190614088565b90508973ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b979190614115565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16148015610c6a57508973ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3b9190614115565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b610cd0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f524551463a20540000000000000000000000000000000000000000000000000060448201526064016107aa565b8273ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614610d19576020810151815160608301516040840151610d2b565b80516020820151604083015160608401515b929d919c509a509098509650505050505050565b6000806000808473ffffffffffffffffffffffffffffffffffffffff1663a5ea11da6040518163ffffffff1660e01b8152600401608060405180830381865afa925050508015610dca575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610dc7918101906141e0565b60015b610e3557610dd661423f565b806308c379a003610e295750610dea61425b565b80610df55750610e2b565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107aa9190614303565b505b3d6000803e3d6000fd5b92989197509550909350915050565b6000808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610edc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f524551463a20410000000000000000000000000000000000000000000000000060448201526064016107aa565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1610610f16578284610f19565b83835b909250905073ffffffffffffffffffffffffffffffffffffffff8216610f9b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f524551463a205a4100000000000000000000000000000000000000000000000060448201526064016107aa565b9250929050565b600080600080600080610fb5898961045e565b9550955095509550955050610fce8785878587866119cd565b9998505050505050505050565b600080610fea83612710614376565b610ffa9063ffffffff168961439b565b90508363ffffffff168563ffffffff1603611042578061101c8861271061439b565b6110269190614161565b611030828861439b565b61103a9190614407565b9150506110ae565b60008080836110538b61271061439b565b61105d9190614161565b90506110768161106f8c61271061439b565b8a8a6121b2565b90935091506000611087848b61439b565b905060ff83168a901b8461109b828461441b565b6110a59190614407565b96505050505050505b9695505050505050565b606081611121576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f524551463a20495000000000000000000000000000000000000000000000000060448201526064016107aa565b61112c826001614161565b67ffffffffffffffff81111561114457611144613fe7565b60405190808252806020026020018201604052801561116d578160200160208202803683370190505b509050838160018351611180919061441b565b8151811061119057611190614179565b602090810291909101015284825b801561124257600080808080806111cb8f8c8c6111bc60018c61441b565b8181106108c2576108c2614179565b9550955095509550955095506111fe8988815181106111ec576111ec614179565b602002602001015185878587866119cd565b8961120a60018a61441b565b8151811061121a5761121a614179565b602002602001018181525050859750505050505050808061123a90614432565b91505061119e565b508673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146109ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f524551463a20494950000000000000000000000000000000000000000000000060448201526064016107aa565b60008060008060008061130c6040518060800160405280600081526020016000815260200160008152602001600081525090565b8773ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611357573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137b9190614115565b96508773ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156113c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ec9190614115565b95508773ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401608060405180830381865afa158015611439573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145d9190614088565b905061146989896109f5565b999c989b50919950979096909550909350915050565b60008163ffffffff166032036114ac57611499858761439b565b6114a3848661439b565b10159050611592565b8584101580156114bc5750848310155b156114c957506001611592565b8584111580156114d95750848311155b156114e657506000611592565b8160006114f4826064614376565b90506000806000808b8a1061152e5761150e8b8a8761232f565b90945060ff1692506115218a8d8861232f565b90925060ff169050611555565b6115398c8b8861232f565b90945060ff16925061154c898c8761232f565b90925060ff1690505b60008184106115645781611566565b835b9050611572818561441b565b935061157e818361441b565b9290921c9390921c92909211159450505050505b95945050505050565b6000806000806000806115ae898961045e565b9550955095509550955050610fce878686868686610fdb565b606081611630576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f524551463a20495000000000000000000000000000000000000000000000000060448201526064016107aa565b61163b826001614161565b67ffffffffffffffff81111561165357611653613fe7565b60405190808252806020026020018201604052801561167c578160200160208202803683370190505b509050838160008151811061169357611693614179565b60209081029190910101528560005b83811015611748576000806000806000806116e38b8b898181106116c8576116c8614179565b90506020020160208101906116dd9190613d8c565b8961045e565b9550955095509550955095506117048988815181106108fe576108fe614179565b89611710896001614161565b8151811061172057611720614179565b6020026020010181815250508597505050505050508080611740906141a8565b9150506116a2565b508573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146117de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f524551463a20494f50000000000000000000000000000000000000000000000060448201526064016107aa565b5095945050505050565b60006dffffffffffffffffffffffffffff831615611857576000806118296118208a6dffffffffffffffffffffffffffff8816614161565b8a8960646121b2565b90925060ff169050898161183d848361439b565b61184892911c61441b565b6118529084614161565b925050505b6dffffffffffffffffffffffffffff8216156118c45760008061189661188d896dffffffffffffffffffffffffffff8716614161565b898860646121b2565b90925060ff16905089816118aa848361439b565b6118b592911c61441b565b6118bf9084614161565b925050505b979650505050505050565b600080841161193a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f524551443a20494100000000000000000000000000000000000000000000000060448201526064016107aa565b60008311801561194a5750600082115b6119b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f524551443a20494c00000000000000000000000000000000000000000000000060448201526064016107aa565b826119bb838661439b565b6119c59190614407565b949350505050565b60008263ffffffff168463ffffffff1603611a445760006119ee888861439b565b6119fa9061271061439b565b90506000611a0a84612710614376565b63ffffffff16611a1a8a8961441b565b611a24919061439b565b9050611a308183614407565b611a3b906001614161565b925050506110ae565b60008080611a528a8961441b565b9050611a608882888a6121b2565b90935091506000611a738a61271061439b565b90506000611a81858361439b565b905060ff841682901b611a9688612710614376565b63ffffffff1660ff8616611aaa838561441b565b611ab592911c614407565b6110a5906001614161565b606081611b29576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f524551463a20495000000000000000000000000000000000000000000000000060448201526064016107aa565b611b34826001614161565b67ffffffffffffffff811115611b4c57611b4c613fe7565b604051908082528060200260200182016040528015611b75578160200160208202803683370190505b509050838160018351611b88919061441b565b81518110611b9857611b98614179565b602090810291909101015284825b8015611c375760008080808080611bd28b8b611bc360018b61441b565b8181106116c8576116c8614179565b955095509550955095509550611bf38988815181106111ec576111ec614179565b89611bff60018a61441b565b81518110611c0f57611c0f614179565b6020026020010181815250508597505050505050508080611c2f90614432565b915050611ba6565b508673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146117de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f524551463a20494950000000000000000000000000000000000000000000000060448201526064016107aa565b6000808373ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d3f9190614115565b905060008473ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611db29190614115565b90508373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161480611e1957508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611e7f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f524551463a20410000000000000000000000000000000000000000000000000060448201526064016107aa565b8373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146119c55781611592565b60008060008060008060008873ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401608060405180830381865afa158015611f0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f329190614088565b9050600080611f418c8c6109f5565b508096508193508294505050508a73ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fbd9190614115565b73ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff160361207b578a73ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561203a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061205e9190614115565b60408401516060850151919a5098509650909450925083836121a3565b8a73ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156120c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120ea9190614115565b73ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff160361074c578a73ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015612167573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061218b9190614115565b60608401516040850151919a50985096509450925082845b50505093975093979195509350565b6000808486101561221f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5f626173654e203c205f6261736544000000000000000000000000000000000060448201526064016107aa565b700200000000000000000000000000000000861061223c57600080fd5b6000808661225a6f800000000000000000000000000000008a61439b565b6122649190614407565b905070015bf0a8b1457695355fb8ac404e7a79e381101561228f5761228881612498565b915061229b565b61229881612b9a565b91505b60008563ffffffff168763ffffffff16846122b6919061439b565b6122c09190614407565b90507008000000000000000000000000000000008110156122f2576122e481612cd9565b607f94509450505050612326565b60006122fd82613457565b905061231961230d82607f614467565b60ff1683901c8261350a565b9550935061232692505050565b94509492505050565b6000808385101561239c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5f626173654e203c205f6261736544000000000000000000000000000000000060448201526064016107aa565b70020000000000000000000000000000000085106123b957600080fd5b600080856123d76f800000000000000000000000000000008961439b565b6123e19190614407565b905070015bf0a8b1457695355fb8ac404e7a79e381101561240c5761240581612498565b9150612418565b61241581612b9a565b91505b6000603261242c63ffffffff88168561439b565b6124369190614407565b90507008000000000000000000000000000000008110156124685761245a81612cd9565b607f94509450505050612490565b600061247382613457565b905061248361230d82607f614467565b9550935061249092505050565b935093915050565b6000808080806fd3094c70f034de4b96ff7d5b6f99fcd88610612509576124cf6f4000000000000000000000000000000085614161565b93506fd3094c70f034de4b96ff7d5b6f99fcd86124fc6f800000000000000000000000000000008861439b565b6125069190614407565b95505b6fa45af1e1f40c333b3de1db4dd55f29a786106125745761253a6f2000000000000000000000000000000085614161565b93506fa45af1e1f40c333b3de1db4dd55f29a76125676f800000000000000000000000000000008861439b565b6125719190614407565b95505b6f910b022db7ae67ce76b441c27035c6a186106125df576125a56f1000000000000000000000000000000085614161565b93506f910b022db7ae67ce76b441c27035c6a16125d26f800000000000000000000000000000008861439b565b6125dc9190614407565b95505b6f88415abbe9a76bead8d00cf112e4d4a8861061264a576126106f0800000000000000000000000000000085614161565b93506f88415abbe9a76bead8d00cf112e4d4a861263d6f800000000000000000000000000000008861439b565b6126479190614407565b95505b6f84102b00893f64c705e841d5d4064bd386106126b55761267b6f0400000000000000000000000000000085614161565b93506f84102b00893f64c705e841d5d4064bd36126a86f800000000000000000000000000000008861439b565b6126b29190614407565b95505b6f8204055aaef1c8bd5c3259f4822735a28610612720576126e66f0200000000000000000000000000000085614161565b93506f8204055aaef1c8bd5c3259f4822735a26127136f800000000000000000000000000000008861439b565b61271d9190614407565b95505b6f810100ab00222d861931c15e39b44e99861061278b576127516f0100000000000000000000000000000085614161565b93506f810100ab00222d861931c15e39b44e9961277e6f800000000000000000000000000000008861439b565b6127889190614407565b95505b6f808040155aabbbe9451521693554f73386106127f5576127bb6e80000000000000000000000000000085614161565b93506f808040155aabbbe9451521693554f7336127e86f800000000000000000000000000000008861439b565b6127f29190614407565b95505b61280f6f800000000000000000000000000000008761441b565b92508291506f8000000000000000000000000000000061282f838061439b565b6128399190614407565b9050700100000000000000000000000000000000612857848261441b565b612861908461439b565b61286b9190614407565b6128759085614161565b93506f80000000000000000000000000000000612892828461439b565b61289c9190614407565b91507002000000000000000000000000000000006128ca846faaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa61441b565b6128d4908461439b565b6128de9190614407565b6128e89085614161565b93506f80000000000000000000000000000000612905828461439b565b61290f9190614407565b915070030000000000000000000000000000000061293d846f9999999999999999999999999999999961441b565b612947908461439b565b6129519190614407565b61295b9085614161565b93506f80000000000000000000000000000000612978828461439b565b6129829190614407565b91507004000000000000000000000000000000006129b0846f9249249249249249249249249249249261441b565b6129ba908461439b565b6129c49190614407565b6129ce9085614161565b93506f800000000000000000000000000000006129eb828461439b565b6129f59190614407565b9150700500000000000000000000000000000000612a23846f8e38e38e38e38e38e38e38e38e38e38e61441b565b612a2d908461439b565b612a379190614407565b612a419085614161565b93506f80000000000000000000000000000000612a5e828461439b565b612a689190614407565b9150700600000000000000000000000000000000612a96846f8ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b61441b565b612aa0908461439b565b612aaa9190614407565b612ab49085614161565b93506f80000000000000000000000000000000612ad1828461439b565b612adb9190614407565b9150700700000000000000000000000000000000612b09846f89d89d89d89d89d89d89d89d89d89d8961441b565b612b13908461439b565b612b1d9190614407565b612b279085614161565b93506f80000000000000000000000000000000612b44828461439b565b612b4e9190614407565b9150700800000000000000000000000000000000612b7c846f8888888888888888888888888888888861441b565b612b86908461439b565b612b909190614407565b6110ae9085614161565b6000807001000000000000000000000000000000008310612c03576000612bd9612bd46f8000000000000000000000000000000086614407565b613b68565b60ff811694851c94909150612bff906f800000000000000000000000000000009061439b565b9150505b6f80000000000000000000000000000000831115612c9d57607f5b60ff811615612c9b576f80000000000000000000000000000000612c42858061439b565b612c4c9190614407565b93507001000000000000000000000000000000008410612c8b57600193841c93612c769082614467565b60ff166001901b82612c889190614161565b91505b612c948161448a565b9050612c1e565b505b6f05b9de1d10bf4103d647b0955897ba80612cc86f03f80fe03f80fe03f80fe03f80fe03f88361439b565b612cd29190614407565b9392505050565b6000808080612cf86f10000000000000000000000000000000866144c5565b91508190506f80000000000000000000000000000000612d18828061439b565b612d229190614407565b9050612d36816710e1b3be415a000061439b565b612d409084614161565b92506f80000000000000000000000000000000612d5d838361439b565b612d679190614407565b9050612d7b816705a0913f6b1e000061439b565b612d859084614161565b92506f80000000000000000000000000000000612da2838361439b565b612dac9190614407565b9050612dc081670168244fdac7800061439b565b612dca9084614161565b92506f80000000000000000000000000000000612de7838361439b565b612df19190614407565b9050612e0481664807432bc1800061439b565b612e0e9084614161565b92506f80000000000000000000000000000000612e2b838361439b565b612e359190614407565b9050612e4881660c0135dca0400061439b565b612e529084614161565b92506f80000000000000000000000000000000612e6f838361439b565b612e799190614407565b9050612e8c816601b707b1cdc00061439b565b612e969084614161565b92506f80000000000000000000000000000000612eb3838361439b565b612ebd9190614407565b9050612ecf816536e0f639b80061439b565b612ed99084614161565b92506f80000000000000000000000000000000612ef6838361439b565b612f009190614407565b9050612f1281650618fee9f80061439b565b612f1c9084614161565b92506f80000000000000000000000000000000612f39838361439b565b612f439190614407565b9050612f5481649c197dcc0061439b565b612f5e9084614161565b92506f80000000000000000000000000000000612f7b838361439b565b612f859190614407565b9050612f9681640e30dce40061439b565b612fa09084614161565b92506f80000000000000000000000000000000612fbd838361439b565b612fc79190614407565b9050612fd88164012ebd130061439b565b612fe29084614161565b92506f80000000000000000000000000000000612fff838361439b565b6130099190614407565b9050613019816317499f0061439b565b6130239084614161565b92506f80000000000000000000000000000000613040838361439b565b61304a9190614407565b905061305a816301a9d48061439b565b6130649084614161565b92506f80000000000000000000000000000000613081838361439b565b61308b9190614407565b905061309a81621c638061439b565b6130a49084614161565b92506f800000000000000000000000000000006130c1838361439b565b6130cb9190614407565b90506130da816201c63861439b565b6130e49084614161565b92506f80000000000000000000000000000000613101838361439b565b61310b9190614407565b905061311981611ab861439b565b6131239084614161565b92506f80000000000000000000000000000000613140838361439b565b61314a9190614407565b90506131588161017c61439b565b6131629084614161565b92506f8000000000000000000000000000000061317f838361439b565b6131899190614407565b905061319681601461439b565b6131a09084614161565b92506f800000000000000000000000000000006131bd838361439b565b6131c79190614407565b90506131d481600161439b565b6131de9084614161565b92506f80000000000000000000000000000000826132046721c3677c82b4000086614407565b61320e9190614161565b6132189190614161565b92506f1000000000000000000000000000000085161561326c5770018ebef9eac820ae8682b9793ac6d1e77661325f847001c3d6a24ed82218787d624d3e5eba95f961439b565b6132699190614407565b92505b6f200000000000000000000000000000008516156132be577001368b2fc6f9609fe7aceb46aa619baed46132b18470018ebef9eac820ae8682b9793ac6d1e77861439b565b6132bb9190614407565b92505b6f4000000000000000000000000000000085161561330f576fbc5ab1b16779be3575bd8f0520a9f21f613302847001368b2fc6f9609fe7aceb46aa619baed561439b565b61330c9190614407565b92505b6f8000000000000000000000000000000085161561335f576f454aaa8efe072e7f6ddbab84b40a55c9613352846fbc5ab1b16779be3575bd8f0520a9f21e61439b565b61335c9190614407565b92505b7001000000000000000000000000000000008516156133b0576f0960aadc109e7a3bf4578099615711ea6133a3846f454aaa8efe072e7f6ddbab84b40a55c561439b565b6133ad9190614407565b92505b700200000000000000000000000000000000851615613400576e2bf84208204f5977f9a8cf01fdce3d6133f3846f0960aadc109e7a3bf4578099615711d761439b565b6133fd9190614407565b92505b70040000000000000000000000000000000085161561344e576d03c6ab775dd0b95b4cbee7e65d11613441846e2bf84208204f5977f9a8cf01fdc30761439b565b61344b9190614407565b92505b50909392505050565b60006020607f5b60ff811661346d8360016144d9565b60ff1610156134c0576000600261348483856144d9565b61348e91906144fe565b90508460008260ff16608081106134a7576134a7614179565b0154106134b6578092506134ba565b8091505b5061345e565b8360008260ff16608081106134d7576134d7614179565b0154106134e5579392505050565b8360008360ff16608081106134fc576134fc614179565b015410610151575092915050565b6000828160ff841661351c838061439b565b901c915061353a826f03442c4e6074a82f1797f72ac000000061439b565b6135449082614161565b905060ff8416613554868461439b565b901c9150613572826f0116b96f757c380fb287fd0e4000000061439b565b61357c9082614161565b905060ff841661358c868461439b565b901c91506135a9826e45ae5bdd5f0e03eca1ff439000000061439b565b6135b39082614161565b905060ff84166135c3868461439b565b901c91506135e0826e0defabf91302cd95b9ffda5000000061439b565b6135ea9082614161565b905060ff84166135fa868461439b565b901c9150613617826e02529ca9832b22439efff9b800000061439b565b6136219082614161565b905060ff8416613631868461439b565b901c915061364d826d54f1cf12bd04e516b6da8800000061439b565b6136579082614161565b905060ff8416613667868461439b565b901c9150613683826d0a9e39e257a09ca2d6db5100000061439b565b61368d9082614161565b905060ff841661369d868461439b565b901c91506136b9826d012e066e7b839fa050c30900000061439b565b6136c39082614161565b905060ff84166136d3868461439b565b901c91506136ee826c1e33d7d926c329a1ad1a80000061439b565b6136f89082614161565b905060ff8416613708868461439b565b901c9150613723826c02bee513bdb4a6b19b5f80000061439b565b61372d9082614161565b905060ff841661373d868461439b565b901c9150613757826b3a9316fa79b88eccf2a0000061439b565b6137619082614161565b905060ff8416613771868461439b565b901c915061378b826b048177ebe1fa81237520000061439b565b6137959082614161565b905060ff84166137a5868461439b565b901c91506137be826a5263fe90242dcbacf0000061439b565b6137c89082614161565b905060ff84166137d8868461439b565b901c91506137f1826a057e22099c030d9410000061439b565b6137fb9082614161565b905060ff841661380b868461439b565b901c9150613823826957e22099c030d941000061439b565b61382d9082614161565b905060ff841661383d868461439b565b901c91506138558269052b6b5456997631000061439b565b61385f9082614161565b905060ff841661386f868461439b565b901c915061388682684985f67696bf74800061439b565b6138909082614161565b905060ff84166138a0868461439b565b901c91506138b7826803dea12ea99e49800061439b565b6138c19082614161565b905060ff84166138d1868461439b565b901c91506138e7826731880f2214b6e00061439b565b6138f19082614161565b905060ff8416613901868461439b565b901c91506139178267025bcff56eb3600061439b565b6139219082614161565b905060ff8416613931868461439b565b901c915061394682661b722e10ab100061439b565b6139509082614161565b905060ff8416613960868461439b565b901c9150613975826601317c7007700061439b565b61397f9082614161565b905060ff841661398f868461439b565b901c91506139a382650cba84aafa0061439b565b6139ad9082614161565b905060ff84166139bd868461439b565b901c91506139d0826482573a0a0061439b565b6139da9082614161565b905060ff84166139ea868461439b565b901c91506139fd826405035ad90061439b565b613a079082614161565b905060ff8416613a17868461439b565b901c9150613a2982632f881b0061439b565b613a339082614161565b905060ff8416613a43868461439b565b901c9150613a55826301b2934061439b565b613a5f9082614161565b905060ff8416613a6f868461439b565b901c9150613a8082620efc4061439b565b613a8a9082614161565b905060ff8416613a9a868461439b565b901c9150613aaa82617fe061439b565b613ab49082614161565b905060ff8416613ac4868461439b565b901c9150613ad48261042061439b565b613ade9082614161565b905060ff8416613aee868461439b565b901c9150613afd82602161439b565b613b079082614161565b905060ff8416613b17868461439b565b901c9150613b2682600161439b565b613b309082614161565b9050600160ff85161b85613b546f0688589cc0e9505e2f2fee558000000084614407565b613b5e9190614161565b6115929190614161565b600080610100831015613b9b575b6001831115613b9657600192831c92613b8f90826144d9565b9050613b76565b613bcf565b60805b60ff811615613bcd57600160ff82161b8410613bc25760ff81169390931c92908117905b60011c607f16613b9e565b505b92915050565b73ffffffffffffffffffffffffffffffffffffffff81168114613bf757600080fd5b50565b60008060408385031215613c0d57600080fd5b8235613c1881613bd5565b91506020830135613c2881613bd5565b809150509250929050565b60008083601f840112613c4557600080fd5b50813567ffffffffffffffff811115613c5d57600080fd5b6020830191508360208260051b8501011115610f9b57600080fd5b60008060008060008060a08789031215613c9157600080fd5b8635613c9c81613bd5565b95506020870135613cac81613bd5565b94506040870135613cbc81613bd5565b935060608701359250608087013567ffffffffffffffff811115613cdf57600080fd5b613ceb89828a01613c33565b979a9699509497509295939492505050565b6020808252825182820181905260009190848201906040850190845b81811015613d3557835183529284019291840191600101613d19565b50909695505050505050565b600080600060608486031215613d5657600080fd5b8335613d6181613bd5565b92506020840135613d7181613bd5565b91506040840135613d8181613bd5565b809150509250925092565b600060208284031215613d9e57600080fd5b8135612cd281613bd5565b600080600060608486031215613dbe57600080fd5b8335613dc981613bd5565b92506020840135613dd981613bd5565b929592945050506040919091013590565b63ffffffff81168114613bf757600080fd5b60008060008060008060c08789031215613e1557600080fd5b8635955060208701359450604087013593506060870135613e3581613dea565b92506080870135613e4581613dea565b915060a0870135613e5581613dea565b809150509295509295509295565b600080600080600060a08688031215613e7b57600080fd5b853594506020860135935060408601359250606086013591506080860135613ea281613dea565b809150509295509295909350565b600080600080600060808688031215613ec857600080fd5b8535613ed381613bd5565b94506020860135613ee381613bd5565b935060408601359250606086013567ffffffffffffffff811115613f0657600080fd5b613f1288828901613c33565b969995985093965092949392505050565b80356dffffffffffffffffffffffffffff81168114613f4157600080fd5b919050565b600080600080600080600060e0888a031215613f6157600080fd5b8735965060208801359550604088013594506060880135613f8181613dea565b93506080880135613f9181613dea565b9250613f9f60a08901613f23565b9150613fad60c08901613f23565b905092959891949750929550565b600080600060608486031215613fd057600080fd5b505081359360208301359350604090920135919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff82111715614081577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040525050565b60006080828403121561409a57600080fd5b6040516080810181811067ffffffffffffffff821117156140e4577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b8060405250825181526020830151602082015260408301516040820152606083015160608201528091505092915050565b60006020828403121561412757600080fd5b8151612cd281613bd5565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000821982111561417457614174614132565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036141d9576141d9614132565b5060010190565b600080600080608085870312156141f657600080fd5b845161420181613dea565b602086015190945061421281613dea565b604086015190935061422381613dea565b606086015190925061423481613dea565b939692955090935050565b600060033d11156142585760046000803e5060005160e01c5b90565b600060443d10156142695790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc803d016004833e81513d67ffffffffffffffff81602484011181841117156142b757505050505090565b82850191508151818111156142cf5750505050505090565b843d87010160208285010111156142e95750505050505090565b6142f860208286010187614016565b509095945050505050565b600060208083528351808285015260005b8181101561433057858101830151858201604001528201614314565b81811115614342576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b600063ffffffff8381169083168181101561439357614393614132565b039392505050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156143d3576143d3614132565b500290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082614416576144166143d8565b500490565b60008282101561442d5761442d614132565b500390565b60008161444157614441614132565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b600060ff821660ff84168082101561448157614481614132565b90039392505050565b600060ff82168061449d5761449d614132565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0192915050565b6000826144d4576144d46143d8565b500690565b600060ff821660ff84168060ff038211156144f6576144f6614132565b019392505050565b600060ff831680614511576145116143d8565b8060ff8416049150509291505056fea2646970667358221220492422c82f5dd3118fc3eb78d17c7dc1f39df2acd87f7aef851267c38ea840f364736f6c634300080f0033";

export class WeightedFormula__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WeightedFormula> {
    return super.deploy(overrides || {}) as Promise<WeightedFormula>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WeightedFormula {
    return super.attach(address) as WeightedFormula;
  }
  connect(signer: Signer): WeightedFormula__factory {
    return super.connect(signer) as WeightedFormula__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WeightedFormulaInterface {
    return new utils.Interface(_abi) as WeightedFormulaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WeightedFormula {
    return new Contract(address, _abi, signerOrProvider) as WeightedFormula;
  }
}
