/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TToken, TTokenInterface } from "../TToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "whom",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000eef38038062000eef83398101604081905262000034916200020d565b60006200004284826200030f565b5060016200005183826200030f565b50600280543361010081026001600160a81b0319909216919091176012179091556200007e908262000087565b50505062000402565b6001600160a01b038216600090815260046020526040902054620000ac90826200011c565b6001600160a01b038316600090815260046020526040902055600354620000d490826200011c565b6003556040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6000826200012b8382620003db565b91508110156200013a57600080fd5b92915050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200016857600080fd5b81516001600160401b038082111562000185576200018562000140565b604051601f8301601f19908116603f01168101908282118183101715620001b057620001b062000140565b81604052838152602092508683858801011115620001cd57600080fd5b600091505b83821015620001f15785820183015181830184015290820190620001d2565b83821115620002035760008385830101525b9695505050505050565b6000806000606084860312156200022357600080fd5b83516001600160401b03808211156200023b57600080fd5b620002498783880162000156565b945060208601519150808211156200026057600080fd5b506200026f8682870162000156565b925050604084015190509250925092565b600181811c908216806200029557607f821691505b602082108103620002b657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200030a57600081815260208120601f850160051c81016020861015620002e55750805b601f850160051c820191505b818110156200030657828155600101620002f1565b5050505b505050565b81516001600160401b038111156200032b576200032b62000140565b62000343816200033c845462000280565b84620002bc565b602080601f8311600181146200037b5760008415620003625750858301515b600019600386901b1c1916600185901b17855562000306565b600085815260208120601f198616915b82811015620003ac578886015182559484019460019091019084016200038b565b5085821015620003cb5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008219821115620003fd57634e487b7160e01b600052601160045260246000fd5b500190565b610add80620004126000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c806340c10f191161008157806395d89b411161005b57806395d89b41146101a5578063a9059cbb146101ad578063dd62ed3e146101c057600080fd5b806340c10f191461014957806342966c681461015c57806370a082311461016f57600080fd5b806318160ddd116100b257806318160ddd1461010f57806323b872dd14610121578063313ce5671461013457600080fd5b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d6610206565b6040516100e39190610886565b60405180910390f35b6100ff6100fa366004610922565b610298565b60405190151581526020016100e3565b6003545b6040519081526020016100e3565b6100ff61012f36600461094c565b610312565b60025460405160ff90911681526020016100e3565b6100ff610157366004610922565b61050b565b6100ff61016a366004610988565b610520565b61011361017d3660046109a1565b73ffffffffffffffffffffffffffffffffffffffff1660009081526004602052604090205490565b6100d6610615565b6100ff6101bb366004610922565b610624565b6101136101ce3660046109c3565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260056020908152604080832093909416825291909152205490565b606060008054610215906109f6565b80601f0160208091040260200160405190810160405280929190818152602001828054610241906109f6565b801561028e5780601f106102635761010080835404028352916020019161028e565b820191906000526020600020905b81548152906001019060200180831161027157829003601f168201915b5050505050905090565b33600081815260056020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103009086815260200190565b60405180910390a35060015b92915050565b60003373ffffffffffffffffffffffffffffffffffffffff85161480610368575073ffffffffffffffffffffffffffffffffffffffff841660009081526005602090815260408083203384529091529020548211155b6103d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f217370656e64657200000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6103de84848461062d565b3373ffffffffffffffffffffffffffffffffffffffff851614801590610454575073ffffffffffffffffffffffffffffffffffffffff841660009081526005602090815260408083203384529091529020547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff14155b156105015773ffffffffffffffffffffffffffffffffffffffff841660009081526005602090815260408083203384529091529020546104949083610798565b73ffffffffffffffffffffffffffffffffffffffff85811660009081526005602090815260408083203380855290835292819020859055519384529186169290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a35b5060019392505050565b600061051783836107b3565b50600192915050565b3060009081526004602052604081205482111561059b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ca9060208082526004908201527f2162616c00000000000000000000000000000000000000000000000000000000604082015260600190565b306000908152600460205260409020546105b59083610798565b306000908152600460205260409020556003546105d29083610798565b60035560405182815260009030907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3506001919050565b606060018054610215906109f6565b60006105173384845b73ffffffffffffffffffffffffffffffffffffffff83166000908152600460205260409020548111156106be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ca9060208082526004908201527f2162616c00000000000000000000000000000000000000000000000000000000604082015260600190565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600460205260409020546106ee9082610798565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260046020526040808220939093559084168152205461072a908261086b565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526004602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061078b9085815260200190565b60405180910390a3505050565b6000826107a58382610a78565b915081111561030c57600080fd5b73ffffffffffffffffffffffffffffffffffffffff82166000908152600460205260409020546107e3908261086b565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260046020526040902055600354610816908261086b565b60035560405181815273ffffffffffffffffffffffffffffffffffffffff8316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6000826108788382610a8f565b915081101561030c57600080fd5b600060208083528351808285015260005b818110156108b357858101830151858201604001528201610897565b818111156108c5576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461091d57600080fd5b919050565b6000806040838503121561093557600080fd5b61093e836108f9565b946020939093013593505050565b60008060006060848603121561096157600080fd5b61096a846108f9565b9250610978602085016108f9565b9150604084013590509250925092565b60006020828403121561099a57600080fd5b5035919050565b6000602082840312156109b357600080fd5b6109bc826108f9565b9392505050565b600080604083850312156109d657600080fd5b6109df836108f9565b91506109ed602084016108f9565b90509250929050565b600181811c90821680610a0a57607f821691505b602082108103610a43577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015610a8a57610a8a610a49565b500390565b60008219821115610aa257610aa2610a49565b50019056fea26469706673582212203fbd9f2dc38e34d981e39d5450f8724527bb974161d1a051bdf71972e8f2b3d664736f6c634300080f0033";

export class TToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    name_: string,
    symbol_: string,
    amt: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TToken> {
    return super.deploy(
      name_,
      symbol_,
      amt,
      overrides || {}
    ) as Promise<TToken>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    amt: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, amt, overrides || {});
  }
  attach(address: string): TToken {
    return super.attach(address) as TToken;
  }
  connect(signer: Signer): TToken__factory {
    return super.connect(signer) as TToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TTokenInterface {
    return new utils.Interface(_abi) as TTokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): TToken {
    return new Contract(address, _abi, signerOrProvider) as TToken;
  }
}
